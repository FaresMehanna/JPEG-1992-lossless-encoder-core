/* Generated by Yosys 0.8+     369 (git sha1 ea0e0722, clang 10.0.1 -fPIC -Os) */

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(pixel_in1, pixel_in2, pixel_in3, pixel_in4, new_row, rst, clk, pixel_out1, pixel_out2, pixel_out3, pixel_out4, predic_out1, predic_out2, predic_out3, predic_out4, valid_out, valid_in);
  (* src = "./migen_src/predictor.py:47" *)
  reg [15:0] \$next\buff1 ;
  (* src = "./migen_src/predictor.py:48" *)
  reg [15:0] \$next\buff2 ;
  (* src = "./migen_src/predictor.py:49" *)
  reg [15:0] \$next\buff3 ;
  (* src = "./migen_src/predictor.py:50" *)
  reg [15:0] \$next\buff4 ;
  (* src = "./migen_src/predictor.py:53" *)
  reg [15:0] \$next\lbuff1 ;
  (* src = "./migen_src/predictor.py:54" *)
  reg [15:0] \$next\lbuff2 ;
  (* src = "./migen_src/predictor.py:55" *)
  reg [15:0] \$next\lbuff3 ;
  (* src = "./migen_src/predictor.py:56" *)
  reg [15:0] \$next\lbuff4 ;
  (* src = "./migen_src/predictor.py:21" *)
  reg [15:0] \$next\pixel_out1 ;
  (* src = "./migen_src/predictor.py:22" *)
  reg [15:0] \$next\pixel_out2 ;
  (* src = "./migen_src/predictor.py:23" *)
  reg [15:0] \$next\pixel_out3 ;
  (* src = "./migen_src/predictor.py:24" *)
  reg [15:0] \$next\pixel_out4 ;
  (* src = "./migen_src/predictor.py:27" *)
  reg [15:0] \$next\predic_out1 ;
  (* src = "./migen_src/predictor.py:28" *)
  reg [15:0] \$next\predic_out2 ;
  (* src = "./migen_src/predictor.py:29" *)
  reg [15:0] \$next\predic_out3 ;
  (* src = "./migen_src/predictor.py:30" *)
  reg [15:0] \$next\predic_out4 ;
  (* src = "./migen_src/predictor.py:34" *)
  reg \$next\valid_out ;
  (* init = 16'h0800 *)
  (* src = "./migen_src/predictor.py:47" *)
  reg [15:0] buff1 = 16'h0800;
  (* init = 16'h0800 *)
  (* src = "./migen_src/predictor.py:48" *)
  reg [15:0] buff2 = 16'h0800;
  (* init = 16'h0800 *)
  (* src = "./migen_src/predictor.py:49" *)
  reg [15:0] buff3 = 16'h0800;
  (* init = 16'h0800 *)
  (* src = "./migen_src/predictor.py:50" *)
  reg [15:0] buff4 = 16'h0800;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input clk;
  (* init = 16'h0800 *)
  (* src = "./migen_src/predictor.py:53" *)
  reg [15:0] lbuff1 = 16'h0800;
  (* init = 16'h0800 *)
  (* src = "./migen_src/predictor.py:54" *)
  reg [15:0] lbuff2 = 16'h0800;
  (* init = 16'h0800 *)
  (* src = "./migen_src/predictor.py:55" *)
  reg [15:0] lbuff3 = 16'h0800;
  (* init = 16'h0800 *)
  (* src = "./migen_src/predictor.py:56" *)
  reg [15:0] lbuff4 = 16'h0800;
  (* src = "./migen_src/predictor.py:18" *)
  input new_row;
  (* src = "./migen_src/predictor.py:12" *)
  input [15:0] pixel_in1;
  (* src = "./migen_src/predictor.py:13" *)
  input [15:0] pixel_in2;
  (* src = "./migen_src/predictor.py:14" *)
  input [15:0] pixel_in3;
  (* src = "./migen_src/predictor.py:15" *)
  input [15:0] pixel_in4;
  (* init = 16'h0000 *)
  (* src = "./migen_src/predictor.py:21" *)
  output [15:0] pixel_out1;
  reg [15:0] pixel_out1 = 16'h0000;
  (* init = 16'h0000 *)
  (* src = "./migen_src/predictor.py:22" *)
  output [15:0] pixel_out2;
  reg [15:0] pixel_out2 = 16'h0000;
  (* init = 16'h0000 *)
  (* src = "./migen_src/predictor.py:23" *)
  output [15:0] pixel_out3;
  reg [15:0] pixel_out3 = 16'h0000;
  (* init = 16'h0000 *)
  (* src = "./migen_src/predictor.py:24" *)
  output [15:0] pixel_out4;
  reg [15:0] pixel_out4 = 16'h0000;
  (* init = 16'h0000 *)
  (* src = "./migen_src/predictor.py:27" *)
  output [15:0] predic_out1;
  reg [15:0] predic_out1 = 16'h0000;
  (* init = 16'h0000 *)
  (* src = "./migen_src/predictor.py:28" *)
  output [15:0] predic_out2;
  reg [15:0] predic_out2 = 16'h0000;
  (* init = 16'h0000 *)
  (* src = "./migen_src/predictor.py:29" *)
  output [15:0] predic_out3;
  reg [15:0] predic_out3 = 16'h0000;
  (* init = 16'h0000 *)
  (* src = "./migen_src/predictor.py:30" *)
  output [15:0] predic_out4;
  reg [15:0] predic_out4 = 16'h0000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "./migen_src/predictor.py:33" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "./migen_src/predictor.py:34" *)
  output valid_out;
  reg valid_out = 1'h0;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      predic_out4 <= \$next\predic_out4 ;
  always @(posedge clk)
      predic_out3 <= \$next\predic_out3 ;
  always @(posedge clk)
      predic_out2 <= \$next\predic_out2 ;
  always @(posedge clk)
      predic_out1 <= \$next\predic_out1 ;
  always @(posedge clk)
      pixel_out4 <= \$next\pixel_out4 ;
  always @(posedge clk)
      pixel_out3 <= \$next\pixel_out3 ;
  always @(posedge clk)
      pixel_out2 <= \$next\pixel_out2 ;
  always @(posedge clk)
      pixel_out1 <= \$next\pixel_out1 ;
  always @(posedge clk)
      buff4 <= \$next\buff4 ;
  always @(posedge clk)
      buff3 <= \$next\buff3 ;
  always @(posedge clk)
      buff2 <= \$next\buff2 ;
  always @(posedge clk)
      buff1 <= \$next\buff1 ;
  always @(posedge clk)
      lbuff4 <= \$next\lbuff4 ;
  always @(posedge clk)
      lbuff3 <= \$next\lbuff3 ;
  always @(posedge clk)
      lbuff2 <= \$next\lbuff2 ;
  always @(posedge clk)
      lbuff1 <= \$next\lbuff1 ;
  always @* begin
    \$next\pixel_out1  = pixel_out1;
    casez (valid_in)
      1'h1:
          \$next\pixel_out1  = pixel_in1;
    endcase
    casez (rst)
      1'h1:
          \$next\pixel_out1  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\pixel_out2  = pixel_out2;
    casez (valid_in)
      1'h1:
          \$next\pixel_out2  = pixel_in2;
    endcase
    casez (rst)
      1'h1:
          \$next\pixel_out2  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\lbuff3  = lbuff3;
    casez (valid_in)
      1'h1:
          casez (new_row)
            1'h1:
                \$next\lbuff3  = pixel_in3;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff3  = 16'h0800;
    endcase
  end
  always @* begin
    \$next\lbuff4  = lbuff4;
    casez (valid_in)
      1'h1:
          casez (new_row)
            1'h1:
                \$next\lbuff4  = pixel_in4;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff4  = 16'h0800;
    endcase
  end
  always @* begin
    \$next\buff1  = buff1;
    casez (valid_in)
      1'h1:
          \$next\buff1  = pixel_in1;
    endcase
    casez (rst)
      1'h1:
          \$next\buff1  = 16'h0800;
    endcase
  end
  always @* begin
    \$next\buff2  = buff2;
    casez (valid_in)
      1'h1:
          \$next\buff2  = pixel_in2;
    endcase
    casez (rst)
      1'h1:
          \$next\buff2  = 16'h0800;
    endcase
  end
  always @* begin
    \$next\buff3  = buff3;
    casez (valid_in)
      1'h1:
          \$next\buff3  = pixel_in3;
    endcase
    casez (rst)
      1'h1:
          \$next\buff3  = 16'h0800;
    endcase
  end
  always @* begin
    \$next\buff4  = buff4;
    casez (valid_in)
      1'h1:
          \$next\buff4  = pixel_in4;
    endcase
    casez (rst)
      1'h1:
          \$next\buff4  = 16'h0800;
    endcase
  end
  always @* begin
    \$next\valid_out  = valid_out;
    \$next\valid_out  = valid_in;
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\pixel_out3  = pixel_out3;
    casez (valid_in)
      1'h1:
          \$next\pixel_out3  = pixel_in3;
    endcase
    casez (rst)
      1'h1:
          \$next\pixel_out3  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\pixel_out4  = pixel_out4;
    casez (valid_in)
      1'h1:
          \$next\pixel_out4  = pixel_in4;
    endcase
    casez (rst)
      1'h1:
          \$next\pixel_out4  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\predic_out1  = predic_out1;
    casez (valid_in)
      1'h1:
          casez (new_row)
            1'h1:
                \$next\predic_out1  = lbuff1;
            1'hz:
                \$next\predic_out1  = buff1;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\predic_out1  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\predic_out2  = predic_out2;
    casez (valid_in)
      1'h1:
          casez (new_row)
            1'h1:
                \$next\predic_out2  = lbuff2;
            1'hz:
                \$next\predic_out2  = buff2;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\predic_out2  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\predic_out3  = predic_out3;
    casez (valid_in)
      1'h1:
          casez (new_row)
            1'h1:
                \$next\predic_out3  = lbuff3;
            1'hz:
                \$next\predic_out3  = buff3;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\predic_out3  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\predic_out4  = predic_out4;
    casez (valid_in)
      1'h1:
          casez (new_row)
            1'h1:
                \$next\predic_out4  = lbuff4;
            1'hz:
                \$next\predic_out4  = buff4;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\predic_out4  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\lbuff1  = lbuff1;
    casez (valid_in)
      1'h1:
          casez (new_row)
            1'h1:
                \$next\lbuff1  = pixel_in1;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff1  = 16'h0800;
    endcase
  end
  always @* begin
    \$next\lbuff2  = lbuff2;
    casez (valid_in)
      1'h1:
          casez (new_row)
            1'h1:
                \$next\lbuff2  = pixel_in2;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff2  = 16'h0800;
    endcase
  end
endmodule

