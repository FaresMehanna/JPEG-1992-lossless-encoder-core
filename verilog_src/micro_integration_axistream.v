/* Generated by Yosys 0.8+     369 (git sha1 ea0e0722, clang 10.0.1 -fPIC -Os) */

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.normalize.anonymous" *)
(* generator = "nMigen" *)
module anonymous(val_in, val_in_mns, rst, clk, val_out, ssss, valid_o, valid);
  wire \$1 ;
  wire [13:0] \$11 ;
  wire [13:0] \$12 ;
  wire [13:0] \$14 ;
  wire [13:0] \$15 ;
  wire [13:0] \$17 ;
  wire [13:0] \$18 ;
  wire \$20 ;
  wire \$22 ;
  wire [13:0] \$24 ;
  wire [13:0] \$25 ;
  wire [13:0] \$27 ;
  wire [13:0] \$28 ;
  wire \$3 ;
  wire [13:0] \$30 ;
  wire [13:0] \$31 ;
  wire \$33 ;
  wire \$35 ;
  wire \$37 ;
  wire [13:0] \$39 ;
  wire [13:0] \$40 ;
  wire [13:0] \$42 ;
  wire [13:0] \$43 ;
  wire [13:0] \$45 ;
  wire [13:0] \$46 ;
  wire \$48 ;
  wire \$5 ;
  wire \$50 ;
  wire [13:0] \$52 ;
  wire [13:0] \$53 ;
  wire [13:0] \$55 ;
  wire [13:0] \$56 ;
  wire [13:0] \$58 ;
  wire [13:0] \$59 ;
  wire \$61 ;
  wire \$63 ;
  wire \$65 ;
  wire \$67 ;
  wire \$69 ;
  wire \$7 ;
  wire \$71 ;
  wire \$73 ;
  wire \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$81 ;
  wire \$83 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:70" *)
  reg [4:0] \$next\ssss ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:69" *)
  reg [11:0] \$next\val_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:72" *)
  reg \$next\valid_o ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:70" *)
  output [4:0] ssss;
  reg [4:0] ssss = 5'h00;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:68" *)
  input [12:0] val_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:73" *)
  input [12:0] val_in_mns;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:69" *)
  output [11:0] val_out;
  reg [11:0] val_out = 12'h000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:71" *)
  input valid;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:72" *)
  output valid_o;
  reg valid_o = 1'h0;
  assign \$9  = val_in_mns[12:1] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 12'hfff;
  assign \$12  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 1'h1;
  assign \$15  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 2'h3;
  assign \$18  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 3'h7;
  assign \$1  = val_in[12] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:92" *) 1'h1;
  assign \$20  = val_in_mns[12:5] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 8'hff;
  assign \$22  = val_in_mns[12:4] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 9'h1ff;
  assign \$25  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 4'hf;
  assign \$28  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 5'h1f;
  assign \$31  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 6'h3f;
  assign \$33  = val_in_mns[12:9] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 4'hf;
  assign \$35  = val_in_mns[12:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 5'h1f;
  assign \$37  = val_in_mns[12:7] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 6'h3f;
  assign \$3  = val_in_mns[12:6] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 7'h7f;
  assign \$40  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 7'h7f;
  assign \$43  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 8'hff;
  assign \$46  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 9'h1ff;
  assign \$48  = val_in_mns[12:11] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 2'h3;
  assign \$50  = val_in_mns[12:10] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 3'h7;
  assign \$53  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 10'h3ff;
  assign \$56  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 11'h7ff;
  assign \$5  = val_in_mns[12:3] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 10'h3ff;
  assign \$59  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 12'hfff;
  assign \$61  = val_in[12] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:92" *) 1'h1;
  assign \$63  = val_in_mns[12:6] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 7'h7f;
  assign \$65  = val_in_mns[12:3] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 10'h3ff;
  assign \$67  = val_in_mns[12:2] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 11'h7ff;
  assign \$69  = val_in_mns[12:1] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 12'hfff;
  assign \$71  = val_in_mns[12:5] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 8'hff;
  assign \$73  = val_in_mns[12:4] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 9'h1ff;
  assign \$75  = val_in_mns[12:9] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 4'hf;
  assign \$77  = val_in_mns[12:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 5'h1f;
  assign \$7  = val_in_mns[12:2] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 11'h7ff;
  assign \$79  = val_in_mns[12:7] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 6'h3f;
  assign \$81  = val_in_mns[12:11] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 2'h3;
  assign \$83  = val_in_mns[12:10] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 3'h7;
  always @(posedge clk)
      valid_o <= \$next\valid_o ;
  always @(posedge clk)
      ssss <= \$next\ssss ;
  always @(posedge clk)
      val_out <= \$next\val_out ;
  always @* begin
    \$next\val_out  = val_out;
    casez (valid)
      1'h1:
          casez (\$1 )
            1'h1:
                casez (\$3 )
                  1'h1:
                      casez (\$5 )
                        1'h1:
                            casez (\$7 )
                              1'h1:
                                  casez (\$9 )
                                    1'h1:
                                        \$next\val_out  = \$11 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$14 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$17 [11:0];
                            endcase
                        1'hz:
                            casez (\$20 )
                              1'h1:
                                  casez (\$22 )
                                    1'h1:
                                        \$next\val_out  = \$24 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$27 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$30 [11:0];
                            endcase
                      endcase
                  1'hz:
                      casez (\$33 )
                        1'h1:
                            casez (\$35 )
                              1'h1:
                                  casez (\$37 )
                                    1'h1:
                                        \$next\val_out  = \$39 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$42 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$45 [11:0];
                            endcase
                        1'hz:
                            casez (\$48 )
                              1'h1:
                                  casez (\$50 )
                                    1'h1:
                                        \$next\val_out  = \$52 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$55 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$58 [11:0];
                            endcase
                      endcase
                endcase
            1'hz:
                \$next\val_out  = val_in[11:0];
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\val_out  = 12'h000;
    endcase
  end
  always @* begin
    \$next\ssss  = ssss;
    casez (valid)
      1'h1:
          casez (\$61 )
            1'h1:
                casez (\$63 )
                  1'h1:
                      casez (\$65 )
                        1'h1:
                            casez (\$67 )
                              1'h1:
                                  casez (\$69 )
                                    1'h1:
                                        \$next\ssss  = 5'h01;
                                    1'hz:
                                        \$next\ssss  = 5'h02;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h03;
                            endcase
                        1'hz:
                            casez (\$71 )
                              1'h1:
                                  casez (\$73 )
                                    1'h1:
                                        \$next\ssss  = 5'h04;
                                    1'hz:
                                        \$next\ssss  = 5'h05;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h06;
                            endcase
                      endcase
                  1'hz:
                      casez (\$75 )
                        1'h1:
                            casez (\$77 )
                              1'h1:
                                  casez (\$79 )
                                    1'h1:
                                        \$next\ssss  = 5'h07;
                                    1'hz:
                                        \$next\ssss  = 5'h08;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h09;
                            endcase
                        1'hz:
                            casez (\$81 )
                              1'h1:
                                  casez (\$83 )
                                    1'h1:
                                        \$next\ssss  = 5'h0a;
                                    1'hz:
                                        \$next\ssss  = 5'h0b;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h0c;
                            endcase
                      endcase
                endcase
            1'hz:
              begin
                \$next\ssss  = 5'h00;
                casez ({ val_in[0], val_in[1], val_in[2], val_in[3], val_in[4], val_in[5], val_in[6], val_in[7], val_in[8], val_in[9], val_in[10], val_in[11] })
                  12'bzzzzzzzzzzz1:
                      \$next\ssss  = 5'h0c;
                  12'bzzzzzzzzzz1z:
                      \$next\ssss  = 5'h0b;
                  12'bzzzzzzzzz1zz:
                      \$next\ssss  = 5'h0a;
                  12'bzzzzzzzz1zzz:
                      \$next\ssss  = 5'h09;
                  12'bzzzzzzz1zzzz:
                      \$next\ssss  = 5'h08;
                  12'bzzzzzz1zzzzz:
                      \$next\ssss  = 5'h07;
                  12'bzzzzz1zzzzzz:
                      \$next\ssss  = 5'h06;
                  12'bzzzz1zzzzzzz:
                      \$next\ssss  = 5'h05;
                  12'bzzz1zzzzzzzz:
                      \$next\ssss  = 5'h04;
                  12'bzz1zzzzzzzzz:
                      \$next\ssss  = 5'h03;
                  12'bz1zzzzzzzzzz:
                      \$next\ssss  = 5'h02;
                  12'b1zzzzzzzzzzz:
                      \$next\ssss  = 5'h01;
                endcase
              end
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\ssss  = 5'h00;
    endcase
  end
  always @* begin
    \$next\valid_o  = valid_o;
    \$next\valid_o  = valid;
    casez (rst)
      1'h1:
          \$next\valid_o  = 1'h0;
    endcase
  end
  assign \$11  = \$12 ;
  assign \$14  = \$15 ;
  assign \$17  = \$18 ;
  assign \$24  = \$25 ;
  assign \$27  = \$28 ;
  assign \$30  = \$31 ;
  assign \$39  = \$40 ;
  assign \$42  = \$43 ;
  assign \$45  = \$46 ;
  assign \$52  = \$53 ;
  assign \$55  = \$56 ;
  assign \$58  = \$59 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.encode.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$1 (ssss, val_in, rp_data, rst, clk, rp_addr, enc_out, enc_ctr, valid);
  wire [32:0] \$1 ;
  wire [32:0] \$2 ;
  wire [5:0] \$4 ;
  wire [5:0] \$5 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:44" *)
  reg [4:0] \$next\enc_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:43" *)
  reg [27:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:38" *)
  reg [4:0] \$next\rp_addr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:58" *)
  reg [4:0] \$next\ssss_late ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:60" *)
  reg [11:0] \$next\val_in_late ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:54" *)
  reg \$next\valid_late ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:44" *)
  output [4:0] enc_ctr;
  reg [4:0] enc_ctr = 5'h00;
  (* init = 28'h0000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:43" *)
  output [27:0] enc_out;
  reg [27:0] enc_out = 28'h0000000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:38" *)
  output [4:0] rp_addr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:39" *)
  input [32:0] rp_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:42" *)
  input [4:0] ssss;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:58" *)
  reg [4:0] ssss_late = 5'h00;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:41" *)
  input [11:0] val_in;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:60" *)
  reg [11:0] val_in_late = 12'h000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:45" *)
  input valid;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:54" *)
  reg valid_late = 1'h0;
  assign \$2  = rp_data | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:86" *) val_in_late;
  assign \$5  = rp_data[32:28] + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:87" *) ssss_late[3:0];
  always @(posedge clk)
      enc_ctr <= \$next\enc_ctr ;
  always @(posedge clk)
      enc_out <= \$next\enc_out ;
  always @(posedge clk)
      val_in_late <= \$next\val_in_late ;
  always @(posedge clk)
      ssss_late <= \$next\ssss_late ;
  always @(posedge clk)
      valid_late <= \$next\valid_late ;
  always @* begin
    \$next\valid_late  = valid_late;
    \$next\valid_late  = valid;
    casez (rst)
      1'h1:
          \$next\valid_late  = 1'h0;
    endcase
  end
  always @* begin
    \$next\ssss_late  = ssss_late;
    \$next\ssss_late  = ssss;
    casez (rst)
      1'h1:
          \$next\ssss_late  = 5'h00;
    endcase
  end
  always @* begin
    \$next\val_in_late  = val_in_late;
    \$next\val_in_late  = val_in;
    casez (rst)
      1'h1:
          \$next\val_in_late  = 12'h000;
    endcase
  end
  always @* begin
    \$next\rp_addr  = 5'h00;
    \$next\rp_addr  = ssss;
  end
  always @* begin
    \$next\enc_out  = enc_out;
    casez (valid_late)
      1'h1:
          \$next\enc_out  = \$1 [27:0];
    endcase
    casez (rst)
      1'h1:
          \$next\enc_out  = 28'h0000000;
    endcase
  end
  always @* begin
    \$next\enc_ctr  = enc_ctr;
    casez (valid_late)
      1'h1:
          \$next\enc_ctr  = \$4 [4:0];
    endcase
    casez (rst)
      1'h1:
          \$next\enc_ctr  = 5'h00;
    endcase
  end
  assign \$1  = \$2 ;
  assign \$4  = \$5 ;
  assign rp_addr = \$next\rp_addr ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter" *)
(* generator = "nMigen" *)
module converter(valid_out, enc_out, enc_out_ctr, out_end, rst, clk, valid_in, latch_output, enc_in, enc_in_ctr, in_end, close_full);
  wire \$1 ;
  wire \$11 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$3 ;
  wire \$31 ;
  wire [11:0] \$33 ;
  wire \$35 ;
  wire \$37 ;
  wire \$39 ;
  wire [5:0] \$41 ;
  wire [5:0] \$42 ;
  wire [5:0] \$44 ;
  wire [5:0] \$45 ;
  wire \$47 ;
  wire \$49 ;
  wire \$5 ;
  wire \$51 ;
  wire \$7 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:32" *)
  reg [11:0] \$next\enc_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:33" *)
  reg [3:0] \$next\enc_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:58" *)
  reg [4:0] \$next\enc_out_ctr_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:53" *)
  reg [23:0] \$next\enc_out_latch ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:57" *)
  reg [27:0] \$next\enc_out_reg ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [2:0] \$next\fsm_state ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:34" *)
  reg \$next\in_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:25" *)
  reg \$next\latch_output ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:54" *)
  reg \$next\out_end_latch ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:59" *)
  reg \$next\out_end_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:35" *)
  reg \$next\valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:60" *)
  reg \$next\valid_out_reg ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:36" *)
  input close_full;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:32" *)
  output [11:0] enc_in;
  reg [11:0] enc_in = 12'h000;
  (* init = 4'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:33" *)
  output [3:0] enc_in_ctr;
  reg [3:0] enc_in_ctr = 4'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:26" *)
  input [27:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:27" *)
  input [4:0] enc_out_ctr;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:58" *)
  reg [4:0] enc_out_ctr_reg = 5'h00;
  (* init = 24'h000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:53" *)
  reg [23:0] enc_out_latch = 24'h000000;
  (* init = 28'h0000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:57" *)
  reg [27:0] enc_out_reg = 28'h0000000;
  (* init = 3'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [2:0] fsm_state = 3'h0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:34" *)
  output in_end;
  reg in_end = 1'h0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:25" *)
  output latch_output;
  reg latch_output = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:28" *)
  input out_end;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:54" *)
  reg out_end_latch = 1'h0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:59" *)
  reg out_end_reg = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:35" *)
  output valid_in;
  reg valid_in = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:29" *)
  input valid_out;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:60" *)
  reg valid_out_reg = 1'h0;
  assign \$9  = valid_out & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:88" *) \$7 ;
  assign \$11  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 4'hc;
  assign \$13  = close_full == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:80" *) 1'h0;
  assign \$15  = valid_out_reg & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:80" *) \$13 ;
  assign \$17  = close_full == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:88" *) 1'h0;
  assign \$1  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 4'hc;
  assign \$19  = valid_out & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:88" *) \$17 ;
  assign \$21  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 4'hc;
  assign \$23  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:134" *) 5'h18;
  assign \$25  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:141" *) 5'h1c;
  assign \$27  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 4'hc;
  assign \$29  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:134" *) 5'h18;
  assign \$31  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:141" *) 5'h1c;
  assign \$33  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) enc_out_reg[27:24];
  assign \$35  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 4'hc;
  assign \$37  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:134" *) 5'h18;
  assign \$3  = close_full == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:80" *) 1'h0;
  assign \$39  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:141" *) 5'h1c;
  assign \$42  = enc_out_ctr_reg - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:137" *) 4'hc;
  assign \$45  = enc_out_ctr_reg - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:144" *) 5'h18;
  assign \$47  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 4'hc;
  assign \$49  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 4'hc;
  assign \$51  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 4'hc;
  assign \$5  = valid_out_reg & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:80" *) \$3 ;
  assign \$7  = close_full == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:88" *) 1'h0;
  always @(posedge clk)
      out_end_latch <= \$next\out_end_latch ;
  always @(posedge clk)
      enc_out_latch <= \$next\enc_out_latch ;
  always @(posedge clk)
      in_end <= \$next\in_end ;
  always @(posedge clk)
      enc_in_ctr <= \$next\enc_in_ctr ;
  always @(posedge clk)
      enc_in <= \$next\enc_in ;
  always @(posedge clk)
      valid_out_reg <= \$next\valid_out_reg ;
  always @(posedge clk)
      out_end_reg <= \$next\out_end_reg ;
  always @(posedge clk)
      enc_out_ctr_reg <= \$next\enc_out_ctr_reg ;
  always @(posedge clk)
      enc_out_reg <= \$next\enc_out_reg ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      latch_output <= \$next\latch_output ;
  always @(posedge clk)
      valid_in <= \$next\valid_in ;
  always @* begin
    \$next\valid_in  = valid_in;
    casez (fsm_state)
      3'h0:
          \$next\valid_in  = 1'h0;
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$1 )
                  1'h1:
                      \$next\valid_in  = 1'h1;
                  1'hz:
                      \$next\valid_in  = 1'h1;
                endcase
            1'hz:
                \$next\valid_in  = 1'h0;
          endcase
      3'h3:
          \$next\valid_in  = 1'h1;
      3'h4:
          \$next\valid_in  = 1'h1;
    endcase
    casez (rst)
      1'h1:
          \$next\valid_in  = 1'h0;
    endcase
  end
  always @* begin
    \$next\latch_output  = latch_output;
    casez (fsm_state)
      3'h0:
        begin
          \$next\latch_output  = 1'h0;
          casez ({ \$9 , \$5  })
            2'bz1:
                \$next\latch_output  = 1'h1;
            2'b1z:
                \$next\latch_output  = 1'h1;
          endcase
        end
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$11 )
                  1'h1:
                      casez (close_full)
                        1'h1:
                            \$next\latch_output  = 1'h0;
                      endcase
                  1'hz:
                      \$next\latch_output  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\latch_output  = 1'h0;
    endcase
  end
  always @* begin
    \$next\enc_out_latch  = enc_out_latch;
    casez (fsm_state)
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$49 )
                  1'h1:
                      /* empty */;
                  1'hz:
                      \$next\enc_out_latch  = enc_out_reg[23:0];
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\enc_out_latch  = 24'h000000;
    endcase
  end
  always @* begin
    \$next\out_end_latch  = out_end_latch;
    casez (fsm_state)
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$51 )
                  1'h1:
                      /* empty */;
                  1'hz:
                      \$next\out_end_latch  = out_end_reg;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\out_end_latch  = 1'h0;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      3'h0:
          casez ({ \$19 , \$15  })
            2'bz1:
                \$next\fsm_state  = 3'h1;
            2'b1z:
                \$next\fsm_state  = 3'h2;
          endcase
      3'h2:
          \$next\fsm_state  = 3'h1;
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$21 )
                  1'h1:
                      casez (close_full)
                        1'h1:
                            \$next\fsm_state  = 3'h0;
                      endcase
                  1'hz:
                      casez ({ \$25 , \$23  })
                        2'bz1:
                            \$next\fsm_state  = 3'h3;
                        2'b1z:
                            \$next\fsm_state  = 3'h4;
                      endcase
                endcase
          endcase
      3'h3:
          \$next\fsm_state  = 3'h0;
      3'h4:
          \$next\fsm_state  = 3'h3;
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 3'h0;
    endcase
  end
  always @* begin
    \$next\enc_out_reg  = enc_out_reg;
    casez (fsm_state)
      3'h2:
          \$next\enc_out_reg  = enc_out;
      3'h1:
          \$next\enc_out_reg  = enc_out;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_out_reg  = 28'h0000000;
    endcase
  end
  always @* begin
    \$next\enc_out_ctr_reg  = enc_out_ctr_reg;
    casez (fsm_state)
      3'h2:
          \$next\enc_out_ctr_reg  = enc_out_ctr;
      3'h1:
          \$next\enc_out_ctr_reg  = enc_out_ctr;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_out_ctr_reg  = 5'h00;
    endcase
  end
  always @* begin
    \$next\out_end_reg  = out_end_reg;
    casez (fsm_state)
      3'h2:
          \$next\out_end_reg  = out_end;
      3'h1:
          \$next\out_end_reg  = out_end;
    endcase
    casez (rst)
      1'h1:
          \$next\out_end_reg  = 1'h0;
    endcase
  end
  always @* begin
    \$next\valid_out_reg  = valid_out_reg;
    casez (fsm_state)
      3'h2:
          \$next\valid_out_reg  = valid_out;
      3'h1:
          \$next\valid_out_reg  = valid_out;
    endcase
    casez (rst)
      1'h1:
          \$next\valid_out_reg  = 1'h0;
    endcase
  end
  always @* begin
    \$next\enc_in  = enc_in;
    casez (fsm_state)
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$27 )
                  1'h1:
                      \$next\enc_in  = enc_out_reg[11:0];
                  1'hz:
                      casez ({ \$31 , \$29  })
                        2'bz1:
                            \$next\enc_in  = enc_out_reg[23:12];
                        2'b1z:
                            \$next\enc_in  = \$33 ;
                      endcase
                endcase
          endcase
      3'h3:
          \$next\enc_in  = enc_out_latch[11:0];
      3'h4:
          \$next\enc_in  = enc_out_latch[23:12];
    endcase
    casez (rst)
      1'h1:
          \$next\enc_in  = 12'h000;
    endcase
  end
  always @* begin
    \$next\enc_in_ctr  = enc_in_ctr;
    casez (fsm_state)
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$35 )
                  1'h1:
                      \$next\enc_in_ctr  = enc_out_ctr_reg[3:0];
                  1'hz:
                    begin
                      \$next\enc_in_ctr  = 4'hc;
                      casez ({ \$39 , \$37  })
                        2'bz1:
                            \$next\enc_in_ctr  = \$41 [3:0];
                        2'b1z:
                            \$next\enc_in_ctr  = \$44 [3:0];
                      endcase
                    end
                endcase
          endcase
      3'h3:
          \$next\enc_in_ctr  = 4'hc;
      3'h4:
          \$next\enc_in_ctr  = 4'hc;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_in_ctr  = 4'h0;
    endcase
  end
  always @* begin
    \$next\in_end  = in_end;
    casez (fsm_state)
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$47 )
                  1'h1:
                      \$next\in_end  = out_end_reg;
                  1'hz:
                      \$next\in_end  = 1'h0;
                endcase
          endcase
      3'h3:
          \$next\in_end  = out_end_latch;
      3'h4:
          \$next\in_end  = out_end_latch;
    endcase
    casez (rst)
      1'h1:
          \$next\in_end  = 1'h0;
    endcase
  end
  assign \$41  = \$42 ;
  assign \$44  = \$45 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter_fifo" *)
(* generator = "nMigen" *)
module converter_fifo(enc_in, enc_in_ctr, in_end, latch_output, rst, clk, valid_out, enc_out, enc_out_ctr, out_end, close_full, valid_in);
  wire \$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:33" *)
  reg \$next\close_full ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:37" *)
  reg [11:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:38" *)
  reg [3:0] \$next\enc_out_ctr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  reg [16:0] \$next\fifo_din ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  reg \$next\fifo_re ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  reg \$next\fifo_we ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:39" *)
  reg \$next\out_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:40" *)
  reg \$next\valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:32" *)
  reg \$next\writable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:33" *)
  output close_full;
  reg close_full = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:28" *)
  input [11:0] enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:29" *)
  input [3:0] enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:37" *)
  output [11:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:38" *)
  output [3:0] enc_out_ctr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  wire [16:0] fifo_din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  wire [16:0] fifo_dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  wire [10:0] fifo_level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  wire fifo_re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  wire fifo_readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  wire fifo_we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  wire fifo_writable;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:30" *)
  input in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:36" *)
  input latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:39" *)
  output out_end;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:31" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:40" *)
  output valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:32" *)
  wire writable;
  assign \$1  = fifo_level > (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:72" *) 10'h3fc;
  always @(posedge clk)
      close_full <= \$next\close_full ;
  \fifo$2  fifo (
    .clk(clk),
    .din(fifo_din),
    .dout(fifo_dout),
    .level(fifo_level),
    .re(fifo_re),
    .readable(fifo_readable),
    .rst(rst),
    .we(fifo_we),
    .writable(fifo_writable)
  );
  always @* begin
    \$next\fifo_we  = 1'h0;
    \$next\fifo_we  = valid_in;
  end
  always @* begin
    \$next\fifo_din  = 17'h00000;
    \$next\fifo_din  = { in_end, enc_in_ctr, enc_in };
  end
  always @* begin
    \$next\writable  = 1'h0;
    \$next\writable  = fifo_writable;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = fifo_readable;
  end
  always @* begin
    \$next\enc_out  = 12'h000;
    \$next\enc_out  = fifo_dout[11:0];
  end
  always @* begin
    \$next\enc_out_ctr  = 4'h0;
    \$next\enc_out_ctr  = fifo_dout[15:12];
  end
  always @* begin
    \$next\out_end  = 1'h0;
    \$next\out_end  = fifo_dout[16];
  end
  always @* begin
    \$next\fifo_re  = 1'h0;
    \$next\fifo_re  = latch_output;
  end
  always @* begin
    \$next\close_full  = close_full;
    \$next\close_full  = \$1 ;
    casez (rst)
      1'h1:
          \$next\close_full  = 1'h0;
    endcase
  end
  assign fifo_re = \$next\fifo_re ;
  assign out_end = \$next\out_end ;
  assign enc_out_ctr = \$next\enc_out_ctr ;
  assign enc_out = \$next\enc_out ;
  assign valid_out = \$next\valid_out ;
  assign writable = \$next\writable ;
  assign fifo_din = \$next\fifo_din ;
  assign fifo_we = \$next\fifo_we ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter_fifo_reg" *)
(* generator = "nMigen" *)
module converter_fifo_reg(enc_left, enc_ctr_left, out_end_left, valid_left, o_busy, enc_right, enc_ctr_right, out_end_right, valid_right, i_busy);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:30" *)
  reg [3:0] \$next\enc_ctr_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:29" *)
  reg [11:0] \$next\enc_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:21" *)
  reg \$next\o_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:31" *)
  reg \$next\out_end_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:32" *)
  reg \$next\valid_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:23" *)
  input [3:0] enc_ctr_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:30" *)
  output [3:0] enc_ctr_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:22" *)
  input [11:0] enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:29" *)
  output [11:0] enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:28" *)
  input i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:21" *)
  output o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:24" *)
  input out_end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:31" *)
  output out_end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:25" *)
  input valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:32" *)
  output valid_right;
  always @* begin
    \$next\o_busy  = 1'h0;
    \$next\o_busy  = i_busy;
  end
  always @* begin
    \$next\enc_right  = 12'h000;
    \$next\enc_right  = enc_left;
  end
  always @* begin
    \$next\enc_ctr_right  = 4'h0;
    \$next\enc_ctr_right  = enc_ctr_left;
  end
  always @* begin
    \$next\out_end_right  = 1'h0;
    \$next\out_end_right  = out_end_left;
  end
  always @* begin
    \$next\valid_right  = 1'h0;
    \$next\valid_right  = valid_left;
  end
  assign valid_right = \$next\valid_right ;
  assign out_end_right = \$next\out_end_right ;
  assign enc_ctr_right = \$next\enc_ctr_right ;
  assign enc_right = \$next\enc_right ;
  assign o_busy = \$next\o_busy ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter_reg" *)
(* generator = "nMigen" *)
module converter_reg(left_enc_ctr, left_end, left_valid, right_close_full, right_enc, right_enc_ctr, right_end, right_valid, left_close_full, left_enc);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:23" *)
  reg \$next\left_close_full ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:26" *)
  reg [11:0] \$next\right_enc ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:27" *)
  reg [3:0] \$next\right_enc_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:28" *)
  reg \$next\right_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:29" *)
  reg \$next\right_valid ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:23" *)
  output left_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:19" *)
  input [11:0] left_enc;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:20" *)
  input [3:0] left_enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:21" *)
  input left_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:22" *)
  input left_valid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:30" *)
  input right_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:26" *)
  output [11:0] right_enc;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:27" *)
  output [3:0] right_enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:28" *)
  output right_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:29" *)
  output right_valid;
  always @* begin
    \$next\right_enc  = 12'h000;
    \$next\right_enc  = left_enc;
  end
  always @* begin
    \$next\right_enc_ctr  = 4'h0;
    \$next\right_enc_ctr  = left_enc_ctr;
  end
  always @* begin
    \$next\right_end  = 1'h0;
    \$next\right_end  = left_end;
  end
  always @* begin
    \$next\right_valid  = 1'h0;
    \$next\right_valid  = left_valid;
  end
  always @* begin
    \$next\left_close_full  = 1'h0;
    \$next\left_close_full  = right_close_full;
  end
  assign left_close_full = \$next\left_close_full ;
  assign right_valid = \$next\right_valid ;
  assign right_end = \$next\right_end ;
  assign right_enc_ctr = \$next\right_enc_ctr ;
  assign right_enc = \$next\right_enc ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.difference" *)
(* generator = "nMigen" *)
module difference(pixel_in, predic_in, rst, clk, val_out, \val_out$1 , valid_out, valid_in);
  wire [12:0] \$2 ;
  wire [13:0] \$4 ;
  wire [12:0] \$5 ;
  wire [13:0] \$7 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:23" *)
  reg [12:0] \$next\val_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:24" *)
  reg [12:0] \$next\val_out$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:27" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:21" *)
  input [11:0] pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:22" *)
  input [11:0] predic_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* init = 13'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:23" *)
  output [12:0] val_out;
  reg [12:0] val_out = 13'h0000;
  (* init = 13'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:24" *)
  output [12:0] \val_out$1 ;
  reg [12:0] \val_out$1  = 13'h0000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:26" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:27" *)
  output valid_out;
  reg valid_out = 1'h0;
  assign \$2  = pixel_in - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:43" *) predic_in;
  assign \$5  = pixel_in - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:44" *) predic_in;
  assign \$7  = \$5  - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:44" *) 1'h1;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      \val_out$1  <= \$next\val_out$1 ;
  always @(posedge clk)
      val_out <= \$next\val_out ;
  always @* begin
    \$next\val_out  = val_out;
    casez (valid_in)
      1'h1:
          \$next\val_out  = \$2 ;
    endcase
    casez (rst)
      1'h1:
          \$next\val_out  = 13'h0000;
    endcase
  end
  always @* begin
    \$next\val_out$1  = \val_out$1 ;
    casez (valid_in)
      1'h1:
          \$next\val_out$1  = \$4 [12:0];
    endcase
    casez (rst)
      1'h1:
          \$next\val_out$1  = 13'h0000;
    endcase
  end
  always @* begin
    \$next\valid_out  = valid_out;
    \$next\valid_out  = valid_in;
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  assign \$4  = \$7 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.encode" *)
(* generator = "nMigen" *)
module encode(valid_in, ssss, rst, clk, enc_out, enc_ctr, valid_out, val_in);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:110" *)
  reg [4:0] \$next\enc_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:109" *)
  reg [27:0] \$next\enc_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  reg [3:0] \$next\mem_r_addr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:39" *)
  reg [32:0] \$next\rp_data ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:42" *)
  reg [4:0] \$next\ssss$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:41" *)
  reg [11:0] \$next\val_in$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:45" *)
  reg \$next\valid ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:146" *)
  reg \$next\valid_late ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:113" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:110" *)
  output [4:0] enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:44" *)
  wire [4:0] \enc_ctr$4 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:109" *)
  output [27:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:43" *)
  wire [27:0] \enc_out$3 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  wire [3:0] mem_r_addr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:83" *)
  wire [32:0] mem_r_data;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:38" *)
  wire [4:0] rp_addr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:39" *)
  wire [32:0] rp_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:106" *)
  input [4:0] ssss;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:42" *)
  wire [4:0] \ssss$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:105" *)
  input [11:0] val_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:41" *)
  wire [11:0] \val_in$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:45" *)
  wire valid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:112" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:146" *)
  reg valid_late = 1'h0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:113" *)
  output valid_out;
  reg valid_out = 1'h0;
  \anonymous$1  \$5  (
    .clk(clk),
    .enc_ctr(\enc_ctr$4 ),
    .enc_out(\enc_out$3 ),
    .rp_addr(rp_addr),
    .rp_data(rp_data),
    .rst(rst),
    .ssss(\ssss$1 ),
    .val_in(\val_in$2 ),
    .valid(valid)
  );
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      valid_late <= \$next\valid_late ;
  reg [32:0] mem [12:0];
  initial begin
    mem[0] = 33'h04000000e;
    mem[1] = 33'h030000000;
    mem[2] = 33'h030000004;
    mem[3] = 33'h030000010;
    mem[4] = 33'h030000030;
    mem[5] = 33'h030000080;
    mem[6] = 33'h030000140;
    mem[7] = 33'h030000300;
    mem[8] = 33'h050001e00;
    mem[9] = 33'h060007c00;
    mem[10] = 33'h07001f800;
    mem[11] = 33'h08007f000;
    mem[12] = 33'h0901fe000;
  end
  reg [3:0] _0_;
  always @(posedge clk) begin
    _0_ <= \$next\mem_r_addr ;
  end
  assign mem_r_data = mem[_0_];
  always @* begin
    \$next\val_in$2  = 12'h000;
    \$next\val_in$2  = val_in;
  end
  always @* begin
    \$next\valid  = 1'h0;
    \$next\valid  = valid_in;
  end
  always @* begin
    \$next\ssss$1  = 5'h00;
    \$next\ssss$1  = ssss;
  end
  always @* begin
    \$next\mem_r_addr  = 4'h0;
    \$next\mem_r_addr  = rp_addr[3:0];
  end
  always @* begin
    \$next\rp_data  = 33'h000000000;
    \$next\rp_data  = mem_r_data;
  end
  always @* begin
    \$next\enc_out  = 28'h0000000;
    \$next\enc_out  = \enc_out$3 ;
  end
  always @* begin
    \$next\enc_ctr  = 5'h00;
    \$next\enc_ctr  = \enc_ctr$4 ;
  end
  always @* begin
    \$next\valid_late  = valid_late;
    \$next\valid_late  = valid_in;
    casez (rst)
      1'h1:
          \$next\valid_late  = 1'h0;
    endcase
  end
  always @* begin
    \$next\valid_out  = valid_out;
    \$next\valid_out  = valid_late;
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  assign enc_ctr = \$next\enc_ctr ;
  assign enc_out = \$next\enc_out ;
  assign rp_data = \$next\rp_data ;
  assign mem_r_addr = \$next\mem_r_addr ;
  assign \ssss$1  = \$next\ssss$1 ;
  assign valid = \$next\valid ;
  assign \val_in$2  = \$next\val_in$2 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.end_delayer" *)
(* generator = "nMigen" *)
module end_delayer(rst, clk, out_sig, in_sig);
  wire [3:0] \$1 ;
  wire [3:0] \$2 ;
  wire \$4 ;
  wire \$6 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:11" *)
  reg \$next\out_sig ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:19" *)
  reg \$next\out_val ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:12" *)
  reg [2:0] \$next\timer ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:18" *)
  reg \$next\timer_start ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:10" *)
  input in_sig;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:11" *)
  output out_sig;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:19" *)
  reg out_val = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* init = 3'h4 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:12" *)
  reg [2:0] timer = 3'h4;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:18" *)
  reg timer_start = 1'h0;
  assign \$2  = timer - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:27" *) 1'h1;
  assign \$4  = timer == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:29" *) 1'h0;
  assign \$6  = \$4  | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:29" *) out_val;
  always @(posedge clk)
      out_val <= \$next\out_val ;
  always @(posedge clk)
      timer <= \$next\timer ;
  always @(posedge clk)
      timer_start <= \$next\timer_start ;
  always @* begin
    \$next\timer_start  = timer_start;
    casez (in_sig)
      1'h1:
          \$next\timer_start  = 1'h1;
    endcase
    casez (rst)
      1'h1:
          \$next\timer_start  = 1'h0;
    endcase
  end
  always @* begin
    \$next\timer  = timer;
    casez (timer_start)
      1'h1:
          \$next\timer  = \$1 [2:0];
    endcase
    casez (rst)
      1'h1:
          \$next\timer  = 3'h4;
    endcase
  end
  always @* begin
    \$next\out_val  = out_val;
    \$next\out_val  = \$6 ;
    casez (rst)
      1'h1:
          \$next\out_val  = 1'h0;
    endcase
  end
  always @* begin
    \$next\out_sig  = 1'h0;
    \$next\out_sig  = out_val;
  end
  assign \$1  = \$2 ;
  assign out_sig = \$next\out_sig ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.lj92_pipeline_fifo.fifo" *)
(* generator = "nMigen" *)
module fifo(we, re, rst, clk, dout, readable, level, din);
  wire \$1 ;
  wire \$3 ;
  wire \$5 ;
  wire [9:0] \$7 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  reg [33:0] \$next\dout ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  reg [9:0] \$next\level ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  reg \$next\readable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  reg [33:0] \$next\unbuffered_din ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  reg \$next\unbuffered_re ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  reg \$next\unbuffered_replace ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  reg \$next\unbuffered_we ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  reg \$next\writable ;
  (* init = 1'h0 *)
  reg \$verilog_initial_trigger  = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  input [33:0] din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  output [33:0] dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  output [9:0] level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  input re;
  (* init = 1'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  output readable;
  reg readable = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  wire [33:0] unbuffered_din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  wire [33:0] unbuffered_dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  wire [8:0] unbuffered_level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  wire unbuffered_re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  wire unbuffered_readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  wire unbuffered_replace;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  wire unbuffered_we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  wire unbuffered_writable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  input we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  wire writable;
  assign \$1  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) readable;
  assign \$3  = \$1  | (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) re;
  assign \$5  = unbuffered_readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) \$3 ;
  assign \$7  = unbuffered_level + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:263" *) readable;
  always @(posedge clk)
      readable <= \$next\readable ;
  unbuffered unbuffered (
    .clk(clk),
    .din(unbuffered_din),
    .dout(unbuffered_dout),
    .level(unbuffered_level),
    .re(unbuffered_re),
    .readable(unbuffered_readable),
    .replace(unbuffered_replace),
    .rst(rst),
    .we(unbuffered_we),
    .writable(unbuffered_writable)
  );
  always @* begin
    \$next\unbuffered_din  = 34'h000000000;
    \$next\unbuffered_din  = din;
  end
  always @* begin
    \$next\unbuffered_we  = 1'h0;
    \$next\unbuffered_we  = we;
  end
  always @* begin
    \$next\writable  = 1'h0;
    \$next\writable  = unbuffered_writable;
  end
  always @* begin
    \$next\unbuffered_replace  = 1'h0;
    \$next\unbuffered_replace  = 1'h0;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    \$next\dout  = 34'h000000000;
    \$next\dout  = unbuffered_dout;
  end
  always @* begin
    \$next\unbuffered_re  = 1'h0;
    \$next\unbuffered_re  = \$5 ;
  end
  always @* begin
    \$next\readable  = readable;
    casez ({ re, unbuffered_re })
      2'bz1:
          \$next\readable  = 1'h1;
      2'b1z:
          \$next\readable  = 1'h0;
    endcase
    casez (rst)
      1'h1:
          \$next\readable  = 1'h0;
    endcase
  end
  always @* begin
    \$next\level  = 10'h000;
    \$next\level  = \$7 ;
  end
  assign level = \$next\level ;
  assign unbuffered_re = \$next\unbuffered_re ;
  assign dout = \$next\dout ;
  assign unbuffered_replace = \$next\unbuffered_replace ;
  assign writable = \$next\writable ;
  assign unbuffered_we = \$next\unbuffered_we ;
  assign unbuffered_din = \$next\unbuffered_din ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter_fifo.fifo" *)
(* generator = "nMigen" *)
module \fifo$2 (we, re, rst, clk, writable, dout, readable, level, din);
  wire \$1 ;
  wire \$3 ;
  wire \$5 ;
  wire [10:0] \$7 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  reg [16:0] \$next\dout ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  reg [10:0] \$next\level ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  reg \$next\readable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  reg [16:0] \$next\unbuffered_din ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  reg \$next\unbuffered_re ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  reg \$next\unbuffered_replace ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  reg \$next\unbuffered_we ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  reg \$next\writable ;
  (* init = 1'h0 *)
  reg \$verilog_initial_trigger  = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  input [16:0] din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  output [16:0] dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  output [10:0] level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  input re;
  (* init = 1'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  output readable;
  reg readable = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  wire [16:0] unbuffered_din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  wire [16:0] unbuffered_dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  wire [9:0] unbuffered_level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  wire unbuffered_re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  wire unbuffered_readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  wire unbuffered_replace;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  wire unbuffered_we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  wire unbuffered_writable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  input we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  output writable;
  assign \$1  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) readable;
  assign \$3  = \$1  | (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) re;
  assign \$5  = unbuffered_readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) \$3 ;
  assign \$7  = unbuffered_level + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:263" *) readable;
  always @(posedge clk)
      readable <= \$next\readable ;
  \unbuffered$3  unbuffered (
    .clk(clk),
    .din(unbuffered_din),
    .dout(unbuffered_dout),
    .level(unbuffered_level),
    .re(unbuffered_re),
    .readable(unbuffered_readable),
    .replace(unbuffered_replace),
    .rst(rst),
    .we(unbuffered_we),
    .writable(unbuffered_writable)
  );
  always @* begin
    \$next\unbuffered_din  = 17'h00000;
    \$next\unbuffered_din  = din;
  end
  always @* begin
    \$next\unbuffered_we  = 1'h0;
    \$next\unbuffered_we  = we;
  end
  always @* begin
    \$next\writable  = 1'h0;
    \$next\writable  = unbuffered_writable;
  end
  always @* begin
    \$next\unbuffered_replace  = 1'h0;
    \$next\unbuffered_replace  = 1'h0;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    \$next\dout  = 17'h00000;
    \$next\dout  = unbuffered_dout;
  end
  always @* begin
    \$next\unbuffered_re  = 1'h0;
    \$next\unbuffered_re  = \$5 ;
  end
  always @* begin
    \$next\readable  = readable;
    casez ({ re, unbuffered_re })
      2'bz1:
          \$next\readable  = 1'h1;
      2'b1z:
          \$next\readable  = 1'h0;
    endcase
    casez (rst)
      1'h1:
          \$next\readable  = 1'h0;
    endcase
  end
  always @* begin
    \$next\level  = 11'h000;
    \$next\level  = \$7 ;
  end
  assign level = \$next\level ;
  assign unbuffered_re = \$next\unbuffered_re ;
  assign dout = \$next\dout ;
  assign unbuffered_replace = \$next\unbuffered_replace ;
  assign writable = \$next\writable ;
  assign unbuffered_we = \$next\unbuffered_we ;
  assign unbuffered_din = \$next\unbuffered_din ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.fix_0xff" *)
(* generator = "nMigen" *)
module fix_0xff(valid_in, data_in, zeros, ones, rst, clk, valid_out, data_out, data_out_ctr, o_busy, i_busy);
  wire \$1 ;
  wire \$101 ;
  wire \$103 ;
  wire \$105 ;
  wire \$107 ;
  wire \$109 ;
  wire \$11 ;
  wire \$111 ;
  wire [31:0] \$113 ;
  wire [31:0] \$115 ;
  wire [31:0] \$117 ;
  wire \$119 ;
  wire \$121 ;
  wire \$123 ;
  wire \$125 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$3 ;
  wire [31:0] \$31 ;
  wire [31:0] \$33 ;
  wire [31:0] \$35 ;
  wire \$37 ;
  wire \$39 ;
  wire \$41 ;
  wire [31:0] \$43 ;
  wire [31:0] \$45 ;
  wire [31:0] \$47 ;
  wire \$49 ;
  wire \$5 ;
  wire \$51 ;
  wire \$53 ;
  wire \$55 ;
  wire \$57 ;
  wire \$59 ;
  wire \$61 ;
  wire \$63 ;
  wire \$65 ;
  wire \$67 ;
  wire \$69 ;
  wire \$7 ;
  wire \$71 ;
  wire \$73 ;
  wire \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$81 ;
  wire \$83 ;
  wire \$85 ;
  wire \$87 ;
  wire \$89 ;
  wire \$9 ;
  wire \$91 ;
  wire \$93 ;
  wire \$95 ;
  wire \$97 ;
  wire \$99 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:40" *)
  reg [31:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:41" *)
  reg [2:0] \$next\data_out_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:60" *)
  reg [2:0] \$next\data_out_ctr_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:59" *)
  reg [31:0] \$next\data_out_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:61" *)
  reg \$next\data_out_valid ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:46" *)
  reg \$next\o_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:45" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *)
  input [15:0] data_in;
  (* init = 32'd0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:40" *)
  output [31:0] data_out;
  reg [31:0] data_out = 32'd0;
  (* init = 3'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:41" *)
  output [2:0] data_out_ctr;
  reg [2:0] data_out_ctr = 3'h0;
  (* init = 3'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:60" *)
  reg [2:0] data_out_ctr_reg = 3'h0;
  (* init = 32'd0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:59" *)
  reg [31:0] data_out_reg = 32'd0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:61" *)
  reg data_out_valid = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:47" *)
  input i_busy;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:46" *)
  output o_busy;
  reg o_busy = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:57" *)
  input [7:0] ones;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:44" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:45" *)
  output valid_out;
  reg valid_out = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:56" *)
  input [7:0] zeros;
  assign \$9  = \$5  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) \$7 ;
  assign \$99  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:93" *) 1'h1;
  assign \$101  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:93" *) 1'h1;
  assign \$103  = \$99  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:93" *) \$101 ;
  assign \$105  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:97" *) 1'h0;
  assign \$107  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$109  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$111  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$113  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:17" *) { data_in[15:8], ones, zeros };
  assign \$115  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:23" *) { ones, zeros, data_in[7:0] };
  assign \$117  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *) data_in;
  assign \$11  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:68" *) 1'h0;
  assign \$119  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:97" *) 1'h0;
  assign \$121  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$123  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$125  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$13  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$15  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$17  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$1  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$19  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$21  = \$17  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) \$19 ;
  assign \$23  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:68" *) 1'h0;
  assign \$25  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$27  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$29  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$31  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:17" *) { data_in[15:8], ones, zeros };
  assign \$33  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:23" *) { ones, zeros, data_in[7:0] };
  assign \$35  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *) data_in;
  assign \$37  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$3  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$39  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$41  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$43  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:17" *) { data_in[15:8], ones, zeros };
  assign \$45  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:23" *) { ones, zeros, data_in[7:0] };
  assign \$47  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *) data_in;
  assign \$49  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$51  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$53  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$55  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$57  = \$53  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) \$55 ;
  assign \$5  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$59  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:68" *) 1'h0;
  assign \$61  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$63  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$65  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$67  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$69  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$71  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$73  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$75  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$77  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$7  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$79  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$81  = \$77  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) \$79 ;
  assign \$83  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:94" *) 1'h1;
  assign \$85  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:94" *) 1'h1;
  assign \$87  = \$83  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:94" *) \$85 ;
  assign \$89  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$91  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$93  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$95  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$97  = \$93  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) \$95 ;
  always @(posedge clk)
      data_out_reg <= \$next\data_out_reg ;
  always @(posedge clk)
      data_out_valid <= \$next\data_out_valid ;
  always @(posedge clk)
      o_busy <= \$next\o_busy ;
  always @(posedge clk)
      data_out_ctr <= \$next\data_out_ctr ;
  always @(posedge clk)
      data_out <= \$next\data_out ;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      data_out_ctr_reg <= \$next\data_out_ctr_reg ;
  always @* begin
    \$next\valid_out  = valid_out;
    casez ({ \$9 , \$3 , \$1  })
      3'bzz1:
          casez (\$11 )
            1'h1:
                \$next\valid_out  = valid_in;
            1'hz:
                \$next\valid_out  = 1'h1;
          endcase
      3'bz1z:
          \$next\valid_out  = valid_in;
    endcase
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out  = data_out;
    casez ({ \$21 , \$15 , \$13  })
      3'bzz1:
          casez (\$23 )
            1'h1:
                casez ({ \$29 , \$27 , \$25  })
                  3'bzz1:
                      \$next\data_out  = { ones, zeros, ones, zeros };
                  3'bz1z:
                      \$next\data_out  = \$31 ;
                  3'b1zz:
                      \$next\data_out  = \$33 ;
                  3'hz:
                      \$next\data_out  = \$35 ;
                endcase
            1'hz:
                \$next\data_out  = data_out_reg;
          endcase
      3'bz1z:
          casez ({ \$41 , \$39 , \$37  })
            3'bzz1:
                \$next\data_out  = { ones, zeros, ones, zeros };
            3'bz1z:
                \$next\data_out  = \$43 ;
            3'b1zz:
                \$next\data_out  = \$45 ;
            3'hz:
                \$next\data_out  = \$47 ;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out  = 32'd0;
    endcase
  end
  always @* begin
    \$next\data_out_ctr  = data_out_ctr;
    casez ({ \$57 , \$51 , \$49  })
      3'bzz1:
          casez (\$59 )
            1'h1:
                casez ({ \$65 , \$63 , \$61  })
                  3'bzz1:
                      \$next\data_out_ctr  = 3'h4;
                  3'bz1z:
                      \$next\data_out_ctr  = 3'h3;
                  3'b1zz:
                      \$next\data_out_ctr  = 3'h3;
                  3'hz:
                      \$next\data_out_ctr  = 3'h2;
                endcase
            1'hz:
                \$next\data_out_ctr  = data_out_ctr_reg;
          endcase
      3'bz1z:
          casez ({ \$71 , \$69 , \$67  })
            3'bzz1:
                \$next\data_out_ctr  = 3'h4;
            3'bz1z:
                \$next\data_out_ctr  = 3'h3;
            3'b1zz:
                \$next\data_out_ctr  = 3'h3;
            3'hz:
                \$next\data_out_ctr  = 3'h2;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_ctr  = 3'h0;
    endcase
  end
  always @* begin
    \$next\o_busy  = o_busy;
    casez ({ \$81 , \$75 , \$73  })
      3'bzz1:
          \$next\o_busy  = 1'h0;
      3'bz1z:
          \$next\o_busy  = 1'h0;
      3'b1zz:
          \$next\o_busy  = \$87 ;
    endcase
    casez (rst)
      1'h1:
          \$next\o_busy  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_valid  = data_out_valid;
    casez ({ \$97 , \$91 , \$89  })
      3'bzz1:
          \$next\data_out_valid  = 1'h0;
      3'bz1z:
          \$next\data_out_valid  = 1'h0;
      3'b1zz:
          \$next\data_out_valid  = \$103 ;
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_valid  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_reg  = data_out_reg;
    casez (\$105 )
      1'h1:
          casez ({ \$111 , \$109 , \$107  })
            3'bzz1:
                \$next\data_out_reg  = { ones, zeros, ones, zeros };
            3'bz1z:
                \$next\data_out_reg  = \$113 ;
            3'b1zz:
                \$next\data_out_reg  = \$115 ;
            3'hz:
                \$next\data_out_reg  = \$117 ;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_reg  = 32'd0;
    endcase
  end
  always @* begin
    \$next\data_out_ctr_reg  = data_out_ctr_reg;
    casez (\$119 )
      1'h1:
          casez ({ \$125 , \$123 , \$121  })
            3'bzz1:
                \$next\data_out_ctr_reg  = 3'h4;
            3'bz1z:
                \$next\data_out_ctr_reg  = 3'h3;
            3'b1zz:
                \$next\data_out_ctr_reg  = 3'h3;
            3'hz:
                \$next\data_out_ctr_reg  = 3'h2;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_ctr_reg  = 3'h0;
    endcase
  end
endmodule

(* \nmigen.hierarchy  = "top.top_module.fix_0xff2" *)
(* generator = "nMigen" *)
module fix_0xff2(valid_in, data_in_ctr, data_in, rst, clk, valid_out, data_out, o_busy, i_busy);
  wire \$1 ;
  wire \$101 ;
  wire \$103 ;
  wire \$105 ;
  wire \$107 ;
  wire \$109 ;
  wire \$11 ;
  wire \$111 ;
  wire \$113 ;
  wire \$115 ;
  wire \$117 ;
  wire \$119 ;
  wire \$121 ;
  wire \$123 ;
  wire \$125 ;
  wire \$127 ;
  wire \$129 ;
  wire \$13 ;
  wire \$131 ;
  wire \$133 ;
  wire \$135 ;
  wire \$137 ;
  wire \$139 ;
  wire \$141 ;
  wire \$143 ;
  wire \$145 ;
  wire \$147 ;
  wire \$149 ;
  wire \$15 ;
  wire \$151 ;
  wire \$153 ;
  wire \$155 ;
  wire \$157 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$3 ;
  wire \$31 ;
  wire \$33 ;
  wire \$35 ;
  wire \$37 ;
  wire \$39 ;
  wire \$41 ;
  wire \$43 ;
  wire [23:0] \$45 ;
  wire [23:0] \$47 ;
  wire [23:0] \$49 ;
  wire \$5 ;
  wire [23:0] \$51 ;
  wire [23:0] \$53 ;
  wire [23:0] \$55 ;
  wire [23:0] \$57 ;
  wire [23:0] \$59 ;
  wire \$61 ;
  wire [23:0] \$63 ;
  wire [23:0] \$65 ;
  wire [23:0] \$67 ;
  wire [23:0] \$69 ;
  wire \$7 ;
  wire \$71 ;
  wire \$73 ;
  wire [23:0] \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$81 ;
  wire \$83 ;
  wire \$85 ;
  wire \$87 ;
  wire \$89 ;
  wire \$9 ;
  wire \$91 ;
  wire \$93 ;
  wire \$95 ;
  wire \$97 ;
  wire \$99 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:110" *)
  reg [1:0] \$next\buffer_count ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:109" *)
  reg [23:0] \$next\buffer_data ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:94" *)
  reg [15:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:112" *)
  reg [15:0] \$next\data_out_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:113" *)
  reg \$next\data_out_valid ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg \$next\fsm_state ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:99" *)
  reg \$next\o_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:98" *)
  reg \$next\valid_out ;
  (* init = 2'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:110" *)
  reg [1:0] buffer_count = 2'h0;
  (* init = 24'h000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:109" *)
  reg [23:0] buffer_data = 24'h000000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:90" *)
  input [31:0] data_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:91" *)
  input [2:0] data_in_ctr;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:94" *)
  output [15:0] data_out;
  reg [15:0] data_out = 16'h0000;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:112" *)
  reg [15:0] data_out_reg = 16'h0000;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:113" *)
  reg data_out_valid = 1'h0;
  (* init = 1'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg fsm_state = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:100" *)
  input i_busy;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:99" *)
  output o_busy;
  reg o_busy = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:97" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:98" *)
  output valid_out;
  reg valid_out = 1'h0;
  assign \$9  = \$5  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$7 ;
  assign \$99  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$101  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$103  = \$99  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$101 ;
  assign \$105  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$107  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:143" *) 1'h1;
  assign \$109  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:143" *) 1'h1;
  assign \$111  = \$107  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:143" *) \$109 ;
  assign \$113  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$115  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$117  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$11  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$119  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$121  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$123  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$125  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$127  = \$123  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$125 ;
  assign \$129  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$131  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$133  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$135  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$137  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$13  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$139  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$141  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$143  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$145  = \$141  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$143 ;
  assign \$147  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:142" *) 1'h1;
  assign \$149  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:142" *) 1'h1;
  assign \$151  = \$147  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:142" *) \$149 ;
  assign \$153  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$155  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$157  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$15  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$17  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$1  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$19  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$21  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$23  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$25  = \$21  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$23 ;
  assign \$27  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$29  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$31  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$33  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$35  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$37  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$3  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$39  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$41  = \$37  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$39 ;
  assign \$43  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$45  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$47  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$49  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$51  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$53  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$55  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$57  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$5  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$59  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$61  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$63  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$65  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$67  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$69  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$71  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$73  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$75  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) buffer_data[7:0];
  assign \$77  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$7  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$79  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$81  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$83  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$85  = \$81  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$83 ;
  assign \$87  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$89  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$91  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$93  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$95  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$97  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  always @(posedge clk)
      data_out_reg <= \$next\data_out_reg ;
  always @(posedge clk)
      data_out_valid <= \$next\data_out_valid ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      o_busy <= \$next\o_busy ;
  always @(posedge clk)
      buffer_count <= \$next\buffer_count ;
  always @(posedge clk)
      buffer_data <= \$next\buffer_data ;
  always @(posedge clk)
      data_out <= \$next\data_out ;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @* begin
    \$next\valid_out  = valid_out;
    casez (fsm_state)
      1'h0:
          casez ({ \$9 , \$3 , \$1  })
            3'bzz1:
                casez (\$11 )
                  1'h1:
                      \$next\valid_out  = valid_in;
                  1'hz:
                      \$next\valid_out  = 1'h1;
                endcase
            3'bz1z:
                \$next\valid_out  = valid_in;
          endcase
      1'h1:
          casez (\$13 )
            1'h1:
                casez (\$15 )
                  1'h1:
                      \$next\valid_out  = 1'h1;
                  1'hz:
                      \$next\valid_out  = 1'h1;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out  = data_out;
    casez (fsm_state)
      1'h0:
          casez ({ \$25 , \$19 , \$17  })
            3'bzz1:
                casez (\$27 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\data_out  = data_in[15:0];
                                    3'h3:
                                        \$next\data_out  = data_in[23:8];
                                    3'h4:
                                        \$next\data_out  = data_in[31:16];
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\data_out  = { buffer_data[7:0], data_in[15:8] };
                                    3'h3:
                                        \$next\data_out  = { buffer_data[7:0], data_in[23:16] };
                                    3'h4:
                                        \$next\data_out  = { buffer_data[7:0], data_in[31:24] };
                                  endcase
                            endcase
                      endcase
                  1'hz:
                      \$next\data_out  = data_out_reg;
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out  = data_in[15:0];
                              3'h3:
                                  \$next\data_out  = data_in[23:8];
                              3'h4:
                                  \$next\data_out  = data_in[31:16];
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out  = { buffer_data[7:0], data_in[15:8] };
                              3'h3:
                                  \$next\data_out  = { buffer_data[7:0], data_in[23:16] };
                              3'h4:
                                  \$next\data_out  = { buffer_data[7:0], data_in[31:24] };
                            endcase
                      endcase
                endcase
          endcase
      1'h1:
          casez (\$29 )
            1'h1:
                casez (\$31 )
                  1'h1:
                      casez (buffer_count)
                        2'h2:
                            \$next\data_out  = buffer_data[15:0];
                        2'h3:
                            \$next\data_out  = buffer_data[23:8];
                      endcase
                  1'hz:
                      \$next\data_out  = data_out_reg;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\buffer_data  = buffer_data;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$41 , \$35 , \$33  })
            3'bzz1:
                casez (\$43 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\buffer_data  = \$45 ;
                                    3'h4:
                                        \$next\buffer_data  = \$47 ;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\buffer_data  = \$49 ;
                                    3'h3:
                                        \$next\buffer_data  = \$51 ;
                                    3'h4:
                                        \$next\buffer_data  = data_in[23:0];
                                  endcase
                            endcase
                      endcase
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_data  = \$53 ;
                              3'h4:
                                  \$next\buffer_data  = \$55 ;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_data  = \$57 ;
                              3'h3:
                                  \$next\buffer_data  = \$59 ;
                              3'h4:
                                  \$next\buffer_data  = data_in[23:0];
                            endcase
                      endcase
                endcase
          endcase
          casez (\$61 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_data  = \$63 ;
                              3'h4:
                                  \$next\buffer_data  = \$65 ;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_data  = \$67 ;
                              3'h3:
                                  \$next\buffer_data  = \$69 ;
                              3'h4:
                                  \$next\buffer_data  = data_in[23:0];
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$71 )
            1'h1:
                casez (\$73 )
                  1'h1:
                      casez (buffer_count)
                        2'h3:
                            \$next\buffer_data  = \$75 ;
                      endcase
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buffer_data  = 24'h000000;
    endcase
  end
  always @* begin
    \$next\buffer_count  = buffer_count;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$85 , \$79 , \$77  })
            3'bzz1:
                casez (\$87 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\buffer_count  = 2'h1;
                                    3'h4:
                                        \$next\buffer_count  = 2'h2;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\buffer_count  = 2'h1;
                                    3'h3:
                                        \$next\buffer_count  = 2'h2;
                                    3'h4:
                                        \$next\buffer_count  = 2'h3;
                                  endcase
                            endcase
                      endcase
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_count  = 2'h1;
                              3'h4:
                                  \$next\buffer_count  = 2'h2;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_count  = 2'h1;
                              3'h3:
                                  \$next\buffer_count  = 2'h2;
                              3'h4:
                                  \$next\buffer_count  = 2'h3;
                            endcase
                      endcase
                endcase
          endcase
          casez (\$89 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_count  = 2'h1;
                              3'h4:
                                  \$next\buffer_count  = 2'h2;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_count  = 2'h1;
                              3'h3:
                                  \$next\buffer_count  = 2'h2;
                              3'h4:
                                  \$next\buffer_count  = 2'h3;
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$91 )
            1'h1:
                casez (\$93 )
                  1'h1:
                      casez (buffer_count)
                        2'h2:
                            \$next\buffer_count  = 2'h0;
                        2'h3:
                            \$next\buffer_count  = 2'h1;
                      endcase
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buffer_count  = 2'h0;
    endcase
  end
  always @* begin
    \$next\o_busy  = o_busy;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$103 , \$97 , \$95  })
            3'bzz1:
              begin
                \$next\o_busy  = 1'h0;
                casez (\$105 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h4:
                                        \$next\o_busy  = 1'h1;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\o_busy  = 1'h1;
                                    3'h4:
                                        \$next\o_busy  = 1'h1;
                                  endcase
                            endcase
                      endcase
                endcase
              end
            3'bz1z:
              begin
                \$next\o_busy  = 1'h0;
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\o_busy  = 1'h1;
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                      endcase
                endcase
              end
            3'b1zz:
                \$next\o_busy  = \$111 ;
          endcase
          casez (\$113 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\o_busy  = 1'h1;
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$115 )
            1'h1:
                casez (\$117 )
                  1'h1:
                      \$next\o_busy  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\o_busy  = 1'h0;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$127 , \$121 , \$119  })
            3'bzz1:
                casez (\$129 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h4:
                                        \$next\fsm_state  = 1'h1;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\fsm_state  = 1'h1;
                                    3'h4:
                                        \$next\fsm_state  = 1'h1;
                                  endcase
                            endcase
                      endcase
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\fsm_state  = 1'h1;
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                      endcase
                endcase
          endcase
          casez (\$131 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\fsm_state  = 1'h1;
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$133 )
            1'h1:
                casez (\$135 )
                  1'h1:
                      \$next\fsm_state  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_valid  = data_out_valid;
    casez (fsm_state)
      1'h0:
          casez ({ \$145 , \$139 , \$137  })
            3'bzz1:
                \$next\data_out_valid  = 1'h0;
            3'bz1z:
                \$next\data_out_valid  = 1'h0;
            3'b1zz:
                \$next\data_out_valid  = \$151 ;
          endcase
      1'h1:
          casez (\$153 )
            1'h1:
                casez (\$155 )
                  1'h1:
                      /* empty */;
                  1'hz:
                      \$next\data_out_valid  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_valid  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_reg  = data_out_reg;
    casez (fsm_state)
      1'h0:
          casez (\$157 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out_reg  = data_in[15:0];
                              3'h3:
                                  \$next\data_out_reg  = data_in[23:8];
                              3'h4:
                                  \$next\data_out_reg  = data_in[31:16];
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out_reg  = { buffer_data[7:0], data_in[15:8] };
                              3'h3:
                                  \$next\data_out_reg  = { buffer_data[7:0], data_in[23:16] };
                              3'h4:
                                  \$next\data_out_reg  = { buffer_data[7:0], data_in[31:24] };
                            endcase
                      endcase
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_reg  = 16'h0000;
    endcase
  end
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.vbits_to_cbits.input_handler" *)
(* generator = "nMigen" *)
module input_handler(enc_in, enc_in_ctr, in_end, dec_buff, rst, clk, new_buff_consum_actv, latch_input, buffer, end_out, new_buff_consum, buff_consum, valid_in);
  wire \$1 ;
  wire [56:0] \$11 ;
  wire [56:0] \$12 ;
  wire [56:0] \$14 ;
  wire \$16 ;
  wire [7:0] \$18 ;
  wire [6:0] \$19 ;
  wire [7:0] \$21 ;
  wire [6:0] \$23 ;
  wire [6:0] \$24 ;
  wire [6:0] \$26 ;
  wire [6:0] \$27 ;
  wire \$29 ;
  wire [6:0] \$3 ;
  wire \$31 ;
  wire \$5 ;
  wire [6:0] \$7 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:114" *)
  reg [5:0] \$next\buff_consum ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:113" *)
  reg [41:0] \$next\buffer ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:139" *)
  reg [3:0] \$next\enc_in_ctr_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:138" *)
  reg [11:0] \$next\enc_in_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:122" *)
  reg \$next\end_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [1:0] \$next\fsm_state ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:140" *)
  reg \$next\in_end_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:134" *)
  reg \$next\inc_buff ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:106" *)
  reg \$next\latch_input ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:115" *)
  reg [5:0] \$next\new_buff_consum ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:116" *)
  reg \$next\new_buff_consum_actv ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:145" *)
  reg \$next\normal_cond ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:141" *)
  reg \$next\valid_in_reg ;
  (* init = 6'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:114" *)
  output [5:0] buff_consum;
  reg [5:0] buff_consum = 6'h00;
  (* init = 42'h00000000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:113" *)
  output [41:0] buffer;
  reg [41:0] buffer = 42'h00000000000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:119" *)
  input dec_buff;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:107" *)
  input [11:0] enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:108" *)
  input [3:0] enc_in_ctr;
  (* init = 4'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:139" *)
  reg [3:0] enc_in_ctr_reg = 4'h0;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:138" *)
  reg [11:0] enc_in_reg = 12'h000;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:122" *)
  output end_out;
  reg end_out = 1'h0;
  (* init = 2'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [1:0] fsm_state = 2'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:109" *)
  input in_end;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:140" *)
  reg in_end_reg = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:134" *)
  wire inc_buff;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:106" *)
  output latch_input;
  reg latch_input = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:115" *)
  output [5:0] new_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:116" *)
  output new_buff_consum_actv;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:145" *)
  reg normal_cond = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:110" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:141" *)
  reg valid_in_reg = 1'h0;
  assign \$9  = \$7  <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:191" *) 5'h1e;
  assign \$12  = buffer <<< (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:160" *) enc_in_ctr_reg;
  assign \$14  = \$12  | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:160" *) enc_in_reg;
  assign \$16  = inc_buff & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:197" *) dec_buff;
  assign \$1  = inc_buff | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:204" *) dec_buff;
  assign \$19  = buff_consum - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:198" *) 5'h10;
  assign \$21  = \$19  + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:198" *) enc_in_ctr_reg;
  assign \$24  = buff_consum - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:200" *) 5'h10;
  assign \$27  = buff_consum + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:202" *) enc_in_ctr_reg;
  assign \$29  = inc_buff | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:204" *) dec_buff;
  assign \$31  = new_buff_consum <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:208" *) 5'h1e;
  assign \$3  = buff_consum + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:191" *) enc_in_ctr_reg;
  assign \$5  = \$3  <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:191" *) 5'h1e;
  assign \$7  = buff_consum + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:191" *) enc_in_ctr_reg;
  always @(posedge clk)
      normal_cond <= \$next\normal_cond ;
  always @(posedge clk)
      buff_consum <= \$next\buff_consum ;
  always @(posedge clk)
      end_out <= \$next\end_out ;
  always @(posedge clk)
      buffer <= \$next\buffer ;
  always @(posedge clk)
      valid_in_reg <= \$next\valid_in_reg ;
  always @(posedge clk)
      in_end_reg <= \$next\in_end_reg ;
  always @(posedge clk)
      enc_in_ctr_reg <= \$next\enc_in_ctr_reg ;
  always @(posedge clk)
      enc_in_reg <= \$next\enc_in_reg ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      latch_input <= \$next\latch_input ;
  always @* begin
    \$next\inc_buff  = 1'h0;
    \$next\inc_buff  = 1'h0;
    casez (fsm_state)
      2'h1:
          casez (valid_in_reg)
            1'h1:
                \$next\inc_buff  = 1'h1;
          endcase
    endcase
  end
  always @* begin
    \$next\new_buff_consum_actv  = 1'h0;
    \$next\new_buff_consum_actv  = 1'h0;
    casez (\$1 )
      1'h1:
          \$next\new_buff_consum_actv  = 1'h1;
    endcase
  end
  always @* begin
    \$next\new_buff_consum  = 6'h00;
    casez ({ inc_buff, dec_buff, \$16  })
      3'bzz1:
          \$next\new_buff_consum  = \$18 [5:0];
      3'bz1z:
          \$next\new_buff_consum  = \$23 [5:0];
      3'b1zz:
          \$next\new_buff_consum  = \$26 [5:0];
    endcase
  end
  always @* begin
    \$next\buff_consum  = buff_consum;
    casez (\$29 )
      1'h1:
          \$next\buff_consum  = new_buff_consum;
    endcase
    casez (rst)
      1'h1:
          \$next\buff_consum  = 6'h00;
    endcase
  end
  always @* begin
    \$next\normal_cond  = normal_cond;
    \$next\normal_cond  = \$31 ;
    casez (rst)
      1'h1:
          \$next\normal_cond  = 1'h0;
    endcase
  end
  always @* begin
    \$next\latch_input  = latch_input;
    casez (fsm_state)
      2'h0:
          casez (normal_cond)
            1'h1:
                casez ({ valid_in, valid_in_reg })
                  2'bz1:
                      \$next\latch_input  = 1'h1;
                  2'b1z:
                      \$next\latch_input  = 1'h1;
                endcase
          endcase
      2'h1:
          casez (valid_in_reg)
            1'h1:
                casez (\$5 )
                  1'h1:
                      \$next\latch_input  = 1'h1;
                  1'hz:
                      \$next\latch_input  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\latch_input  = 1'h0;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      2'h0:
          casez (normal_cond)
            1'h1:
                casez ({ valid_in, valid_in_reg })
                  2'bz1:
                      \$next\fsm_state  = 2'h1;
                  2'b1z:
                      \$next\fsm_state  = 2'h2;
                endcase
          endcase
      2'h2:
          \$next\fsm_state  = 2'h1;
      2'h1:
          casez (valid_in_reg)
            1'h1:
                casez (\$9 )
                  1'h1:
                      /* empty */;
                  1'hz:
                      \$next\fsm_state  = 2'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 2'h0;
    endcase
  end
  always @* begin
    \$next\enc_in_reg  = enc_in_reg;
    casez (fsm_state)
      2'h2:
          \$next\enc_in_reg  = enc_in;
      2'h1:
          \$next\enc_in_reg  = enc_in;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_in_reg  = 12'h000;
    endcase
  end
  always @* begin
    \$next\enc_in_ctr_reg  = enc_in_ctr_reg;
    casez (fsm_state)
      2'h2:
          \$next\enc_in_ctr_reg  = enc_in_ctr;
      2'h1:
          \$next\enc_in_ctr_reg  = enc_in_ctr;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_in_ctr_reg  = 4'h0;
    endcase
  end
  always @* begin
    \$next\in_end_reg  = in_end_reg;
    casez (fsm_state)
      2'h2:
          \$next\in_end_reg  = in_end;
      2'h1:
          \$next\in_end_reg  = in_end;
    endcase
    casez (rst)
      1'h1:
          \$next\in_end_reg  = 1'h0;
    endcase
  end
  always @* begin
    \$next\valid_in_reg  = valid_in_reg;
    casez (fsm_state)
      2'h2:
          \$next\valid_in_reg  = valid_in;
      2'h1:
          \$next\valid_in_reg  = valid_in;
    endcase
    casez (rst)
      1'h1:
          \$next\valid_in_reg  = 1'h0;
    endcase
  end
  always @* begin
    \$next\buffer  = buffer;
    casez (fsm_state)
      2'h1:
          casez (valid_in_reg)
            1'h1:
                \$next\buffer  = \$11 [41:0];
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buffer  = 42'h00000000000;
    endcase
  end
  always @* begin
    \$next\end_out  = end_out;
    casez (fsm_state)
      2'h1:
          casez (valid_in_reg)
            1'h1:
                \$next\end_out  = in_end_reg;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\end_out  = 1'h0;
    endcase
  end
  assign \$11  = \$14 ;
  assign \$18  = \$21 ;
  assign \$23  = \$24 ;
  assign \$26  = \$27 ;
  assign new_buff_consum = \$next\new_buff_consum ;
  assign new_buff_consum_actv = \$next\new_buff_consum_actv ;
  assign inc_buff = \$next\inc_buff ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1" *)
(* generator = "nMigen" *)
module integration_1(pixel_in, rst, clk, enc_out, enc_out_ctr, valid_out, end_of_frame, valid_in);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:21" *)
  reg [11:0] \$next\difference_pixel_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:22" *)
  reg [11:0] \$next\difference_predic_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:26" *)
  reg \$next\difference_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:24" *)
  reg [27:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:25" *)
  reg [4:0] \$next\enc_out_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:106" *)
  reg [4:0] \$next\encode_ssss ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:105" *)
  reg [11:0] \$next\encode_val_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:112" *)
  reg \$next\encode_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:122" *)
  reg [12:0] \$next\normalize_val_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:127" *)
  reg \$next\normalize_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:123" *)
  reg [12:0] \$next\normalize_vals_in_mns ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:24" *)
  reg [27:0] \$next\pipeline_reg_enc_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:25" *)
  reg [4:0] \$next\pipeline_reg_enc_left_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:31" *)
  reg \$next\pipeline_reg_valid_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:40" *)
  reg \$next\predictor_new_row ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:31" *)
  reg [11:0] \$next\predictor_pixel_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:43" *)
  reg \$next\predictor_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:17" *)
  reg [15:0] \$next\signals_height ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:19" *)
  reg \$next\signals_new_input ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:18" *)
  reg [15:0] \$next\signals_width ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:29" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:21" *)
  wire [11:0] difference_pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:22" *)
  wire [11:0] difference_predic_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:23" *)
  wire [12:0] difference_val_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:24" *)
  wire [12:0] \difference_val_out$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:26" *)
  wire difference_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:27" *)
  wire difference_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:24" *)
  output [27:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:25" *)
  output [4:0] enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:110" *)
  wire [4:0] encode_enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:109" *)
  wire [27:0] encode_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:106" *)
  wire [4:0] encode_ssss;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:105" *)
  wire [11:0] encode_val_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:112" *)
  wire encode_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:113" *)
  wire encode_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:21" *)
  output end_of_frame;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:125" *)
  wire [4:0] normalize_ssss;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:122" *)
  wire [12:0] normalize_val_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:124" *)
  wire [11:0] normalize_val_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:127" *)
  wire normalize_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:128" *)
  wire normalize_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:123" *)
  wire [12:0] normalize_vals_in_mns;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:24" *)
  wire [27:0] pipeline_reg_enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:25" *)
  wire [4:0] pipeline_reg_enc_left_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:28" *)
  wire [27:0] pipeline_reg_enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:29" *)
  wire [4:0] pipeline_reg_enc_right_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:31" *)
  wire pipeline_reg_valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:32" *)
  wire pipeline_reg_valid_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:21" *)
  input [11:0] pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:40" *)
  wire predictor_new_row;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:31" *)
  wire [11:0] predictor_pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:34" *)
  wire [11:0] predictor_pixel_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:37" *)
  wire [11:0] predictor_predic_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:43" *)
  wire predictor_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:44" *)
  wire predictor_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:10" *)
  wire [15:0] register_file_height;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:11" *)
  wire [15:0] register_file_width;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:17" *)
  wire [15:0] signals_height;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:19" *)
  wire signals_new_input;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:22" *)
  wire signals_new_row;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:18" *)
  wire [15:0] signals_width;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:28" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:29" *)
  output valid_out;
  difference difference (
    .clk(clk),
    .pixel_in(difference_pixel_in),
    .predic_in(difference_predic_in),
    .rst(rst),
    .val_out(difference_val_out),
    .\val_out$1 (\difference_val_out$1 ),
    .valid_in(difference_valid_in),
    .valid_out(difference_valid_out)
  );
  encode encode (
    .clk(clk),
    .enc_ctr(encode_enc_ctr),
    .enc_out(encode_enc_out),
    .rst(rst),
    .ssss(encode_ssss),
    .val_in(encode_val_in),
    .valid_in(encode_valid_in),
    .valid_out(encode_valid_out)
  );
  normalize normalize (
    .clk(clk),
    .rst(rst),
    .ssss(normalize_ssss),
    .val_in(normalize_val_in),
    .val_out(normalize_val_out),
    .valid_in(normalize_valid_in),
    .valid_out(normalize_valid_out),
    .vals_in_mns(normalize_vals_in_mns)
  );
  pipeline_reg pipeline_reg (
    .enc_left(pipeline_reg_enc_left),
    .enc_left_ctr(pipeline_reg_enc_left_ctr),
    .enc_right(pipeline_reg_enc_right),
    .enc_right_ctr(pipeline_reg_enc_right_ctr),
    .valid_left(pipeline_reg_valid_left),
    .valid_right(pipeline_reg_valid_right)
  );
  predictor predictor (
    .clk(clk),
    .new_row(predictor_new_row),
    .pixel_in(predictor_pixel_in),
    .pixel_out(predictor_pixel_out),
    .predic_out(predictor_predic_out),
    .rst(rst),
    .valid_in(predictor_valid_in),
    .valid_out(predictor_valid_out)
  );
  register_file register_file (
    .clk(clk),
    .height(register_file_height),
    .rst(rst),
    .width(register_file_width)
  );
  signals signals (
    .clk(clk),
    .end_of_frame(end_of_frame),
    .height(signals_height),
    .new_input(signals_new_input),
    .new_row(signals_new_row),
    .rst(rst),
    .width(signals_width)
  );
  always @* begin
    \$next\signals_height  = 16'h0000;
    \$next\signals_height  = register_file_height;
  end
  always @* begin
    \$next\signals_width  = 16'h0000;
    \$next\signals_width  = register_file_width;
  end
  always @* begin
    \$next\normalize_vals_in_mns  = 13'h0000;
    \$next\normalize_vals_in_mns  = \difference_val_out$1 ;
  end
  always @* begin
    \$next\normalize_valid_in  = 1'h0;
    \$next\normalize_valid_in  = difference_valid_out;
  end
  always @* begin
    \$next\encode_val_in  = 12'h000;
    \$next\encode_val_in  = normalize_val_out;
  end
  always @* begin
    \$next\encode_ssss  = 5'h00;
    \$next\encode_ssss  = normalize_ssss;
  end
  always @* begin
    \$next\encode_valid_in  = 1'h0;
    \$next\encode_valid_in  = normalize_valid_out;
  end
  always @* begin
    \$next\pipeline_reg_enc_left  = 28'h0000000;
    \$next\pipeline_reg_enc_left  = encode_enc_out;
  end
  always @* begin
    \$next\pipeline_reg_enc_left_ctr  = 5'h00;
    \$next\pipeline_reg_enc_left_ctr  = encode_enc_ctr;
  end
  always @* begin
    \$next\pipeline_reg_valid_left  = 1'h0;
    \$next\pipeline_reg_valid_left  = encode_valid_out;
  end
  always @* begin
    \$next\enc_out  = 28'h0000000;
    \$next\enc_out  = pipeline_reg_enc_right;
  end
  always @* begin
    \$next\enc_out_ctr  = 5'h00;
    \$next\enc_out_ctr  = pipeline_reg_enc_right_ctr;
  end
  always @* begin
    \$next\signals_new_input  = 1'h0;
    \$next\signals_new_input  = valid_in;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = pipeline_reg_valid_right;
  end
  always @* begin
    \$next\predictor_pixel_in  = 12'h000;
    \$next\predictor_pixel_in  = pixel_in;
  end
  always @* begin
    \$next\predictor_new_row  = 1'h0;
    \$next\predictor_new_row  = signals_new_row;
  end
  always @* begin
    \$next\predictor_valid_in  = 1'h0;
    \$next\predictor_valid_in  = valid_in;
  end
  always @* begin
    \$next\difference_pixel_in  = 12'h000;
    \$next\difference_pixel_in  = predictor_pixel_out;
  end
  always @* begin
    \$next\difference_predic_in  = 12'h000;
    \$next\difference_predic_in  = predictor_predic_out;
  end
  always @* begin
    \$next\difference_valid_in  = 1'h0;
    \$next\difference_valid_in  = predictor_valid_out;
  end
  always @* begin
    \$next\normalize_val_in  = 13'h0000;
    \$next\normalize_val_in  = difference_val_out;
  end
  assign valid_out = \$next\valid_out ;
  assign enc_out_ctr = \$next\enc_out_ctr ;
  assign enc_out = \$next\enc_out ;
  assign pipeline_reg_valid_left = \$next\pipeline_reg_valid_left ;
  assign pipeline_reg_enc_left_ctr = \$next\pipeline_reg_enc_left_ctr ;
  assign pipeline_reg_enc_left = \$next\pipeline_reg_enc_left ;
  assign encode_valid_in = \$next\encode_valid_in ;
  assign encode_ssss = \$next\encode_ssss ;
  assign encode_val_in = \$next\encode_val_in ;
  assign normalize_valid_in = \$next\normalize_valid_in ;
  assign normalize_vals_in_mns = \$next\normalize_vals_in_mns ;
  assign normalize_val_in = \$next\normalize_val_in ;
  assign difference_valid_in = \$next\difference_valid_in ;
  assign difference_predic_in = \$next\difference_predic_in ;
  assign difference_pixel_in = \$next\difference_pixel_in ;
  assign predictor_valid_in = \$next\predictor_valid_in ;
  assign predictor_new_row = \$next\predictor_new_row ;
  assign predictor_pixel_in = \$next\predictor_pixel_in ;
  assign signals_new_input = \$next\signals_new_input ;
  assign signals_width = \$next\signals_width ;
  assign signals_height = \$next\signals_height ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2" *)
(* generator = "nMigen" *)
module integration_2(valid_in, latch_output, rst, clk, nready, enc_out, enc_out_ctr, valid_out, out_end, pixel_in);
  wire \$1 ;
  wire \$11 ;
  wire [27:0] \$13 ;
  wire [4:0] \$15 ;
  wire \$17 ;
  wire \$3 ;
  wire \$5 ;
  wire \$7 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:36" *)
  reg \$next\converter_close_full ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:26" *)
  reg [27:0] \$next\converter_enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:27" *)
  reg [4:0] \$next\converter_enc_out_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:28" *)
  reg [11:0] \$next\converter_fifo_enc_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:29" *)
  reg [3:0] \$next\converter_fifo_enc_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:30" *)
  reg \$next\converter_fifo_in_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:36" *)
  reg \$next\converter_fifo_latch_output ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:23" *)
  reg [3:0] \$next\converter_fifo_reg_enc_ctr_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:22" *)
  reg [11:0] \$next\converter_fifo_reg_enc_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:28" *)
  reg \$next\converter_fifo_reg_i_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:24" *)
  reg \$next\converter_fifo_reg_out_end_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:25" *)
  reg \$next\converter_fifo_reg_valid_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:31" *)
  reg \$next\converter_fifo_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:28" *)
  reg \$next\converter_out_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:19" *)
  reg [11:0] \$next\converter_reg_left_enc ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:20" *)
  reg [3:0] \$next\converter_reg_left_enc_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:21" *)
  reg \$next\converter_reg_left_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:22" *)
  reg \$next\converter_reg_left_valid ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:30" *)
  reg \$next\converter_reg_right_close_full ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:29" *)
  reg \$next\converter_valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:24" *)
  reg [27:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:25" *)
  reg [4:0] \$next\enc_out_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:10" *)
  reg \$next\end_delayer_in_sig ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:21" *)
  reg [11:0] \$next\integration_1_pixel_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:28" *)
  reg \$next\integration_1_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:26" *)
  reg [27:0] \$next\lj92_pipeline_fifo_enc_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:27" *)
  reg [4:0] \$next\lj92_pipeline_fifo_enc_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:28" *)
  reg \$next\lj92_pipeline_fifo_in_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:31" *)
  reg \$next\lj92_pipeline_fifo_latch_output ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:29" *)
  reg \$next\lj92_pipeline_fifo_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:29" *)
  reg \$next\nready ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:32" *)
  reg \$next\out_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:23" *)
  reg [4:0] \$next\pipeline_fifo_reg_enc_ctr_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:22" *)
  reg [27:0] \$next\pipeline_fifo_reg_enc_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:28" *)
  reg \$next\pipeline_fifo_reg_i_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:24" *)
  reg \$next\pipeline_fifo_reg_out_end_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:25" *)
  reg \$next\pipeline_fifo_reg_valid_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:31" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:36" *)
  wire converter_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:32" *)
  wire [11:0] converter_enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:33" *)
  wire [3:0] converter_enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:26" *)
  wire [27:0] converter_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:27" *)
  wire [4:0] converter_enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:33" *)
  wire converter_fifo_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:28" *)
  wire [11:0] converter_fifo_enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:29" *)
  wire [3:0] converter_fifo_enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:37" *)
  wire [11:0] converter_fifo_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:38" *)
  wire [3:0] converter_fifo_enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:30" *)
  wire converter_fifo_in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:36" *)
  wire converter_fifo_latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:39" *)
  wire converter_fifo_out_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:23" *)
  wire [3:0] converter_fifo_reg_enc_ctr_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:30" *)
  wire [3:0] converter_fifo_reg_enc_ctr_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:22" *)
  wire [11:0] converter_fifo_reg_enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:29" *)
  wire [11:0] converter_fifo_reg_enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:28" *)
  wire converter_fifo_reg_i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:21" *)
  wire converter_fifo_reg_o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:24" *)
  wire converter_fifo_reg_out_end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:31" *)
  wire converter_fifo_reg_out_end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:25" *)
  wire converter_fifo_reg_valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:32" *)
  wire converter_fifo_reg_valid_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:31" *)
  wire converter_fifo_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:40" *)
  wire converter_fifo_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:34" *)
  wire converter_in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:25" *)
  wire converter_latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:28" *)
  wire converter_out_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:23" *)
  wire converter_reg_left_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:19" *)
  wire [11:0] converter_reg_left_enc;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:20" *)
  wire [3:0] converter_reg_left_enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:21" *)
  wire converter_reg_left_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:22" *)
  wire converter_reg_left_valid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:30" *)
  wire converter_reg_right_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:26" *)
  wire [11:0] converter_reg_right_enc;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:27" *)
  wire [3:0] converter_reg_right_enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:28" *)
  wire converter_reg_right_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:29" *)
  wire converter_reg_right_valid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:35" *)
  wire converter_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:29" *)
  wire converter_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:24" *)
  output [27:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:25" *)
  output [4:0] enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:10" *)
  wire end_delayer_in_sig;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:11" *)
  wire end_delayer_out_sig;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:24" *)
  wire [27:0] integration_1_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:25" *)
  wire [4:0] integration_1_enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:21" *)
  wire integration_1_end_of_frame;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:21" *)
  wire [11:0] integration_1_pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:28" *)
  wire integration_1_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:29" *)
  wire integration_1_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:26" *)
  input latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:39" *)
  wire lj92_pipeline_fifo_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:26" *)
  wire [27:0] lj92_pipeline_fifo_enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:27" *)
  wire [4:0] lj92_pipeline_fifo_enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:32" *)
  wire [27:0] lj92_pipeline_fifo_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:33" *)
  wire [4:0] lj92_pipeline_fifo_enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:28" *)
  wire lj92_pipeline_fifo_in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:31" *)
  wire lj92_pipeline_fifo_latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:34" *)
  wire lj92_pipeline_fifo_out_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:29" *)
  wire lj92_pipeline_fifo_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:35" *)
  wire lj92_pipeline_fifo_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:29" *)
  output nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:32" *)
  output out_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:23" *)
  wire [4:0] pipeline_fifo_reg_enc_ctr_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:30" *)
  wire [4:0] pipeline_fifo_reg_enc_ctr_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:22" *)
  wire [27:0] pipeline_fifo_reg_enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:29" *)
  wire [27:0] pipeline_fifo_reg_enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:28" *)
  wire pipeline_fifo_reg_i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:21" *)
  wire pipeline_fifo_reg_o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:24" *)
  wire pipeline_fifo_reg_out_end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:31" *)
  wire pipeline_fifo_reg_out_end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:25" *)
  wire pipeline_fifo_reg_valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:32" *)
  wire pipeline_fifo_reg_valid_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:22" *)
  input [11:0] pixel_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:30" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:31" *)
  output valid_out;
  assign \$9  = converter_latch_output == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:93" *) 1'h0;
  assign \$11  = converter_fifo_reg_o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:124" *) 1'h0;
  assign \$13  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:29" *) converter_fifo_reg_enc_right;
  assign \$15  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:30" *) converter_fifo_reg_enc_ctr_right;
  assign \$17  = latch_output == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:133" *) 1'h0;
  assign \$1  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:65" *) 1'h1;
  assign \$3  = lj92_pipeline_fifo_close_full == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:65" *) 1'h0;
  assign \$5  = \$1  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:65" *) \$3 ;
  assign \$7  = pipeline_fifo_reg_o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:84" *) 1'h0;
  converter converter (
    .clk(clk),
    .close_full(converter_close_full),
    .enc_in(converter_enc_in),
    .enc_in_ctr(converter_enc_in_ctr),
    .enc_out(converter_enc_out),
    .enc_out_ctr(converter_enc_out_ctr),
    .in_end(converter_in_end),
    .latch_output(converter_latch_output),
    .out_end(converter_out_end),
    .rst(rst),
    .valid_in(converter_valid_in),
    .valid_out(converter_valid_out)
  );
  converter_fifo converter_fifo (
    .clk(clk),
    .close_full(converter_fifo_close_full),
    .enc_in(converter_fifo_enc_in),
    .enc_in_ctr(converter_fifo_enc_in_ctr),
    .enc_out(converter_fifo_enc_out),
    .enc_out_ctr(converter_fifo_enc_out_ctr),
    .in_end(converter_fifo_in_end),
    .latch_output(converter_fifo_latch_output),
    .out_end(converter_fifo_out_end),
    .rst(rst),
    .valid_in(converter_fifo_valid_in),
    .valid_out(converter_fifo_valid_out)
  );
  converter_fifo_reg converter_fifo_reg (
    .enc_ctr_left(converter_fifo_reg_enc_ctr_left),
    .enc_ctr_right(converter_fifo_reg_enc_ctr_right),
    .enc_left(converter_fifo_reg_enc_left),
    .enc_right(converter_fifo_reg_enc_right),
    .i_busy(converter_fifo_reg_i_busy),
    .o_busy(converter_fifo_reg_o_busy),
    .out_end_left(converter_fifo_reg_out_end_left),
    .out_end_right(converter_fifo_reg_out_end_right),
    .valid_left(converter_fifo_reg_valid_left),
    .valid_right(converter_fifo_reg_valid_right)
  );
  converter_reg converter_reg (
    .left_close_full(converter_reg_left_close_full),
    .left_enc(converter_reg_left_enc),
    .left_enc_ctr(converter_reg_left_enc_ctr),
    .left_end(converter_reg_left_end),
    .left_valid(converter_reg_left_valid),
    .right_close_full(converter_reg_right_close_full),
    .right_enc(converter_reg_right_enc),
    .right_enc_ctr(converter_reg_right_enc_ctr),
    .right_end(converter_reg_right_end),
    .right_valid(converter_reg_right_valid)
  );
  end_delayer end_delayer (
    .clk(clk),
    .in_sig(end_delayer_in_sig),
    .out_sig(end_delayer_out_sig),
    .rst(rst)
  );
  integration_1 integration_1 (
    .clk(clk),
    .enc_out(integration_1_enc_out),
    .enc_out_ctr(integration_1_enc_out_ctr),
    .end_of_frame(integration_1_end_of_frame),
    .pixel_in(integration_1_pixel_in),
    .rst(rst),
    .valid_in(integration_1_valid_in),
    .valid_out(integration_1_valid_out)
  );
  lj92_pipeline_fifo lj92_pipeline_fifo (
    .clk(clk),
    .close_full(lj92_pipeline_fifo_close_full),
    .enc_in(lj92_pipeline_fifo_enc_in),
    .enc_in_ctr(lj92_pipeline_fifo_enc_in_ctr),
    .enc_out(lj92_pipeline_fifo_enc_out),
    .enc_out_ctr(lj92_pipeline_fifo_enc_out_ctr),
    .in_end(lj92_pipeline_fifo_in_end),
    .latch_output(lj92_pipeline_fifo_latch_output),
    .out_end(lj92_pipeline_fifo_out_end),
    .rst(rst),
    .valid_in(lj92_pipeline_fifo_valid_in),
    .valid_out(lj92_pipeline_fifo_valid_out)
  );
  pipeline_fifo_reg pipeline_fifo_reg (
    .enc_ctr_left(pipeline_fifo_reg_enc_ctr_left),
    .enc_ctr_right(pipeline_fifo_reg_enc_ctr_right),
    .enc_left(pipeline_fifo_reg_enc_left),
    .enc_right(pipeline_fifo_reg_enc_right),
    .i_busy(pipeline_fifo_reg_i_busy),
    .o_busy(pipeline_fifo_reg_o_busy),
    .out_end_left(pipeline_fifo_reg_out_end_left),
    .out_end_right(pipeline_fifo_reg_out_end_right),
    .valid_left(pipeline_fifo_reg_valid_left),
    .valid_right(pipeline_fifo_reg_valid_right)
  );
  always @* begin
    \$next\integration_1_pixel_in  = 12'h000;
    \$next\integration_1_pixel_in  = pixel_in;
  end
  always @* begin
    \$next\integration_1_valid_in  = 1'h0;
    \$next\integration_1_valid_in  = \$5 ;
  end
  always @* begin
    \$next\pipeline_fifo_reg_enc_ctr_left  = 5'h00;
    \$next\pipeline_fifo_reg_enc_ctr_left  = lj92_pipeline_fifo_enc_out_ctr;
  end
  always @* begin
    \$next\pipeline_fifo_reg_out_end_left  = 1'h0;
    \$next\pipeline_fifo_reg_out_end_left  = lj92_pipeline_fifo_out_end;
  end
  always @* begin
    \$next\pipeline_fifo_reg_valid_left  = 1'h0;
    \$next\pipeline_fifo_reg_valid_left  = lj92_pipeline_fifo_valid_out;
  end
  always @* begin
    \$next\pipeline_fifo_reg_i_busy  = 1'h0;
    \$next\pipeline_fifo_reg_i_busy  = \$9 ;
  end
  always @* begin
    \$next\converter_enc_out  = 28'h0000000;
    \$next\converter_enc_out  = pipeline_fifo_reg_enc_right;
  end
  always @* begin
    \$next\converter_enc_out_ctr  = 5'h00;
    \$next\converter_enc_out_ctr  = pipeline_fifo_reg_enc_ctr_right;
  end
  always @* begin
    \$next\converter_out_end  = 1'h0;
    \$next\converter_out_end  = pipeline_fifo_reg_out_end_right;
  end
  always @* begin
    \$next\converter_valid_out  = 1'h0;
    \$next\converter_valid_out  = pipeline_fifo_reg_valid_right;
  end
  always @* begin
    \$next\converter_reg_left_enc  = 12'h000;
    \$next\converter_reg_left_enc  = converter_enc_in;
  end
  always @* begin
    \$next\converter_reg_left_enc_ctr  = 4'h0;
    \$next\converter_reg_left_enc_ctr  = converter_enc_in_ctr;
  end
  always @* begin
    \$next\end_delayer_in_sig  = 1'h0;
    \$next\end_delayer_in_sig  = integration_1_end_of_frame;
  end
  always @* begin
    \$next\converter_reg_left_end  = 1'h0;
    \$next\converter_reg_left_end  = converter_in_end;
  end
  always @* begin
    \$next\converter_reg_left_valid  = 1'h0;
    \$next\converter_reg_left_valid  = converter_valid_in;
  end
  always @* begin
    \$next\converter_close_full  = 1'h0;
    \$next\converter_close_full  = converter_reg_left_close_full;
  end
  always @* begin
    \$next\converter_fifo_enc_in  = 12'h000;
    \$next\converter_fifo_enc_in  = converter_reg_right_enc;
  end
  always @* begin
    \$next\converter_fifo_enc_in_ctr  = 4'h0;
    \$next\converter_fifo_enc_in_ctr  = converter_reg_right_enc_ctr;
  end
  always @* begin
    \$next\converter_fifo_in_end  = 1'h0;
    \$next\converter_fifo_in_end  = converter_reg_right_end;
  end
  always @* begin
    \$next\converter_fifo_valid_in  = 1'h0;
    \$next\converter_fifo_valid_in  = converter_reg_right_valid;
  end
  always @* begin
    \$next\converter_reg_right_close_full  = 1'h0;
    \$next\converter_reg_right_close_full  = converter_fifo_close_full;
  end
  always @* begin
    \$next\converter_fifo_reg_enc_left  = 12'h000;
    \$next\converter_fifo_reg_enc_left  = converter_fifo_enc_out;
  end
  always @* begin
    \$next\converter_fifo_reg_enc_ctr_left  = 4'h0;
    \$next\converter_fifo_reg_enc_ctr_left  = converter_fifo_enc_out_ctr;
  end
  always @* begin
    \$next\lj92_pipeline_fifo_in_end  = 1'h0;
    \$next\lj92_pipeline_fifo_in_end  = end_delayer_out_sig;
  end
  always @* begin
    \$next\converter_fifo_reg_valid_left  = 1'h0;
    \$next\converter_fifo_reg_valid_left  = converter_fifo_valid_out;
  end
  always @* begin
    \$next\converter_fifo_reg_out_end_left  = 1'h0;
    \$next\converter_fifo_reg_out_end_left  = converter_fifo_out_end;
  end
  always @* begin
    \$next\converter_fifo_latch_output  = 1'h0;
    \$next\converter_fifo_latch_output  = \$11 ;
  end
  always @* begin
    \$next\enc_out  = 28'h0000000;
    \$next\enc_out  = \$13 ;
  end
  always @* begin
    \$next\enc_out_ctr  = 5'h00;
    \$next\enc_out_ctr  = \$15 ;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = converter_fifo_reg_valid_right;
  end
  always @* begin
    \$next\out_end  = 1'h0;
    \$next\out_end  = converter_fifo_reg_out_end_right;
  end
  always @* begin
    \$next\converter_fifo_reg_i_busy  = 1'h0;
    \$next\converter_fifo_reg_i_busy  = \$17 ;
  end
  always @* begin
    \$next\lj92_pipeline_fifo_enc_in  = 28'h0000000;
    \$next\lj92_pipeline_fifo_enc_in  = integration_1_enc_out;
  end
  always @* begin
    \$next\lj92_pipeline_fifo_enc_in_ctr  = 5'h00;
    \$next\lj92_pipeline_fifo_enc_in_ctr  = integration_1_enc_out_ctr;
  end
  always @* begin
    \$next\lj92_pipeline_fifo_valid_in  = 1'h0;
    \$next\lj92_pipeline_fifo_valid_in  = integration_1_valid_out;
  end
  always @* begin
    \$next\nready  = 1'h0;
    \$next\nready  = lj92_pipeline_fifo_close_full;
  end
  always @* begin
    \$next\lj92_pipeline_fifo_latch_output  = 1'h0;
    \$next\lj92_pipeline_fifo_latch_output  = \$7 ;
  end
  always @* begin
    \$next\pipeline_fifo_reg_enc_left  = 28'h0000000;
    \$next\pipeline_fifo_reg_enc_left  = lj92_pipeline_fifo_enc_out;
  end
  assign converter_fifo_reg_i_busy = \$next\converter_fifo_reg_i_busy ;
  assign out_end = \$next\out_end ;
  assign valid_out = \$next\valid_out ;
  assign enc_out_ctr = \$next\enc_out_ctr ;
  assign enc_out = \$next\enc_out ;
  assign converter_fifo_latch_output = \$next\converter_fifo_latch_output ;
  assign converter_fifo_reg_out_end_left = \$next\converter_fifo_reg_out_end_left ;
  assign converter_fifo_reg_valid_left = \$next\converter_fifo_reg_valid_left ;
  assign converter_fifo_reg_enc_ctr_left = \$next\converter_fifo_reg_enc_ctr_left ;
  assign converter_fifo_reg_enc_left = \$next\converter_fifo_reg_enc_left ;
  assign converter_reg_right_close_full = \$next\converter_reg_right_close_full ;
  assign converter_fifo_valid_in = \$next\converter_fifo_valid_in ;
  assign converter_fifo_in_end = \$next\converter_fifo_in_end ;
  assign converter_fifo_enc_in_ctr = \$next\converter_fifo_enc_in_ctr ;
  assign converter_fifo_enc_in = \$next\converter_fifo_enc_in ;
  assign converter_close_full = \$next\converter_close_full ;
  assign converter_reg_left_valid = \$next\converter_reg_left_valid ;
  assign converter_reg_left_end = \$next\converter_reg_left_end ;
  assign converter_reg_left_enc_ctr = \$next\converter_reg_left_enc_ctr ;
  assign converter_reg_left_enc = \$next\converter_reg_left_enc ;
  assign converter_valid_out = \$next\converter_valid_out ;
  assign converter_out_end = \$next\converter_out_end ;
  assign converter_enc_out_ctr = \$next\converter_enc_out_ctr ;
  assign converter_enc_out = \$next\converter_enc_out ;
  assign pipeline_fifo_reg_i_busy = \$next\pipeline_fifo_reg_i_busy ;
  assign pipeline_fifo_reg_valid_left = \$next\pipeline_fifo_reg_valid_left ;
  assign pipeline_fifo_reg_out_end_left = \$next\pipeline_fifo_reg_out_end_left ;
  assign pipeline_fifo_reg_enc_ctr_left = \$next\pipeline_fifo_reg_enc_ctr_left ;
  assign pipeline_fifo_reg_enc_left = \$next\pipeline_fifo_reg_enc_left ;
  assign lj92_pipeline_fifo_latch_output = \$next\lj92_pipeline_fifo_latch_output ;
  assign nready = \$next\nready ;
  assign lj92_pipeline_fifo_valid_in = \$next\lj92_pipeline_fifo_valid_in ;
  assign lj92_pipeline_fifo_enc_in_ctr = \$next\lj92_pipeline_fifo_enc_in_ctr ;
  assign lj92_pipeline_fifo_enc_in = \$next\lj92_pipeline_fifo_enc_in ;
  assign lj92_pipeline_fifo_in_end = \$next\lj92_pipeline_fifo_in_end ;
  assign end_delayer_in_sig = \$next\end_delayer_in_sig ;
  assign integration_1_valid_in = \$next\integration_1_valid_in ;
  assign integration_1_pixel_in = \$next\integration_1_pixel_in ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3" *)
(* generator = "nMigen" *)
module integration_3(valid_in, busy_in, rst, clk, data_out, valid_out, end_out, nready, pixel_in);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:25" *)
  reg [15:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:30" *)
  reg \$next\end_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:26" *)
  reg \$next\integration_2_latch_output ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:22" *)
  reg [11:0] \$next\integration_2_pixel_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:30" *)
  reg \$next\integration_2_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:31" *)
  reg \$next\nready ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:29" *)
  reg \$next\valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:236" *)
  reg \$next\vbits_to_cbits_busy_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:228" *)
  reg [11:0] \$next\vbits_to_cbits_enc_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:229" *)
  reg [3:0] \$next\vbits_to_cbits_enc_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:230" *)
  reg \$next\vbits_to_cbits_in_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:20" *)
  reg [15:0] \$next\vbits_to_cbits_reg_data_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:22" *)
  reg \$next\vbits_to_cbits_reg_end_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:25" *)
  reg \$next\vbits_to_cbits_reg_i_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:21" *)
  reg \$next\vbits_to_cbits_reg_valid_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:231" *)
  reg \$next\vbits_to_cbits_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:32" *)
  input busy_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:25" *)
  output [15:0] data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:30" *)
  output end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:24" *)
  wire [27:0] integration_2_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:25" *)
  wire [4:0] integration_2_enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:26" *)
  wire integration_2_latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:29" *)
  wire integration_2_nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:32" *)
  wire integration_2_out_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:22" *)
  wire [11:0] integration_2_pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:30" *)
  wire integration_2_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:31" *)
  wire integration_2_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:31" *)
  output nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:22" *)
  input [11:0] pixel_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:28" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:29" *)
  output valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:236" *)
  wire vbits_to_cbits_busy_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:233" *)
  wire [15:0] vbits_to_cbits_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:228" *)
  wire [11:0] vbits_to_cbits_enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:229" *)
  wire [3:0] vbits_to_cbits_enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:235" *)
  wire vbits_to_cbits_end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:230" *)
  wire vbits_to_cbits_in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:227" *)
  wire vbits_to_cbits_latch_input;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:20" *)
  wire [15:0] vbits_to_cbits_reg_data_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:26" *)
  wire [15:0] vbits_to_cbits_reg_data_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:22" *)
  wire vbits_to_cbits_reg_end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:28" *)
  wire vbits_to_cbits_reg_end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:25" *)
  wire vbits_to_cbits_reg_i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:19" *)
  wire vbits_to_cbits_reg_o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:21" *)
  wire vbits_to_cbits_reg_valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:27" *)
  wire vbits_to_cbits_reg_valid_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:231" *)
  wire vbits_to_cbits_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:234" *)
  wire vbits_to_cbits_valid_out;
  integration_2 integration_2 (
    .clk(clk),
    .enc_out(integration_2_enc_out),
    .enc_out_ctr(integration_2_enc_out_ctr),
    .latch_output(integration_2_latch_output),
    .nready(integration_2_nready),
    .out_end(integration_2_out_end),
    .pixel_in(integration_2_pixel_in),
    .rst(rst),
    .valid_in(integration_2_valid_in),
    .valid_out(integration_2_valid_out)
  );
  vbits_to_cbits vbits_to_cbits (
    .busy_in(vbits_to_cbits_busy_in),
    .clk(clk),
    .data_out(vbits_to_cbits_data_out),
    .enc_in(vbits_to_cbits_enc_in),
    .enc_in_ctr(vbits_to_cbits_enc_in_ctr),
    .end_out(vbits_to_cbits_end_out),
    .in_end(vbits_to_cbits_in_end),
    .latch_input(vbits_to_cbits_latch_input),
    .rst(rst),
    .valid_in(vbits_to_cbits_valid_in),
    .valid_out(vbits_to_cbits_valid_out)
  );
  vbits_to_cbits_reg vbits_to_cbits_reg (
    .data_left(vbits_to_cbits_reg_data_left),
    .data_right(vbits_to_cbits_reg_data_right),
    .end_left(vbits_to_cbits_reg_end_left),
    .end_right(vbits_to_cbits_reg_end_right),
    .i_busy(vbits_to_cbits_reg_i_busy),
    .o_busy(vbits_to_cbits_reg_o_busy),
    .valid_left(vbits_to_cbits_reg_valid_left),
    .valid_right(vbits_to_cbits_reg_valid_right)
  );
  always @* begin
    \$next\integration_2_pixel_in  = 12'h000;
    \$next\integration_2_pixel_in  = pixel_in;
  end
  always @* begin
    \$next\integration_2_valid_in  = 1'h0;
    \$next\integration_2_valid_in  = valid_in;
  end
  always @* begin
    \$next\vbits_to_cbits_reg_valid_left  = 1'h0;
    \$next\vbits_to_cbits_reg_valid_left  = vbits_to_cbits_valid_out;
  end
  always @* begin
    \$next\vbits_to_cbits_reg_end_left  = 1'h0;
    \$next\vbits_to_cbits_reg_end_left  = vbits_to_cbits_end_out;
  end
  always @* begin
    \$next\data_out  = 16'h0000;
    \$next\data_out  = vbits_to_cbits_reg_data_right;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = vbits_to_cbits_reg_valid_right;
  end
  always @* begin
    \$next\end_out  = 1'h0;
    \$next\end_out  = vbits_to_cbits_reg_end_right;
  end
  always @* begin
    \$next\nready  = 1'h0;
    \$next\nready  = integration_2_nready;
  end
  always @* begin
    \$next\integration_2_latch_output  = 1'h0;
    \$next\integration_2_latch_output  = vbits_to_cbits_latch_input;
  end
  always @* begin
    \$next\vbits_to_cbits_enc_in  = 12'h000;
    \$next\vbits_to_cbits_enc_in  = integration_2_enc_out[11:0];
  end
  always @* begin
    \$next\vbits_to_cbits_enc_in_ctr  = 4'h0;
    \$next\vbits_to_cbits_enc_in_ctr  = integration_2_enc_out_ctr[3:0];
  end
  always @* begin
    \$next\vbits_to_cbits_in_end  = 1'h0;
    \$next\vbits_to_cbits_in_end  = integration_2_out_end;
  end
  always @* begin
    \$next\vbits_to_cbits_valid_in  = 1'h0;
    \$next\vbits_to_cbits_valid_in  = integration_2_valid_out;
  end
  always @* begin
    \$next\vbits_to_cbits_busy_in  = 1'h0;
    \$next\vbits_to_cbits_busy_in  = vbits_to_cbits_reg_o_busy;
  end
  always @* begin
    \$next\vbits_to_cbits_reg_i_busy  = 1'h0;
    \$next\vbits_to_cbits_reg_i_busy  = busy_in;
  end
  always @* begin
    \$next\vbits_to_cbits_reg_data_left  = 16'h0000;
    \$next\vbits_to_cbits_reg_data_left  = vbits_to_cbits_data_out;
  end
  assign nready = \$next\nready ;
  assign end_out = \$next\end_out ;
  assign valid_out = \$next\valid_out ;
  assign data_out = \$next\data_out ;
  assign vbits_to_cbits_reg_end_left = \$next\vbits_to_cbits_reg_end_left ;
  assign vbits_to_cbits_reg_valid_left = \$next\vbits_to_cbits_reg_valid_left ;
  assign vbits_to_cbits_reg_data_left = \$next\vbits_to_cbits_reg_data_left ;
  assign vbits_to_cbits_reg_i_busy = \$next\vbits_to_cbits_reg_i_busy ;
  assign vbits_to_cbits_busy_in = \$next\vbits_to_cbits_busy_in ;
  assign vbits_to_cbits_valid_in = \$next\vbits_to_cbits_valid_in ;
  assign vbits_to_cbits_in_end = \$next\vbits_to_cbits_in_end ;
  assign vbits_to_cbits_enc_in_ctr = \$next\vbits_to_cbits_enc_in_ctr ;
  assign vbits_to_cbits_enc_in = \$next\vbits_to_cbits_enc_in ;
  assign integration_2_latch_output = \$next\integration_2_latch_output ;
  assign integration_2_valid_in = \$next\integration_2_valid_in ;
  assign integration_2_pixel_in = \$next\integration_2_pixel_in ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.lj92_pipeline_fifo" *)
(* generator = "nMigen" *)
module lj92_pipeline_fifo(enc_in, enc_in_ctr, in_end, latch_output, rst, clk, valid_out, enc_out, enc_out_ctr, out_end, close_full, valid_in);
  wire \$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:39" *)
  reg \$next\close_full ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:32" *)
  reg [27:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:33" *)
  reg [4:0] \$next\enc_out_ctr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  reg [33:0] \$next\fifo_din ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  reg \$next\fifo_re ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  reg \$next\fifo_we ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:34" *)
  reg \$next\out_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:35" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:39" *)
  output close_full;
  reg close_full = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:26" *)
  input [27:0] enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:27" *)
  input [4:0] enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:32" *)
  output [27:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:33" *)
  output [4:0] enc_out_ctr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  wire [33:0] fifo_din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  wire [33:0] fifo_dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  wire [9:0] fifo_level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  wire fifo_re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  wire fifo_readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  wire fifo_we;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:28" *)
  input in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:31" *)
  input latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:34" *)
  output out_end;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:29" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:35" *)
  output valid_out;
  assign \$1  = fifo_level > (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:71" *) 9'h1ec;
  always @(posedge clk)
      close_full <= \$next\close_full ;
  fifo fifo (
    .clk(clk),
    .din(fifo_din),
    .dout(fifo_dout),
    .level(fifo_level),
    .re(fifo_re),
    .readable(fifo_readable),
    .rst(rst),
    .we(fifo_we)
  );
  always @* begin
    \$next\fifo_we  = 1'h0;
    \$next\fifo_we  = valid_in;
  end
  always @* begin
    \$next\fifo_din  = 34'h000000000;
    \$next\fifo_din  = { in_end, enc_in_ctr, enc_in };
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = fifo_readable;
  end
  always @* begin
    \$next\enc_out  = 28'h0000000;
    \$next\enc_out  = fifo_dout[27:0];
  end
  always @* begin
    \$next\enc_out_ctr  = 5'h00;
    \$next\enc_out_ctr  = fifo_dout[32:28];
  end
  always @* begin
    \$next\out_end  = 1'h0;
    \$next\out_end  = fifo_dout[33];
  end
  always @* begin
    \$next\fifo_re  = 1'h0;
    \$next\fifo_re  = latch_output;
  end
  always @* begin
    \$next\close_full  = close_full;
    \$next\close_full  = \$1 ;
    casez (rst)
      1'h1:
          \$next\close_full  = 1'h0;
    endcase
  end
  assign fifo_re = \$next\fifo_re ;
  assign out_end = \$next\out_end ;
  assign enc_out_ctr = \$next\enc_out_ctr ;
  assign enc_out = \$next\enc_out ;
  assign valid_out = \$next\valid_out ;
  assign fifo_din = \$next\fifo_din ;
  assign fifo_we = \$next\fifo_we ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.normalize" *)
(* generator = "nMigen" *)
module normalize(valid_in, vals_in_mns, rst, clk, ssss, val_out, valid_out, val_in);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:125" *)
  reg [4:0] \$next\ssss ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:68" *)
  reg [12:0] \$next\val_in$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:73" *)
  reg [12:0] \$next\val_in_mns ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:124" *)
  reg [11:0] \$next\val_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:71" *)
  reg \$next\valid ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:128" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:125" *)
  output [4:0] ssss;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:70" *)
  wire [4:0] \ssss$3 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:122" *)
  input [12:0] val_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:68" *)
  wire [12:0] \val_in$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:73" *)
  wire [12:0] val_in_mns;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:124" *)
  output [11:0] val_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:69" *)
  wire [11:0] \val_out$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:71" *)
  wire valid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:127" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:72" *)
  wire valid_o;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:128" *)
  output valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:123" *)
  input [12:0] vals_in_mns;
  anonymous \$4  (
    .clk(clk),
    .rst(rst),
    .ssss(\ssss$3 ),
    .val_in(\val_in$1 ),
    .val_in_mns(val_in_mns),
    .val_out(\val_out$2 ),
    .valid(valid),
    .valid_o(valid_o)
  );
  always @* begin
    \$next\val_in$1  = 13'h0000;
    \$next\val_in$1  = val_in;
  end
  always @* begin
    \$next\valid  = 1'h0;
    \$next\valid  = valid_in;
  end
  always @* begin
    \$next\val_in_mns  = 13'h0000;
    \$next\val_in_mns  = vals_in_mns;
  end
  always @* begin
    \$next\ssss  = 5'h00;
    \$next\ssss  = \ssss$3 ;
  end
  always @* begin
    \$next\val_out  = 12'h000;
    \$next\val_out  = \val_out$2 ;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = valid_o;
  end
  assign valid_out = \$next\valid_out ;
  assign val_out = \$next\val_out ;
  assign ssss = \$next\ssss ;
  assign val_in_mns = \$next\val_in_mns ;
  assign valid = \$next\valid ;
  assign \val_in$1  = \$next\val_in$1 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.vbits_to_cbits.output_handler" *)
(* generator = "nMigen" *)
module output_handler(new_buff_consum_actv, new_buff_consum, end_in, buffer, busy_in, rst, clk, dec_buff_out, data_out, valid_out, end_out, buff_consum);
  wire [6:0] \$1 ;
  wire \$11 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire [6:0] \$2 ;
  wire \$21 ;
  wire \$23 ;
  wire [41:0] \$25 ;
  wire [41:0] \$26 ;
  wire [72:0] \$28 ;
  wire [72:0] \$29 ;
  wire \$31 ;
  wire \$33 ;
  wire \$35 ;
  wire [41:0] \$37 ;
  wire [41:0] \$38 ;
  wire [6:0] \$4 ;
  wire [72:0] \$40 ;
  wire [72:0] \$41 ;
  wire \$43 ;
  wire \$45 ;
  wire \$47 ;
  wire \$49 ;
  wire [6:0] \$5 ;
  wire \$51 ;
  wire \$53 ;
  wire \$55 ;
  wire \$57 ;
  wire \$59 ;
  wire \$61 ;
  wire \$63 ;
  wire \$65 ;
  wire \$7 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:49" *)
  reg \$next\buff_consum_greater_eq ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:48" *)
  reg \$next\buff_consum_less_eq ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:17" *)
  reg [15:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:28" *)
  reg \$next\dec_buff_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:19" *)
  reg \$next\end_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg \$next\fsm_state ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:40" *)
  reg [4:0] \$next\shift_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:39" *)
  reg [4:0] \$next\shift_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:18" *)
  reg \$next\valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:24" *)
  input [5:0] buff_consum;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:49" *)
  reg buff_consum_greater_eq = 1'h0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:48" *)
  reg buff_consum_less_eq = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:23" *)
  input [41:0] buffer;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:20" *)
  input busy_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:17" *)
  output [15:0] data_out;
  reg [15:0] data_out = 16'h0000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:28" *)
  output dec_buff_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:31" *)
  input end_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:19" *)
  output end_out;
  reg end_out = 1'h0;
  (* init = 1'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg fsm_state = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:25" *)
  input [5:0] new_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:26" *)
  input new_buff_consum_actv;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:40" *)
  wire [4:0] shift_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:39" *)
  wire [4:0] shift_right;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:18" *)
  output valid_out;
  reg valid_out = 1'h0;
  assign \$9  = buff_consum_greater_eq | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) \$7 ;
  assign \$11  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) 1'h0;
  assign \$13  = \$11  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) buff_consum_greater_eq;
  assign \$15  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:85" *) 1'h0;
  assign \$17  = new_buff_consum >= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:53" *) 5'h10;
  assign \$19  = new_buff_consum <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:54" *) 5'h10;
  assign \$21  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) end_in;
  assign \$23  = buff_consum_greater_eq | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) \$21 ;
  assign \$26  = buffer >>> (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:59" *) shift_right;
  assign \$2  = buff_consum - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:41" *) 5'h10;
  assign \$29  = buffer <<< (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:61" *) shift_left;
  assign \$31  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) 1'h0;
  assign \$33  = \$31  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) buff_consum_greater_eq;
  assign \$35  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:85" *) 1'h0;
  assign \$38  = buffer >>> (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:59" *) shift_right;
  assign \$41  = buffer <<< (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:61" *) shift_left;
  assign \$43  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) end_in;
  assign \$45  = buff_consum_greater_eq | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) \$43 ;
  assign \$47  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) 1'h0;
  assign \$49  = \$47  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) buff_consum_greater_eq;
  assign \$51  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:85" *) 1'h0;
  assign \$53  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) end_in;
  assign \$55  = buff_consum_greater_eq | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) \$53 ;
  assign \$57  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) 1'h0;
  assign \$5  = 5'h10 - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:42" *) buff_consum;
  assign \$59  = \$57  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) buff_consum_greater_eq;
  assign \$61  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:85" *) 1'h0;
  assign \$63  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:77" *) end_in;
  assign \$65  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:92" *) end_in;
  assign \$7  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) end_in;
  always @(posedge clk)
      end_out <= \$next\end_out ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      data_out <= \$next\data_out ;
  always @(posedge clk)
      buff_consum_less_eq <= \$next\buff_consum_less_eq ;
  always @(posedge clk)
      buff_consum_greater_eq <= \$next\buff_consum_greater_eq ;
  always @* begin
    \$next\shift_right  = 5'h00;
    \$next\shift_right  = \$1 [4:0];
  end
  always @* begin
    \$next\shift_left  = 5'h00;
    \$next\shift_left  = \$4 [4:0];
  end
  always @* begin
    \$next\dec_buff_out  = 1'h0;
    \$next\dec_buff_out  = 1'h0;
    casez (fsm_state)
      1'h0:
          casez (\$9 )
            1'h1:
                \$next\dec_buff_out  = 1'h1;
          endcase
      1'h1:
          casez ({ \$15 , \$13  })
            2'bz1:
                \$next\dec_buff_out  = 1'h1;
          endcase
    endcase
  end
  always @* begin
    \$next\buff_consum_greater_eq  = buff_consum_greater_eq;
    casez (new_buff_consum_actv)
      1'h1:
          \$next\buff_consum_greater_eq  = \$17 ;
    endcase
    casez (rst)
      1'h1:
          \$next\buff_consum_greater_eq  = 1'h0;
    endcase
  end
  always @* begin
    \$next\buff_consum_less_eq  = buff_consum_less_eq;
    casez (new_buff_consum_actv)
      1'h1:
          \$next\buff_consum_less_eq  = \$19 ;
    endcase
    casez (rst)
      1'h1:
          \$next\buff_consum_less_eq  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out  = data_out;
    casez (fsm_state)
      1'h0:
          casez (\$23 )
            1'h1:
                casez (buff_consum_greater_eq)
                  1'h1:
                      \$next\data_out  = \$25 [15:0];
                  1'hz:
                      \$next\data_out  = \$28 [15:0];
                endcase
          endcase
      1'h1:
          casez ({ \$35 , \$33  })
            2'bz1:
                casez (buff_consum_greater_eq)
                  1'h1:
                      \$next\data_out  = \$37 [15:0];
                  1'hz:
                      \$next\data_out  = \$40 [15:0];
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\valid_out  = valid_out;
    casez (fsm_state)
      1'h0:
          casez (\$45 )
            1'h1:
                \$next\valid_out  = 1'h1;
          endcase
      1'h1:
          casez ({ \$51 , \$49  })
            2'bz1:
                \$next\valid_out  = 1'h1;
            2'b1z:
                \$next\valid_out  = 1'h0;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      1'h0:
          casez (\$55 )
            1'h1:
                \$next\fsm_state  = 1'h1;
          endcase
      1'h1:
          casez ({ \$61 , \$59  })
            2'bz1:
                /* empty */;
            2'b1z:
                \$next\fsm_state  = 1'h0;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 1'h0;
    endcase
  end
  always @* begin
    \$next\end_out  = end_out;
    casez (fsm_state)
      1'h0:
          casez (\$63 )
            1'h1:
                \$next\end_out  = 1'h1;
          endcase
      1'h1:
          casez (\$65 )
            1'h1:
                \$next\end_out  = 1'h1;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\end_out  = 1'h0;
    endcase
  end
  assign \$1  = \$2 ;
  assign \$4  = \$5 ;
  assign \$25  = \$26 ;
  assign \$28  = \$29 ;
  assign \$37  = \$38 ;
  assign \$40  = \$41 ;
  assign dec_buff_out = \$next\dec_buff_out ;
  assign shift_left = \$next\shift_left ;
  assign shift_right = \$next\shift_right ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.pipeline_fifo_reg" *)
(* generator = "nMigen" *)
module pipeline_fifo_reg(enc_left, enc_ctr_left, out_end_left, valid_left, o_busy, enc_right, enc_ctr_right, out_end_right, valid_right, i_busy);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:30" *)
  reg [4:0] \$next\enc_ctr_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:29" *)
  reg [27:0] \$next\enc_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:21" *)
  reg \$next\o_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:31" *)
  reg \$next\out_end_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:32" *)
  reg \$next\valid_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:23" *)
  input [4:0] enc_ctr_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:30" *)
  output [4:0] enc_ctr_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:22" *)
  input [27:0] enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:29" *)
  output [27:0] enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:28" *)
  input i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:21" *)
  output o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:24" *)
  input out_end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:31" *)
  output out_end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:25" *)
  input valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:32" *)
  output valid_right;
  always @* begin
    \$next\o_busy  = 1'h0;
    \$next\o_busy  = i_busy;
  end
  always @* begin
    \$next\enc_right  = 28'h0000000;
    \$next\enc_right  = enc_left;
  end
  always @* begin
    \$next\enc_ctr_right  = 5'h00;
    \$next\enc_ctr_right  = enc_ctr_left;
  end
  always @* begin
    \$next\out_end_right  = 1'h0;
    \$next\out_end_right  = out_end_left;
  end
  always @* begin
    \$next\valid_right  = 1'h0;
    \$next\valid_right  = valid_left;
  end
  assign valid_right = \$next\valid_right ;
  assign out_end_right = \$next\out_end_right ;
  assign enc_ctr_right = \$next\enc_ctr_right ;
  assign enc_right = \$next\enc_right ;
  assign o_busy = \$next\o_busy ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.pipeline_reg" *)
(* generator = "nMigen" *)
module pipeline_reg(enc_left_ctr, valid_left, enc_right, enc_right_ctr, valid_right, enc_left);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:28" *)
  reg [27:0] \$next\enc_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:29" *)
  reg [4:0] \$next\enc_right_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:32" *)
  reg \$next\valid_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:24" *)
  input [27:0] enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:25" *)
  input [4:0] enc_left_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:28" *)
  output [27:0] enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:29" *)
  output [4:0] enc_right_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:31" *)
  input valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:32" *)
  output valid_right;
  always @* begin
    \$next\enc_right  = 28'h0000000;
    \$next\enc_right  = enc_left;
  end
  always @* begin
    \$next\enc_right_ctr  = 5'h00;
    \$next\enc_right_ctr  = enc_left_ctr;
  end
  always @* begin
    \$next\valid_right  = 1'h0;
    \$next\valid_right  = valid_left;
  end
  assign valid_right = \$next\valid_right ;
  assign enc_right_ctr = \$next\enc_right_ctr ;
  assign enc_right = \$next\enc_right ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.predictor" *)
(* generator = "nMigen" *)
module predictor(new_row, pixel_in, rst, clk, pixel_out, predic_out, valid_out, valid_in);
  wire \$1 ;
  wire \$11 ;
  wire \$13 ;
  wire [2:0] \$15 ;
  wire [2:0] \$16 ;
  wire [2:0] \$21 ;
  wire [2:0] \$22 ;
  wire \$3 ;
  wire \$5 ;
  wire \$7 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \$next\buff ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \$next\buff$18 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \$next\buff$19 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \$next\buff$20 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:62" *)
  reg [1:0] \$next\buff_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \$next\lbuff ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \$next\lbuff$24 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \$next\lbuff$25 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \$next\lbuff$26 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:63" *)
  reg [1:0] \$next\lbuff_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:66" *)
  reg \$next\new_row_latch ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:65" *)
  reg \$next\new_row_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:34" *)
  reg [11:0] \$next\pixel_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:37" *)
  reg [11:0] \$next\predic_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:44" *)
  reg \$next\valid_out ;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] buff = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \buff$18  = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \buff$19  = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \buff$20  = 12'h800;
  (* init = 2'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:62" *)
  reg [1:0] buff_ctr = 2'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] lbuff = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \lbuff$24  = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \lbuff$25  = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \lbuff$26  = 12'h800;
  (* init = 2'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:63" *)
  reg [1:0] lbuff_ctr = 2'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:40" *)
  input new_row;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:66" *)
  wire new_row_latch;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:65" *)
  reg new_row_reg = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:31" *)
  input [11:0] pixel_in;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:34" *)
  output [11:0] pixel_out;
  reg [11:0] pixel_out = 12'h000;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:37" *)
  output [11:0] predic_out;
  reg [11:0] predic_out = 12'h000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:43" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:44" *)
  output valid_out;
  reg valid_out = 1'h0;
  assign \$9  = lbuff_ctr == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:71" *) 2'h3;
  assign \$11  = \$7  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:71" *) \$9 ;
  assign \$13  = new_row | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:73" *) new_row_reg;
  assign \$16  = buff_ctr + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:82" *) 1'h1;
  assign \$1  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:69" *) 1'h1;
  assign \$22  = lbuff_ctr + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:91" *) 1'h1;
  assign \$3  = new_row == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:69" *) 1'h1;
  assign \$5  = \$1  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:69" *) \$3 ;
  assign \$7  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:71" *) 1'h1;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      predic_out <= \$next\predic_out ;
  always @(posedge clk)
      \lbuff$26  <= \$next\lbuff$26 ;
  always @(posedge clk)
      \lbuff$25  <= \$next\lbuff$25 ;
  always @(posedge clk)
      \lbuff$24  <= \$next\lbuff$24 ;
  always @(posedge clk)
      lbuff <= \$next\lbuff ;
  always @(posedge clk)
      lbuff_ctr <= \$next\lbuff_ctr ;
  always @(posedge clk)
      \buff$20  <= \$next\buff$20 ;
  always @(posedge clk)
      \buff$19  <= \$next\buff$19 ;
  always @(posedge clk)
      \buff$18  <= \$next\buff$18 ;
  always @(posedge clk)
      buff <= \$next\buff ;
  always @(posedge clk)
      buff_ctr <= \$next\buff_ctr ;
  always @(posedge clk)
      pixel_out <= \$next\pixel_out ;
  always @(posedge clk)
      new_row_reg <= \$next\new_row_reg ;
  always @* begin
    \$next\new_row_reg  = new_row_reg;
    casez ({ \$11 , \$5  })
      2'bz1:
          \$next\new_row_reg  = 1'h1;
      2'b1z:
          \$next\new_row_reg  = 1'h0;
    endcase
    casez (rst)
      1'h1:
          \$next\new_row_reg  = 1'h0;
    endcase
  end
  always @* begin
    \$next\new_row_latch  = 1'h0;
    \$next\new_row_latch  = \$13 ;
  end
  always @* begin
    \$next\lbuff$24  = \lbuff$24 ;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                casez (lbuff_ctr)
                  2'h1:
                      \$next\lbuff$24  = pixel_in;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff$24  = 12'h800;
    endcase
  end
  always @* begin
    \$next\lbuff$25  = \lbuff$25 ;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                casez (lbuff_ctr)
                  2'h2:
                      \$next\lbuff$25  = pixel_in;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff$25  = 12'h800;
    endcase
  end
  always @* begin
    \$next\lbuff$26  = \lbuff$26 ;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                casez (lbuff_ctr)
                  2'h3:
                      \$next\lbuff$26  = pixel_in;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff$26  = 12'h800;
    endcase
  end
  always @* begin
    \$next\predic_out  = predic_out;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                casez (lbuff_ctr)
                  2'h0:
                      \$next\predic_out  = lbuff;
                  2'h1:
                      \$next\predic_out  = \lbuff$24 ;
                  2'h2:
                      \$next\predic_out  = \lbuff$25 ;
                  2'h3:
                      \$next\predic_out  = \lbuff$26 ;
                endcase
            1'hz:
                casez (buff_ctr)
                  2'h0:
                      \$next\predic_out  = buff;
                  2'h1:
                      \$next\predic_out  = \buff$18 ;
                  2'h2:
                      \$next\predic_out  = \buff$19 ;
                  2'h3:
                      \$next\predic_out  = \buff$20 ;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\predic_out  = 12'h000;
    endcase
  end
  always @* begin
    \$next\valid_out  = valid_out;
    \$next\valid_out  = valid_in;
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\pixel_out  = pixel_out;
    casez (valid_in)
      1'h1:
          \$next\pixel_out  = pixel_in;
    endcase
    casez (rst)
      1'h1:
          \$next\pixel_out  = 12'h000;
    endcase
  end
  always @* begin
    \$next\buff_ctr  = buff_ctr;
    casez (valid_in)
      1'h1:
          \$next\buff_ctr  = \$15 [1:0];
    endcase
    casez (rst)
      1'h1:
          \$next\buff_ctr  = 2'h0;
    endcase
  end
  always @* begin
    \$next\buff  = buff;
    casez (valid_in)
      1'h1:
          casez (buff_ctr)
            2'h0:
                \$next\buff  = pixel_in;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buff  = 12'h800;
    endcase
  end
  always @* begin
    \$next\buff$18  = \buff$18 ;
    casez (valid_in)
      1'h1:
          casez (buff_ctr)
            2'h1:
                \$next\buff$18  = pixel_in;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buff$18  = 12'h800;
    endcase
  end
  always @* begin
    \$next\buff$19  = \buff$19 ;
    casez (valid_in)
      1'h1:
          casez (buff_ctr)
            2'h2:
                \$next\buff$19  = pixel_in;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buff$19  = 12'h800;
    endcase
  end
  always @* begin
    \$next\buff$20  = \buff$20 ;
    casez (valid_in)
      1'h1:
          casez (buff_ctr)
            2'h3:
                \$next\buff$20  = pixel_in;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buff$20  = 12'h800;
    endcase
  end
  always @* begin
    \$next\lbuff_ctr  = lbuff_ctr;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                \$next\lbuff_ctr  = \$21 [1:0];
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff_ctr  = 2'h0;
    endcase
  end
  always @* begin
    \$next\lbuff  = lbuff;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                casez (lbuff_ctr)
                  2'h0:
                      \$next\lbuff  = pixel_in;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff  = 12'h800;
    endcase
  end
  assign \$15  = \$16 ;
  assign \$21  = \$22 ;
  assign new_row_latch = \$next\new_row_latch ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.register_file" *)
(* generator = "nMigen" *)
module register_file(clk, width, height, rst);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:10" *)
  reg [15:0] \$next\height ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:21" *)
  reg [15:0] \$next\height_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:11" *)
  reg [15:0] \$next\width ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:20" *)
  reg [15:0] \$next\width_reg ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:10" *)
  output [15:0] height;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:21" *)
  reg [15:0] height_reg = 16'h0000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:11" *)
  output [15:0] width;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:20" *)
  reg [15:0] width_reg = 16'h0000;
  always @(posedge clk)
      height_reg <= \$next\height_reg ;
  always @(posedge clk)
      width_reg <= \$next\width_reg ;
  always @* begin
    \$next\width_reg  = width_reg;
    \$next\width_reg  = 16'h1000;
    casez (rst)
      1'h1:
          \$next\width_reg  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\height_reg  = height_reg;
    \$next\height_reg  = 16'h0c00;
    casez (rst)
      1'h1:
          \$next\height_reg  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\width  = 16'h0000;
    \$next\width  = width_reg;
  end
  always @* begin
    \$next\height  = 16'h0000;
    \$next\height  = height_reg;
  end
  assign height = \$next\height ;
  assign width = \$next\width ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.signals" *)
(* generator = "nMigen" *)
module signals(width, height, rst, clk, new_row, end_of_frame, new_input);
  wire [16:0] \$1 ;
  wire [16:0] \$10 ;
  wire \$12 ;
  wire [16:0] \$14 ;
  wire [16:0] \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire [16:0] \$2 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$4 ;
  wire [16:0] \$6 ;
  wire [16:0] \$7 ;
  wire [16:0] \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:21" *)
  reg \$next\end_of_frame ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [1:0] \$next\fsm_state ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:33" *)
  reg [15:0] \$next\height_temp ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:22" *)
  reg \$next\new_row ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:32" *)
  reg [15:0] \$next\width_temp ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:21" *)
  output end_of_frame;
  reg end_of_frame = 1'h0;
  (* init = 2'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [1:0] fsm_state = 2'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:17" *)
  input [15:0] height;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:33" *)
  reg [15:0] height_temp = 16'h0000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:19" *)
  input new_input;
  (* init = 1'h1 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:22" *)
  output new_row;
  reg new_row = 1'h1;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:18" *)
  input [15:0] width;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:32" *)
  reg [15:0] width_temp = 16'h0000;
  assign \$10  = height - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:42" *) 1'h1;
  assign \$12  = width_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:49" *) 1'h1;
  assign \$15  = height_temp - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:52" *) 1'h1;
  assign \$17  = width_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:49" *) 1'h1;
  assign \$19  = height_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) 1'h0;
  assign \$21  = width_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) 1'h1;
  assign \$23  = \$19  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) \$21 ;
  assign \$25  = height_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) 1'h0;
  assign \$27  = width_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) 1'h1;
  assign \$2  = width - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:41" *) 1'h1;
  assign \$29  = \$25  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) \$27 ;
  assign \$4  = width_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:49" *) 1'h1;
  assign \$7  = width_temp - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:57" *) 1'h1;
  always @(posedge clk)
      end_of_frame <= \$next\end_of_frame ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      new_row <= \$next\new_row ;
  always @(posedge clk)
      height_temp <= \$next\height_temp ;
  always @(posedge clk)
      width_temp <= \$next\width_temp ;
  always @* begin
    \$next\width_temp  = width_temp;
    casez (fsm_state)
      2'h0:
          casez (new_input)
            1'h1:
                \$next\width_temp  = \$1 [15:0];
          endcase
      2'h1:
          casez (new_input)
            1'h1:
                casez (\$4 )
                  1'h1:
                      \$next\width_temp  = width;
                  1'hz:
                      \$next\width_temp  = \$6 [15:0];
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\width_temp  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\height_temp  = height_temp;
    casez (fsm_state)
      2'h0:
          casez (new_input)
            1'h1:
                \$next\height_temp  = \$9 [15:0];
          endcase
      2'h1:
          casez (new_input)
            1'h1:
                casez (\$12 )
                  1'h1:
                      \$next\height_temp  = \$14 [15:0];
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\height_temp  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\new_row  = new_row;
    casez (fsm_state)
      2'h0:
          casez (new_input)
            1'h1:
                \$next\new_row  = 1'h0;
          endcase
      2'h1:
          casez (new_input)
            1'h1:
                casez (\$17 )
                  1'h1:
                      \$next\new_row  = 1'h1;
                  1'hz:
                      \$next\new_row  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\new_row  = 1'h1;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      2'h0:
          casez (new_input)
            1'h1:
                \$next\fsm_state  = 2'h1;
          endcase
      2'h1:
          casez (new_input)
            1'h1:
                casez (\$23 )
                  1'h1:
                      \$next\fsm_state  = 2'h2;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 2'h0;
    endcase
  end
  always @* begin
    \$next\end_of_frame  = end_of_frame;
    casez (fsm_state)
      2'h1:
          casez (new_input)
            1'h1:
                casez (\$29 )
                  1'h1:
                      \$next\end_of_frame  = 1'h1;
                endcase
          endcase
      2'h2:
          \$next\end_of_frame  = 1'h1;
    endcase
    casez (rst)
      1'h1:
          \$next\end_of_frame  = 1'h0;
    endcase
  end
  assign \$1  = \$2 ;
  assign \$6  = \$7 ;
  assign \$9  = \$10 ;
  assign \$14  = \$15 ;
endmodule

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(s_tdata, s_tlast, s_tvalid, rst, clk, zeros, ones, m_tvalid, m_tlast, m_tdata, s_tready, m_tready);
  wire \$1 ;
  wire \$3 ;
  (* src = "./migen_src/micro_integration_axistream.py:15" *)
  reg [15:0] \$next\m_tdata ;
  (* src = "./migen_src/micro_integration_axistream.py:13" *)
  reg \$next\m_tlast ;
  (* src = "./migen_src/micro_integration_axistream.py:12" *)
  reg \$next\m_tvalid ;
  (* src = "./migen_src/micro_integration_axistream.py:35" *)
  reg \$next\s_end ;
  (* src = "./migen_src/micro_integration_axistream.py:20" *)
  reg \$next\s_tready ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:43" *)
  reg \$next\top_module_busy_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:33" *)
  reg [11:0] \$next\top_module_pixel_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:39" *)
  reg \$next\top_module_valid_in ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "./migen_src/micro_integration_axistream.py:15" *)
  output [15:0] m_tdata;
  (* src = "./migen_src/micro_integration_axistream.py:13" *)
  output m_tlast;
  (* src = "./migen_src/micro_integration_axistream.py:14" *)
  input m_tready;
  (* src = "./migen_src/micro_integration_axistream.py:12" *)
  output m_tvalid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:57" *)
  input [7:0] ones;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "./migen_src/micro_integration_axistream.py:35" *)
  wire s_end;
  (* src = "./migen_src/micro_integration_axistream.py:21" *)
  input [31:0] s_tdata;
  (* src = "./migen_src/micro_integration_axistream.py:19" *)
  input s_tlast;
  (* src = "./migen_src/micro_integration_axistream.py:20" *)
  output s_tready;
  (* src = "./migen_src/micro_integration_axistream.py:18" *)
  input s_tvalid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:43" *)
  wire top_module_busy_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:36" *)
  wire [15:0] top_module_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:41" *)
  wire top_module_end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:42" *)
  wire top_module_nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:33" *)
  wire [11:0] top_module_pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:39" *)
  wire top_module_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:40" *)
  wire top_module_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:56" *)
  input [7:0] zeros;
  assign \$1  = m_tready == (* src = "./migen_src/micro_integration_axistream.py:41" *) 1'h0;
  assign \$3  = top_module_nready == (* src = "./migen_src/micro_integration_axistream.py:48" *) 1'h0;
  top_module top_module (
    .busy_in(top_module_busy_in),
    .clk(clk),
    .data_out(top_module_data_out),
    .end_out(top_module_end_out),
    .nready(top_module_nready),
    .ones(ones),
    .pixel_in(top_module_pixel_in),
    .rst(rst),
    .valid_in(top_module_valid_in),
    .valid_out(top_module_valid_out),
    .zeros(zeros)
  );
  always @* begin
    \$next\m_tdata  = 16'h0000;
    \$next\m_tdata  = top_module_data_out;
  end
  always @* begin
    \$next\m_tlast  = 1'h0;
    \$next\m_tlast  = top_module_end_out;
  end
  always @* begin
    \$next\top_module_busy_in  = 1'h0;
    \$next\top_module_busy_in  = \$1 ;
  end
  always @* begin
    \$next\m_tvalid  = 1'h0;
    \$next\m_tvalid  = top_module_valid_out;
  end
  always @* begin
    \$next\top_module_pixel_in  = 12'h000;
    \$next\top_module_pixel_in  = s_tdata[11:0];
  end
  always @* begin
    \$next\s_tready  = 1'h0;
    \$next\s_tready  = \$3 ;
  end
  always @* begin
    \$next\s_end  = 1'h0;
    \$next\s_end  = s_tlast;
  end
  always @* begin
    \$next\top_module_valid_in  = 1'h0;
    \$next\top_module_valid_in  = s_tvalid;
  end
  assign top_module_valid_in = \$next\top_module_valid_in ;
  assign s_end = \$next\s_end ;
  assign s_tready = \$next\s_tready ;
  assign top_module_pixel_in = \$next\top_module_pixel_in ;
  assign m_tvalid = \$next\m_tvalid ;
  assign top_module_busy_in = \$next\top_module_busy_in ;
  assign m_tlast = \$next\m_tlast ;
  assign m_tdata = \$next\m_tdata ;
endmodule

(* \nmigen.hierarchy  = "top.top_module" *)
(* generator = "nMigen" *)
module top_module(valid_in, busy_in, rst, clk, zeros, ones, data_out, valid_out, end_out, nready, pixel_in);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:36" *)
  reg [15:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:41" *)
  reg \$next\end_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:90" *)
  reg [31:0] \$next\fix_0xff2_data_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:91" *)
  reg [2:0] \$next\fix_0xff2_data_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:100" *)
  reg \$next\fix_0xff2_i_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:97" *)
  reg \$next\fix_0xff2_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *)
  reg [15:0] \$next\fix_0xff_data_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:47" *)
  reg \$next\fix_0xff_i_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:44" *)
  reg \$next\fix_0xff_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:32" *)
  reg \$next\integration_3_busy_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:22" *)
  reg [11:0] \$next\integration_3_pixel_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:28" *)
  reg \$next\integration_3_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:42" *)
  reg \$next\nready ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:40" *)
  reg \$next\valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:43" *)
  input busy_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:36" *)
  output [15:0] data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:41" *)
  output end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:90" *)
  wire [31:0] fix_0xff2_data_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:91" *)
  wire [2:0] fix_0xff2_data_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:94" *)
  wire [15:0] fix_0xff2_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:100" *)
  wire fix_0xff2_i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:99" *)
  wire fix_0xff2_o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:97" *)
  wire fix_0xff2_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:98" *)
  wire fix_0xff2_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *)
  wire [15:0] fix_0xff_data_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:40" *)
  wire [31:0] fix_0xff_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:41" *)
  wire [2:0] fix_0xff_data_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:47" *)
  wire fix_0xff_i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:46" *)
  wire fix_0xff_o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:44" *)
  wire fix_0xff_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:45" *)
  wire fix_0xff_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:32" *)
  wire integration_3_busy_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:25" *)
  wire [15:0] integration_3_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:30" *)
  wire integration_3_end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:31" *)
  wire integration_3_nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:22" *)
  wire [11:0] integration_3_pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:28" *)
  wire integration_3_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:29" *)
  wire integration_3_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:42" *)
  output nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:57" *)
  input [7:0] ones;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:33" *)
  input [11:0] pixel_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:39" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/micro_integration.py:40" *)
  output valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:56" *)
  input [7:0] zeros;
  fix_0xff fix_0xff (
    .clk(clk),
    .data_in(fix_0xff_data_in),
    .data_out(fix_0xff_data_out),
    .data_out_ctr(fix_0xff_data_out_ctr),
    .i_busy(fix_0xff_i_busy),
    .o_busy(fix_0xff_o_busy),
    .ones(ones),
    .rst(rst),
    .valid_in(fix_0xff_valid_in),
    .valid_out(fix_0xff_valid_out),
    .zeros(zeros)
  );
  fix_0xff2 fix_0xff2 (
    .clk(clk),
    .data_in(fix_0xff2_data_in),
    .data_in_ctr(fix_0xff2_data_in_ctr),
    .data_out(fix_0xff2_data_out),
    .i_busy(fix_0xff2_i_busy),
    .o_busy(fix_0xff2_o_busy),
    .rst(rst),
    .valid_in(fix_0xff2_valid_in),
    .valid_out(fix_0xff2_valid_out)
  );
  integration_3 integration_3 (
    .busy_in(integration_3_busy_in),
    .clk(clk),
    .data_out(integration_3_data_out),
    .end_out(integration_3_end_out),
    .nready(integration_3_nready),
    .pixel_in(integration_3_pixel_in),
    .rst(rst),
    .valid_in(integration_3_valid_in),
    .valid_out(integration_3_valid_out)
  );
  always @* begin
    \$next\integration_3_pixel_in  = 12'h000;
    \$next\integration_3_pixel_in  = pixel_in;
  end
  always @* begin
    \$next\integration_3_valid_in  = 1'h0;
    \$next\integration_3_valid_in  = valid_in;
  end
  always @* begin
    \$next\data_out  = 16'h0000;
    \$next\data_out  = fix_0xff2_data_out;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = fix_0xff2_valid_out;
  end
  always @* begin
    \$next\end_out  = 1'h0;
    \$next\end_out  = integration_3_end_out;
  end
  always @* begin
    \$next\nready  = 1'h0;
    \$next\nready  = integration_3_nready;
  end
  always @* begin
    \$next\integration_3_busy_in  = 1'h0;
    \$next\integration_3_busy_in  = fix_0xff_o_busy;
  end
  always @* begin
    \$next\fix_0xff_data_in  = 16'h0000;
    \$next\fix_0xff_data_in  = integration_3_data_out;
  end
  always @* begin
    \$next\fix_0xff_valid_in  = 1'h0;
    \$next\fix_0xff_valid_in  = integration_3_valid_out;
  end
  always @* begin
    \$next\fix_0xff_i_busy  = 1'h0;
    \$next\fix_0xff_i_busy  = fix_0xff2_o_busy;
  end
  always @* begin
    \$next\fix_0xff2_data_in  = 32'd0;
    \$next\fix_0xff2_data_in  = fix_0xff_data_out;
  end
  always @* begin
    \$next\fix_0xff2_valid_in  = 1'h0;
    \$next\fix_0xff2_valid_in  = fix_0xff_valid_out;
  end
  always @* begin
    \$next\fix_0xff2_i_busy  = 1'h0;
    \$next\fix_0xff2_i_busy  = busy_in;
  end
  always @* begin
    \$next\fix_0xff2_data_in_ctr  = 3'h0;
    \$next\fix_0xff2_data_in_ctr  = fix_0xff_data_out_ctr;
  end
  assign nready = \$next\nready ;
  assign end_out = \$next\end_out ;
  assign valid_out = \$next\valid_out ;
  assign data_out = \$next\data_out ;
  assign fix_0xff2_data_in_ctr = \$next\fix_0xff2_data_in_ctr ;
  assign fix_0xff2_i_busy = \$next\fix_0xff2_i_busy ;
  assign fix_0xff2_valid_in = \$next\fix_0xff2_valid_in ;
  assign fix_0xff2_data_in = \$next\fix_0xff2_data_in ;
  assign fix_0xff_i_busy = \$next\fix_0xff_i_busy ;
  assign fix_0xff_valid_in = \$next\fix_0xff_valid_in ;
  assign fix_0xff_data_in = \$next\fix_0xff_data_in ;
  assign integration_3_busy_in = \$next\integration_3_busy_in ;
  assign integration_3_valid_in = \$next\integration_3_valid_in ;
  assign integration_3_pixel_in = \$next\integration_3_pixel_in ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.lj92_pipeline_fifo.fifo.unbuffered" *)
(* generator = "nMigen" *)
module unbuffered(we, replace, re, rst, clk, writable, readable, dout, level, din);
  wire \$10 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$2 ;
  wire \$21 ;
  wire [9:0] \$23 ;
  wire [9:0] \$24 ;
  wire [9:0] \$26 ;
  wire \$27 ;
  wire \$30 ;
  wire [9:0] \$32 ;
  wire [9:0] \$33 ;
  wire [9:0] \$35 ;
  wire \$36 ;
  wire \$39 ;
  wire \$4 ;
  wire \$41 ;
  wire \$43 ;
  wire \$45 ;
  wire \$46 ;
  wire \$49 ;
  wire [9:0] \$51 ;
  wire [9:0] \$52 ;
  wire \$54 ;
  wire \$56 ;
  wire \$57 ;
  wire \$59 ;
  wire [9:0] \$6 ;
  wire \$61 ;
  wire \$64 ;
  wire [9:0] \$66 ;
  wire [9:0] \$67 ;
  wire [9:0] \$7 ;
  wire [9:0] \$9 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:156" *)
  reg [8:0] \$next\consume ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  reg [33:0] \$next\dout ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  reg [8:0] \$next\level ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:155" *)
  reg [8:0] \$next\produce ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  reg [8:0] \$next\rdport_storage_r_addr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:85" *)
  reg \$next\rdport_storage_r_en ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  reg \$next\readable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  reg \$next\writable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:146" *)
  reg [8:0] \$next\wrport_storage_w_addr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:148" *)
  reg [33:0] \$next\wrport_storage_w_data ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:150" *)
  reg \$next\wrport_storage_w_en ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 9'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:156" *)
  reg [8:0] consume = 9'h000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  input [33:0] din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  output [33:0] dout;
  (* init = 9'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  output [8:0] level;
  reg [8:0] level = 9'h000;
  (* init = 9'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:155" *)
  reg [8:0] produce = 9'h000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  wire [8:0] rdport_storage_r_addr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:83" *)
  wire [33:0] rdport_storage_r_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:85" *)
  wire rdport_storage_r_en;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  input re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  output readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  input replace;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  input we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  output writable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:146" *)
  wire [8:0] wrport_storage_w_addr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:148" *)
  wire [33:0] wrport_storage_w_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:150" *)
  wire wrport_storage_w_en;
  assign \$10  = produce == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:102" *) 1'h0;
  assign \$9  = \$10  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:164" *) 10'h1fe : \$7 ;
  assign \$13  = writable | (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:161" *) replace;
  assign \$15  = we & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:161" *) \$13 ;
  assign \$17  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$19  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$21  = \$17  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$19 ;
  assign \$24  = produce + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 1'h1;
  assign \$27  = produce == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 9'h1fe;
  assign \$26  = \$27  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:166" *) 10'h000 : \$24 ;
  assign \$2  = level != (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:144" *) 9'h1ff;
  assign \$30  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$33  = consume + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 1'h1;
  assign \$36  = consume == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 9'h1fe;
  assign \$35  = \$36  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:175" *) 10'h000 : \$33 ;
  assign \$39  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$41  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$43  = \$39  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$41 ;
  assign \$46  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$45  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:177" *) \$46 ;
  assign \$4  = level != (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:145" *) 1'h0;
  assign \$49  = \$43  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:177" *) \$45 ;
  assign \$52  = level + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:178" *) 1'h1;
  assign \$54  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$57  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$59  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$61  = \$57  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$59 ;
  assign \$56  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:179" *) \$61 ;
  assign \$64  = \$54  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:179" *) \$56 ;
  assign \$67  = level - (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:180" *) 1'h1;
  assign \$7  = produce - (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:102" *) 1'h1;
  always @(posedge clk)
      level <= \$next\level ;
  always @(posedge clk)
      consume <= \$next\consume ;
  always @(posedge clk)
      produce <= \$next\produce ;
  reg [33:0] storage [510:0];
  initial begin
    storage[0] = 34'h000000000;
    storage[1] = 34'h000000000;
    storage[2] = 34'h000000000;
    storage[3] = 34'h000000000;
    storage[4] = 34'h000000000;
    storage[5] = 34'h000000000;
    storage[6] = 34'h000000000;
    storage[7] = 34'h000000000;
    storage[8] = 34'h000000000;
    storage[9] = 34'h000000000;
    storage[10] = 34'h000000000;
    storage[11] = 34'h000000000;
    storage[12] = 34'h000000000;
    storage[13] = 34'h000000000;
    storage[14] = 34'h000000000;
    storage[15] = 34'h000000000;
    storage[16] = 34'h000000000;
    storage[17] = 34'h000000000;
    storage[18] = 34'h000000000;
    storage[19] = 34'h000000000;
    storage[20] = 34'h000000000;
    storage[21] = 34'h000000000;
    storage[22] = 34'h000000000;
    storage[23] = 34'h000000000;
    storage[24] = 34'h000000000;
    storage[25] = 34'h000000000;
    storage[26] = 34'h000000000;
    storage[27] = 34'h000000000;
    storage[28] = 34'h000000000;
    storage[29] = 34'h000000000;
    storage[30] = 34'h000000000;
    storage[31] = 34'h000000000;
    storage[32] = 34'h000000000;
    storage[33] = 34'h000000000;
    storage[34] = 34'h000000000;
    storage[35] = 34'h000000000;
    storage[36] = 34'h000000000;
    storage[37] = 34'h000000000;
    storage[38] = 34'h000000000;
    storage[39] = 34'h000000000;
    storage[40] = 34'h000000000;
    storage[41] = 34'h000000000;
    storage[42] = 34'h000000000;
    storage[43] = 34'h000000000;
    storage[44] = 34'h000000000;
    storage[45] = 34'h000000000;
    storage[46] = 34'h000000000;
    storage[47] = 34'h000000000;
    storage[48] = 34'h000000000;
    storage[49] = 34'h000000000;
    storage[50] = 34'h000000000;
    storage[51] = 34'h000000000;
    storage[52] = 34'h000000000;
    storage[53] = 34'h000000000;
    storage[54] = 34'h000000000;
    storage[55] = 34'h000000000;
    storage[56] = 34'h000000000;
    storage[57] = 34'h000000000;
    storage[58] = 34'h000000000;
    storage[59] = 34'h000000000;
    storage[60] = 34'h000000000;
    storage[61] = 34'h000000000;
    storage[62] = 34'h000000000;
    storage[63] = 34'h000000000;
    storage[64] = 34'h000000000;
    storage[65] = 34'h000000000;
    storage[66] = 34'h000000000;
    storage[67] = 34'h000000000;
    storage[68] = 34'h000000000;
    storage[69] = 34'h000000000;
    storage[70] = 34'h000000000;
    storage[71] = 34'h000000000;
    storage[72] = 34'h000000000;
    storage[73] = 34'h000000000;
    storage[74] = 34'h000000000;
    storage[75] = 34'h000000000;
    storage[76] = 34'h000000000;
    storage[77] = 34'h000000000;
    storage[78] = 34'h000000000;
    storage[79] = 34'h000000000;
    storage[80] = 34'h000000000;
    storage[81] = 34'h000000000;
    storage[82] = 34'h000000000;
    storage[83] = 34'h000000000;
    storage[84] = 34'h000000000;
    storage[85] = 34'h000000000;
    storage[86] = 34'h000000000;
    storage[87] = 34'h000000000;
    storage[88] = 34'h000000000;
    storage[89] = 34'h000000000;
    storage[90] = 34'h000000000;
    storage[91] = 34'h000000000;
    storage[92] = 34'h000000000;
    storage[93] = 34'h000000000;
    storage[94] = 34'h000000000;
    storage[95] = 34'h000000000;
    storage[96] = 34'h000000000;
    storage[97] = 34'h000000000;
    storage[98] = 34'h000000000;
    storage[99] = 34'h000000000;
    storage[100] = 34'h000000000;
    storage[101] = 34'h000000000;
    storage[102] = 34'h000000000;
    storage[103] = 34'h000000000;
    storage[104] = 34'h000000000;
    storage[105] = 34'h000000000;
    storage[106] = 34'h000000000;
    storage[107] = 34'h000000000;
    storage[108] = 34'h000000000;
    storage[109] = 34'h000000000;
    storage[110] = 34'h000000000;
    storage[111] = 34'h000000000;
    storage[112] = 34'h000000000;
    storage[113] = 34'h000000000;
    storage[114] = 34'h000000000;
    storage[115] = 34'h000000000;
    storage[116] = 34'h000000000;
    storage[117] = 34'h000000000;
    storage[118] = 34'h000000000;
    storage[119] = 34'h000000000;
    storage[120] = 34'h000000000;
    storage[121] = 34'h000000000;
    storage[122] = 34'h000000000;
    storage[123] = 34'h000000000;
    storage[124] = 34'h000000000;
    storage[125] = 34'h000000000;
    storage[126] = 34'h000000000;
    storage[127] = 34'h000000000;
    storage[128] = 34'h000000000;
    storage[129] = 34'h000000000;
    storage[130] = 34'h000000000;
    storage[131] = 34'h000000000;
    storage[132] = 34'h000000000;
    storage[133] = 34'h000000000;
    storage[134] = 34'h000000000;
    storage[135] = 34'h000000000;
    storage[136] = 34'h000000000;
    storage[137] = 34'h000000000;
    storage[138] = 34'h000000000;
    storage[139] = 34'h000000000;
    storage[140] = 34'h000000000;
    storage[141] = 34'h000000000;
    storage[142] = 34'h000000000;
    storage[143] = 34'h000000000;
    storage[144] = 34'h000000000;
    storage[145] = 34'h000000000;
    storage[146] = 34'h000000000;
    storage[147] = 34'h000000000;
    storage[148] = 34'h000000000;
    storage[149] = 34'h000000000;
    storage[150] = 34'h000000000;
    storage[151] = 34'h000000000;
    storage[152] = 34'h000000000;
    storage[153] = 34'h000000000;
    storage[154] = 34'h000000000;
    storage[155] = 34'h000000000;
    storage[156] = 34'h000000000;
    storage[157] = 34'h000000000;
    storage[158] = 34'h000000000;
    storage[159] = 34'h000000000;
    storage[160] = 34'h000000000;
    storage[161] = 34'h000000000;
    storage[162] = 34'h000000000;
    storage[163] = 34'h000000000;
    storage[164] = 34'h000000000;
    storage[165] = 34'h000000000;
    storage[166] = 34'h000000000;
    storage[167] = 34'h000000000;
    storage[168] = 34'h000000000;
    storage[169] = 34'h000000000;
    storage[170] = 34'h000000000;
    storage[171] = 34'h000000000;
    storage[172] = 34'h000000000;
    storage[173] = 34'h000000000;
    storage[174] = 34'h000000000;
    storage[175] = 34'h000000000;
    storage[176] = 34'h000000000;
    storage[177] = 34'h000000000;
    storage[178] = 34'h000000000;
    storage[179] = 34'h000000000;
    storage[180] = 34'h000000000;
    storage[181] = 34'h000000000;
    storage[182] = 34'h000000000;
    storage[183] = 34'h000000000;
    storage[184] = 34'h000000000;
    storage[185] = 34'h000000000;
    storage[186] = 34'h000000000;
    storage[187] = 34'h000000000;
    storage[188] = 34'h000000000;
    storage[189] = 34'h000000000;
    storage[190] = 34'h000000000;
    storage[191] = 34'h000000000;
    storage[192] = 34'h000000000;
    storage[193] = 34'h000000000;
    storage[194] = 34'h000000000;
    storage[195] = 34'h000000000;
    storage[196] = 34'h000000000;
    storage[197] = 34'h000000000;
    storage[198] = 34'h000000000;
    storage[199] = 34'h000000000;
    storage[200] = 34'h000000000;
    storage[201] = 34'h000000000;
    storage[202] = 34'h000000000;
    storage[203] = 34'h000000000;
    storage[204] = 34'h000000000;
    storage[205] = 34'h000000000;
    storage[206] = 34'h000000000;
    storage[207] = 34'h000000000;
    storage[208] = 34'h000000000;
    storage[209] = 34'h000000000;
    storage[210] = 34'h000000000;
    storage[211] = 34'h000000000;
    storage[212] = 34'h000000000;
    storage[213] = 34'h000000000;
    storage[214] = 34'h000000000;
    storage[215] = 34'h000000000;
    storage[216] = 34'h000000000;
    storage[217] = 34'h000000000;
    storage[218] = 34'h000000000;
    storage[219] = 34'h000000000;
    storage[220] = 34'h000000000;
    storage[221] = 34'h000000000;
    storage[222] = 34'h000000000;
    storage[223] = 34'h000000000;
    storage[224] = 34'h000000000;
    storage[225] = 34'h000000000;
    storage[226] = 34'h000000000;
    storage[227] = 34'h000000000;
    storage[228] = 34'h000000000;
    storage[229] = 34'h000000000;
    storage[230] = 34'h000000000;
    storage[231] = 34'h000000000;
    storage[232] = 34'h000000000;
    storage[233] = 34'h000000000;
    storage[234] = 34'h000000000;
    storage[235] = 34'h000000000;
    storage[236] = 34'h000000000;
    storage[237] = 34'h000000000;
    storage[238] = 34'h000000000;
    storage[239] = 34'h000000000;
    storage[240] = 34'h000000000;
    storage[241] = 34'h000000000;
    storage[242] = 34'h000000000;
    storage[243] = 34'h000000000;
    storage[244] = 34'h000000000;
    storage[245] = 34'h000000000;
    storage[246] = 34'h000000000;
    storage[247] = 34'h000000000;
    storage[248] = 34'h000000000;
    storage[249] = 34'h000000000;
    storage[250] = 34'h000000000;
    storage[251] = 34'h000000000;
    storage[252] = 34'h000000000;
    storage[253] = 34'h000000000;
    storage[254] = 34'h000000000;
    storage[255] = 34'h000000000;
    storage[256] = 34'h000000000;
    storage[257] = 34'h000000000;
    storage[258] = 34'h000000000;
    storage[259] = 34'h000000000;
    storage[260] = 34'h000000000;
    storage[261] = 34'h000000000;
    storage[262] = 34'h000000000;
    storage[263] = 34'h000000000;
    storage[264] = 34'h000000000;
    storage[265] = 34'h000000000;
    storage[266] = 34'h000000000;
    storage[267] = 34'h000000000;
    storage[268] = 34'h000000000;
    storage[269] = 34'h000000000;
    storage[270] = 34'h000000000;
    storage[271] = 34'h000000000;
    storage[272] = 34'h000000000;
    storage[273] = 34'h000000000;
    storage[274] = 34'h000000000;
    storage[275] = 34'h000000000;
    storage[276] = 34'h000000000;
    storage[277] = 34'h000000000;
    storage[278] = 34'h000000000;
    storage[279] = 34'h000000000;
    storage[280] = 34'h000000000;
    storage[281] = 34'h000000000;
    storage[282] = 34'h000000000;
    storage[283] = 34'h000000000;
    storage[284] = 34'h000000000;
    storage[285] = 34'h000000000;
    storage[286] = 34'h000000000;
    storage[287] = 34'h000000000;
    storage[288] = 34'h000000000;
    storage[289] = 34'h000000000;
    storage[290] = 34'h000000000;
    storage[291] = 34'h000000000;
    storage[292] = 34'h000000000;
    storage[293] = 34'h000000000;
    storage[294] = 34'h000000000;
    storage[295] = 34'h000000000;
    storage[296] = 34'h000000000;
    storage[297] = 34'h000000000;
    storage[298] = 34'h000000000;
    storage[299] = 34'h000000000;
    storage[300] = 34'h000000000;
    storage[301] = 34'h000000000;
    storage[302] = 34'h000000000;
    storage[303] = 34'h000000000;
    storage[304] = 34'h000000000;
    storage[305] = 34'h000000000;
    storage[306] = 34'h000000000;
    storage[307] = 34'h000000000;
    storage[308] = 34'h000000000;
    storage[309] = 34'h000000000;
    storage[310] = 34'h000000000;
    storage[311] = 34'h000000000;
    storage[312] = 34'h000000000;
    storage[313] = 34'h000000000;
    storage[314] = 34'h000000000;
    storage[315] = 34'h000000000;
    storage[316] = 34'h000000000;
    storage[317] = 34'h000000000;
    storage[318] = 34'h000000000;
    storage[319] = 34'h000000000;
    storage[320] = 34'h000000000;
    storage[321] = 34'h000000000;
    storage[322] = 34'h000000000;
    storage[323] = 34'h000000000;
    storage[324] = 34'h000000000;
    storage[325] = 34'h000000000;
    storage[326] = 34'h000000000;
    storage[327] = 34'h000000000;
    storage[328] = 34'h000000000;
    storage[329] = 34'h000000000;
    storage[330] = 34'h000000000;
    storage[331] = 34'h000000000;
    storage[332] = 34'h000000000;
    storage[333] = 34'h000000000;
    storage[334] = 34'h000000000;
    storage[335] = 34'h000000000;
    storage[336] = 34'h000000000;
    storage[337] = 34'h000000000;
    storage[338] = 34'h000000000;
    storage[339] = 34'h000000000;
    storage[340] = 34'h000000000;
    storage[341] = 34'h000000000;
    storage[342] = 34'h000000000;
    storage[343] = 34'h000000000;
    storage[344] = 34'h000000000;
    storage[345] = 34'h000000000;
    storage[346] = 34'h000000000;
    storage[347] = 34'h000000000;
    storage[348] = 34'h000000000;
    storage[349] = 34'h000000000;
    storage[350] = 34'h000000000;
    storage[351] = 34'h000000000;
    storage[352] = 34'h000000000;
    storage[353] = 34'h000000000;
    storage[354] = 34'h000000000;
    storage[355] = 34'h000000000;
    storage[356] = 34'h000000000;
    storage[357] = 34'h000000000;
    storage[358] = 34'h000000000;
    storage[359] = 34'h000000000;
    storage[360] = 34'h000000000;
    storage[361] = 34'h000000000;
    storage[362] = 34'h000000000;
    storage[363] = 34'h000000000;
    storage[364] = 34'h000000000;
    storage[365] = 34'h000000000;
    storage[366] = 34'h000000000;
    storage[367] = 34'h000000000;
    storage[368] = 34'h000000000;
    storage[369] = 34'h000000000;
    storage[370] = 34'h000000000;
    storage[371] = 34'h000000000;
    storage[372] = 34'h000000000;
    storage[373] = 34'h000000000;
    storage[374] = 34'h000000000;
    storage[375] = 34'h000000000;
    storage[376] = 34'h000000000;
    storage[377] = 34'h000000000;
    storage[378] = 34'h000000000;
    storage[379] = 34'h000000000;
    storage[380] = 34'h000000000;
    storage[381] = 34'h000000000;
    storage[382] = 34'h000000000;
    storage[383] = 34'h000000000;
    storage[384] = 34'h000000000;
    storage[385] = 34'h000000000;
    storage[386] = 34'h000000000;
    storage[387] = 34'h000000000;
    storage[388] = 34'h000000000;
    storage[389] = 34'h000000000;
    storage[390] = 34'h000000000;
    storage[391] = 34'h000000000;
    storage[392] = 34'h000000000;
    storage[393] = 34'h000000000;
    storage[394] = 34'h000000000;
    storage[395] = 34'h000000000;
    storage[396] = 34'h000000000;
    storage[397] = 34'h000000000;
    storage[398] = 34'h000000000;
    storage[399] = 34'h000000000;
    storage[400] = 34'h000000000;
    storage[401] = 34'h000000000;
    storage[402] = 34'h000000000;
    storage[403] = 34'h000000000;
    storage[404] = 34'h000000000;
    storage[405] = 34'h000000000;
    storage[406] = 34'h000000000;
    storage[407] = 34'h000000000;
    storage[408] = 34'h000000000;
    storage[409] = 34'h000000000;
    storage[410] = 34'h000000000;
    storage[411] = 34'h000000000;
    storage[412] = 34'h000000000;
    storage[413] = 34'h000000000;
    storage[414] = 34'h000000000;
    storage[415] = 34'h000000000;
    storage[416] = 34'h000000000;
    storage[417] = 34'h000000000;
    storage[418] = 34'h000000000;
    storage[419] = 34'h000000000;
    storage[420] = 34'h000000000;
    storage[421] = 34'h000000000;
    storage[422] = 34'h000000000;
    storage[423] = 34'h000000000;
    storage[424] = 34'h000000000;
    storage[425] = 34'h000000000;
    storage[426] = 34'h000000000;
    storage[427] = 34'h000000000;
    storage[428] = 34'h000000000;
    storage[429] = 34'h000000000;
    storage[430] = 34'h000000000;
    storage[431] = 34'h000000000;
    storage[432] = 34'h000000000;
    storage[433] = 34'h000000000;
    storage[434] = 34'h000000000;
    storage[435] = 34'h000000000;
    storage[436] = 34'h000000000;
    storage[437] = 34'h000000000;
    storage[438] = 34'h000000000;
    storage[439] = 34'h000000000;
    storage[440] = 34'h000000000;
    storage[441] = 34'h000000000;
    storage[442] = 34'h000000000;
    storage[443] = 34'h000000000;
    storage[444] = 34'h000000000;
    storage[445] = 34'h000000000;
    storage[446] = 34'h000000000;
    storage[447] = 34'h000000000;
    storage[448] = 34'h000000000;
    storage[449] = 34'h000000000;
    storage[450] = 34'h000000000;
    storage[451] = 34'h000000000;
    storage[452] = 34'h000000000;
    storage[453] = 34'h000000000;
    storage[454] = 34'h000000000;
    storage[455] = 34'h000000000;
    storage[456] = 34'h000000000;
    storage[457] = 34'h000000000;
    storage[458] = 34'h000000000;
    storage[459] = 34'h000000000;
    storage[460] = 34'h000000000;
    storage[461] = 34'h000000000;
    storage[462] = 34'h000000000;
    storage[463] = 34'h000000000;
    storage[464] = 34'h000000000;
    storage[465] = 34'h000000000;
    storage[466] = 34'h000000000;
    storage[467] = 34'h000000000;
    storage[468] = 34'h000000000;
    storage[469] = 34'h000000000;
    storage[470] = 34'h000000000;
    storage[471] = 34'h000000000;
    storage[472] = 34'h000000000;
    storage[473] = 34'h000000000;
    storage[474] = 34'h000000000;
    storage[475] = 34'h000000000;
    storage[476] = 34'h000000000;
    storage[477] = 34'h000000000;
    storage[478] = 34'h000000000;
    storage[479] = 34'h000000000;
    storage[480] = 34'h000000000;
    storage[481] = 34'h000000000;
    storage[482] = 34'h000000000;
    storage[483] = 34'h000000000;
    storage[484] = 34'h000000000;
    storage[485] = 34'h000000000;
    storage[486] = 34'h000000000;
    storage[487] = 34'h000000000;
    storage[488] = 34'h000000000;
    storage[489] = 34'h000000000;
    storage[490] = 34'h000000000;
    storage[491] = 34'h000000000;
    storage[492] = 34'h000000000;
    storage[493] = 34'h000000000;
    storage[494] = 34'h000000000;
    storage[495] = 34'h000000000;
    storage[496] = 34'h000000000;
    storage[497] = 34'h000000000;
    storage[498] = 34'h000000000;
    storage[499] = 34'h000000000;
    storage[500] = 34'h000000000;
    storage[501] = 34'h000000000;
    storage[502] = 34'h000000000;
    storage[503] = 34'h000000000;
    storage[504] = 34'h000000000;
    storage[505] = 34'h000000000;
    storage[506] = 34'h000000000;
    storage[507] = 34'h000000000;
    storage[508] = 34'h000000000;
    storage[509] = 34'h000000000;
    storage[510] = 34'h000000000;
  end
  reg [33:0] _0_;
  always @(posedge clk) begin
    if (\$next\rdport_storage_r_en ) _0_ <= storage[\$next\rdport_storage_r_addr ];
    if (\$next\wrport_storage_w_en ) storage[\$next\wrport_storage_w_addr ] <= \$next\wrport_storage_w_data ;
  end
  assign rdport_storage_r_data = _0_;
  always @* begin
    \$next\writable  = 1'h0;
    \$next\writable  = \$2 ;
  end
  always @* begin
    \$next\readable  = 1'h0;
    \$next\readable  = \$4 ;
  end
  always @* begin
    \$next\level  = level;
    casez (\$49 )
      1'h1:
          \$next\level  = \$51 [8:0];
    endcase
    casez (\$64 )
      1'h1:
          \$next\level  = \$66 [8:0];
    endcase
    casez (rst)
      1'h1:
          \$next\level  = 9'h000;
    endcase
  end
  always @* begin
    \$next\wrport_storage_w_addr  = 9'h000;
    \$next\wrport_storage_w_addr  = produce;
    casez (replace)
      1'h1:
          \$next\wrport_storage_w_addr  = \$6 [8:0];
    endcase
  end
  always @* begin
    \$next\wrport_storage_w_data  = 34'h000000000;
    \$next\wrport_storage_w_data  = din;
  end
  always @* begin
    \$next\wrport_storage_w_en  = 1'h0;
    \$next\wrport_storage_w_en  = \$15 ;
  end
  always @* begin
    \$next\produce  = produce;
    casez (\$21 )
      1'h1:
          \$next\produce  = \$23 [8:0];
    endcase
    casez (rst)
      1'h1:
          \$next\produce  = 9'h000;
    endcase
  end
  always @* begin
    \$next\rdport_storage_r_addr  = 9'h000;
    \$next\rdport_storage_r_addr  = consume;
  end
  always @* begin
    \$next\dout  = 34'h000000000;
    \$next\dout  = rdport_storage_r_data;
  end
  always @* begin
    \$next\rdport_storage_r_en  = 1'h0;
    \$next\rdport_storage_r_en  = re;
  end
  always @* begin
    \$next\consume  = consume;
    casez (\$30 )
      1'h1:
          \$next\consume  = \$32 [8:0];
    endcase
    casez (rst)
      1'h1:
          \$next\consume  = 9'h000;
    endcase
  end
  assign \$6  = \$9 ;
  assign \$23  = \$26 ;
  assign \$32  = \$35 ;
  assign \$51  = \$52 ;
  assign \$66  = \$67 ;
  assign rdport_storage_r_en = \$next\rdport_storage_r_en ;
  assign dout = \$next\dout ;
  assign rdport_storage_r_addr = \$next\rdport_storage_r_addr ;
  assign wrport_storage_w_en = \$next\wrport_storage_w_en ;
  assign wrport_storage_w_data = \$next\wrport_storage_w_data ;
  assign wrport_storage_w_addr = \$next\wrport_storage_w_addr ;
  assign readable = \$next\readable ;
  assign writable = \$next\writable ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter_fifo.fifo.unbuffered" *)
(* generator = "nMigen" *)
module \unbuffered$3 (we, replace, re, rst, clk, writable, readable, dout, level, din);
  wire \$10 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$2 ;
  wire \$21 ;
  wire [10:0] \$23 ;
  wire [10:0] \$24 ;
  wire [10:0] \$26 ;
  wire \$27 ;
  wire \$30 ;
  wire [10:0] \$32 ;
  wire [10:0] \$33 ;
  wire [10:0] \$35 ;
  wire \$36 ;
  wire \$39 ;
  wire \$4 ;
  wire \$41 ;
  wire \$43 ;
  wire \$45 ;
  wire \$46 ;
  wire \$49 ;
  wire [10:0] \$51 ;
  wire [10:0] \$52 ;
  wire \$54 ;
  wire \$56 ;
  wire \$57 ;
  wire \$59 ;
  wire [10:0] \$6 ;
  wire \$61 ;
  wire \$64 ;
  wire [10:0] \$66 ;
  wire [10:0] \$67 ;
  wire [10:0] \$7 ;
  wire [10:0] \$9 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:156" *)
  reg [9:0] \$next\consume ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  reg [16:0] \$next\dout ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  reg [9:0] \$next\level ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:155" *)
  reg [9:0] \$next\produce ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  reg [9:0] \$next\rdport_storage_r_addr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:85" *)
  reg \$next\rdport_storage_r_en ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  reg \$next\readable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  reg \$next\writable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:146" *)
  reg [9:0] \$next\wrport_storage_w_addr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:148" *)
  reg [16:0] \$next\wrport_storage_w_data ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:150" *)
  reg \$next\wrport_storage_w_en ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 10'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:156" *)
  reg [9:0] consume = 10'h000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  input [16:0] din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  output [16:0] dout;
  (* init = 10'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  output [9:0] level;
  reg [9:0] level = 10'h000;
  (* init = 10'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:155" *)
  reg [9:0] produce = 10'h000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  wire [9:0] rdport_storage_r_addr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:83" *)
  wire [16:0] rdport_storage_r_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:85" *)
  wire rdport_storage_r_en;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  input re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  output readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  input replace;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  input we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  output writable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:146" *)
  wire [9:0] wrport_storage_w_addr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:148" *)
  wire [16:0] wrport_storage_w_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:150" *)
  wire wrport_storage_w_en;
  assign \$10  = produce == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:102" *) 1'h0;
  assign \$9  = \$10  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:164" *) 11'h3fe : \$7 ;
  assign \$13  = writable | (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:161" *) replace;
  assign \$15  = we & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:161" *) \$13 ;
  assign \$17  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$19  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$21  = \$17  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$19 ;
  assign \$24  = produce + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 1'h1;
  assign \$27  = produce == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 10'h3fe;
  assign \$26  = \$27  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:166" *) 11'h000 : \$24 ;
  assign \$2  = level != (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:144" *) 10'h3ff;
  assign \$30  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$33  = consume + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 1'h1;
  assign \$36  = consume == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 10'h3fe;
  assign \$35  = \$36  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:175" *) 11'h000 : \$33 ;
  assign \$39  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$41  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$43  = \$39  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$41 ;
  assign \$46  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$45  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:177" *) \$46 ;
  assign \$4  = level != (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:145" *) 1'h0;
  assign \$49  = \$43  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:177" *) \$45 ;
  assign \$52  = level + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:178" *) 1'h1;
  assign \$54  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$57  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$59  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$61  = \$57  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$59 ;
  assign \$56  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:179" *) \$61 ;
  assign \$64  = \$54  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:179" *) \$56 ;
  assign \$67  = level - (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:180" *) 1'h1;
  assign \$7  = produce - (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:102" *) 1'h1;
  always @(posedge clk)
      level <= \$next\level ;
  always @(posedge clk)
      consume <= \$next\consume ;
  always @(posedge clk)
      produce <= \$next\produce ;
  reg [16:0] storage [1022:0];
  initial begin
    storage[0] = 17'h00000;
    storage[1] = 17'h00000;
    storage[2] = 17'h00000;
    storage[3] = 17'h00000;
    storage[4] = 17'h00000;
    storage[5] = 17'h00000;
    storage[6] = 17'h00000;
    storage[7] = 17'h00000;
    storage[8] = 17'h00000;
    storage[9] = 17'h00000;
    storage[10] = 17'h00000;
    storage[11] = 17'h00000;
    storage[12] = 17'h00000;
    storage[13] = 17'h00000;
    storage[14] = 17'h00000;
    storage[15] = 17'h00000;
    storage[16] = 17'h00000;
    storage[17] = 17'h00000;
    storage[18] = 17'h00000;
    storage[19] = 17'h00000;
    storage[20] = 17'h00000;
    storage[21] = 17'h00000;
    storage[22] = 17'h00000;
    storage[23] = 17'h00000;
    storage[24] = 17'h00000;
    storage[25] = 17'h00000;
    storage[26] = 17'h00000;
    storage[27] = 17'h00000;
    storage[28] = 17'h00000;
    storage[29] = 17'h00000;
    storage[30] = 17'h00000;
    storage[31] = 17'h00000;
    storage[32] = 17'h00000;
    storage[33] = 17'h00000;
    storage[34] = 17'h00000;
    storage[35] = 17'h00000;
    storage[36] = 17'h00000;
    storage[37] = 17'h00000;
    storage[38] = 17'h00000;
    storage[39] = 17'h00000;
    storage[40] = 17'h00000;
    storage[41] = 17'h00000;
    storage[42] = 17'h00000;
    storage[43] = 17'h00000;
    storage[44] = 17'h00000;
    storage[45] = 17'h00000;
    storage[46] = 17'h00000;
    storage[47] = 17'h00000;
    storage[48] = 17'h00000;
    storage[49] = 17'h00000;
    storage[50] = 17'h00000;
    storage[51] = 17'h00000;
    storage[52] = 17'h00000;
    storage[53] = 17'h00000;
    storage[54] = 17'h00000;
    storage[55] = 17'h00000;
    storage[56] = 17'h00000;
    storage[57] = 17'h00000;
    storage[58] = 17'h00000;
    storage[59] = 17'h00000;
    storage[60] = 17'h00000;
    storage[61] = 17'h00000;
    storage[62] = 17'h00000;
    storage[63] = 17'h00000;
    storage[64] = 17'h00000;
    storage[65] = 17'h00000;
    storage[66] = 17'h00000;
    storage[67] = 17'h00000;
    storage[68] = 17'h00000;
    storage[69] = 17'h00000;
    storage[70] = 17'h00000;
    storage[71] = 17'h00000;
    storage[72] = 17'h00000;
    storage[73] = 17'h00000;
    storage[74] = 17'h00000;
    storage[75] = 17'h00000;
    storage[76] = 17'h00000;
    storage[77] = 17'h00000;
    storage[78] = 17'h00000;
    storage[79] = 17'h00000;
    storage[80] = 17'h00000;
    storage[81] = 17'h00000;
    storage[82] = 17'h00000;
    storage[83] = 17'h00000;
    storage[84] = 17'h00000;
    storage[85] = 17'h00000;
    storage[86] = 17'h00000;
    storage[87] = 17'h00000;
    storage[88] = 17'h00000;
    storage[89] = 17'h00000;
    storage[90] = 17'h00000;
    storage[91] = 17'h00000;
    storage[92] = 17'h00000;
    storage[93] = 17'h00000;
    storage[94] = 17'h00000;
    storage[95] = 17'h00000;
    storage[96] = 17'h00000;
    storage[97] = 17'h00000;
    storage[98] = 17'h00000;
    storage[99] = 17'h00000;
    storage[100] = 17'h00000;
    storage[101] = 17'h00000;
    storage[102] = 17'h00000;
    storage[103] = 17'h00000;
    storage[104] = 17'h00000;
    storage[105] = 17'h00000;
    storage[106] = 17'h00000;
    storage[107] = 17'h00000;
    storage[108] = 17'h00000;
    storage[109] = 17'h00000;
    storage[110] = 17'h00000;
    storage[111] = 17'h00000;
    storage[112] = 17'h00000;
    storage[113] = 17'h00000;
    storage[114] = 17'h00000;
    storage[115] = 17'h00000;
    storage[116] = 17'h00000;
    storage[117] = 17'h00000;
    storage[118] = 17'h00000;
    storage[119] = 17'h00000;
    storage[120] = 17'h00000;
    storage[121] = 17'h00000;
    storage[122] = 17'h00000;
    storage[123] = 17'h00000;
    storage[124] = 17'h00000;
    storage[125] = 17'h00000;
    storage[126] = 17'h00000;
    storage[127] = 17'h00000;
    storage[128] = 17'h00000;
    storage[129] = 17'h00000;
    storage[130] = 17'h00000;
    storage[131] = 17'h00000;
    storage[132] = 17'h00000;
    storage[133] = 17'h00000;
    storage[134] = 17'h00000;
    storage[135] = 17'h00000;
    storage[136] = 17'h00000;
    storage[137] = 17'h00000;
    storage[138] = 17'h00000;
    storage[139] = 17'h00000;
    storage[140] = 17'h00000;
    storage[141] = 17'h00000;
    storage[142] = 17'h00000;
    storage[143] = 17'h00000;
    storage[144] = 17'h00000;
    storage[145] = 17'h00000;
    storage[146] = 17'h00000;
    storage[147] = 17'h00000;
    storage[148] = 17'h00000;
    storage[149] = 17'h00000;
    storage[150] = 17'h00000;
    storage[151] = 17'h00000;
    storage[152] = 17'h00000;
    storage[153] = 17'h00000;
    storage[154] = 17'h00000;
    storage[155] = 17'h00000;
    storage[156] = 17'h00000;
    storage[157] = 17'h00000;
    storage[158] = 17'h00000;
    storage[159] = 17'h00000;
    storage[160] = 17'h00000;
    storage[161] = 17'h00000;
    storage[162] = 17'h00000;
    storage[163] = 17'h00000;
    storage[164] = 17'h00000;
    storage[165] = 17'h00000;
    storage[166] = 17'h00000;
    storage[167] = 17'h00000;
    storage[168] = 17'h00000;
    storage[169] = 17'h00000;
    storage[170] = 17'h00000;
    storage[171] = 17'h00000;
    storage[172] = 17'h00000;
    storage[173] = 17'h00000;
    storage[174] = 17'h00000;
    storage[175] = 17'h00000;
    storage[176] = 17'h00000;
    storage[177] = 17'h00000;
    storage[178] = 17'h00000;
    storage[179] = 17'h00000;
    storage[180] = 17'h00000;
    storage[181] = 17'h00000;
    storage[182] = 17'h00000;
    storage[183] = 17'h00000;
    storage[184] = 17'h00000;
    storage[185] = 17'h00000;
    storage[186] = 17'h00000;
    storage[187] = 17'h00000;
    storage[188] = 17'h00000;
    storage[189] = 17'h00000;
    storage[190] = 17'h00000;
    storage[191] = 17'h00000;
    storage[192] = 17'h00000;
    storage[193] = 17'h00000;
    storage[194] = 17'h00000;
    storage[195] = 17'h00000;
    storage[196] = 17'h00000;
    storage[197] = 17'h00000;
    storage[198] = 17'h00000;
    storage[199] = 17'h00000;
    storage[200] = 17'h00000;
    storage[201] = 17'h00000;
    storage[202] = 17'h00000;
    storage[203] = 17'h00000;
    storage[204] = 17'h00000;
    storage[205] = 17'h00000;
    storage[206] = 17'h00000;
    storage[207] = 17'h00000;
    storage[208] = 17'h00000;
    storage[209] = 17'h00000;
    storage[210] = 17'h00000;
    storage[211] = 17'h00000;
    storage[212] = 17'h00000;
    storage[213] = 17'h00000;
    storage[214] = 17'h00000;
    storage[215] = 17'h00000;
    storage[216] = 17'h00000;
    storage[217] = 17'h00000;
    storage[218] = 17'h00000;
    storage[219] = 17'h00000;
    storage[220] = 17'h00000;
    storage[221] = 17'h00000;
    storage[222] = 17'h00000;
    storage[223] = 17'h00000;
    storage[224] = 17'h00000;
    storage[225] = 17'h00000;
    storage[226] = 17'h00000;
    storage[227] = 17'h00000;
    storage[228] = 17'h00000;
    storage[229] = 17'h00000;
    storage[230] = 17'h00000;
    storage[231] = 17'h00000;
    storage[232] = 17'h00000;
    storage[233] = 17'h00000;
    storage[234] = 17'h00000;
    storage[235] = 17'h00000;
    storage[236] = 17'h00000;
    storage[237] = 17'h00000;
    storage[238] = 17'h00000;
    storage[239] = 17'h00000;
    storage[240] = 17'h00000;
    storage[241] = 17'h00000;
    storage[242] = 17'h00000;
    storage[243] = 17'h00000;
    storage[244] = 17'h00000;
    storage[245] = 17'h00000;
    storage[246] = 17'h00000;
    storage[247] = 17'h00000;
    storage[248] = 17'h00000;
    storage[249] = 17'h00000;
    storage[250] = 17'h00000;
    storage[251] = 17'h00000;
    storage[252] = 17'h00000;
    storage[253] = 17'h00000;
    storage[254] = 17'h00000;
    storage[255] = 17'h00000;
    storage[256] = 17'h00000;
    storage[257] = 17'h00000;
    storage[258] = 17'h00000;
    storage[259] = 17'h00000;
    storage[260] = 17'h00000;
    storage[261] = 17'h00000;
    storage[262] = 17'h00000;
    storage[263] = 17'h00000;
    storage[264] = 17'h00000;
    storage[265] = 17'h00000;
    storage[266] = 17'h00000;
    storage[267] = 17'h00000;
    storage[268] = 17'h00000;
    storage[269] = 17'h00000;
    storage[270] = 17'h00000;
    storage[271] = 17'h00000;
    storage[272] = 17'h00000;
    storage[273] = 17'h00000;
    storage[274] = 17'h00000;
    storage[275] = 17'h00000;
    storage[276] = 17'h00000;
    storage[277] = 17'h00000;
    storage[278] = 17'h00000;
    storage[279] = 17'h00000;
    storage[280] = 17'h00000;
    storage[281] = 17'h00000;
    storage[282] = 17'h00000;
    storage[283] = 17'h00000;
    storage[284] = 17'h00000;
    storage[285] = 17'h00000;
    storage[286] = 17'h00000;
    storage[287] = 17'h00000;
    storage[288] = 17'h00000;
    storage[289] = 17'h00000;
    storage[290] = 17'h00000;
    storage[291] = 17'h00000;
    storage[292] = 17'h00000;
    storage[293] = 17'h00000;
    storage[294] = 17'h00000;
    storage[295] = 17'h00000;
    storage[296] = 17'h00000;
    storage[297] = 17'h00000;
    storage[298] = 17'h00000;
    storage[299] = 17'h00000;
    storage[300] = 17'h00000;
    storage[301] = 17'h00000;
    storage[302] = 17'h00000;
    storage[303] = 17'h00000;
    storage[304] = 17'h00000;
    storage[305] = 17'h00000;
    storage[306] = 17'h00000;
    storage[307] = 17'h00000;
    storage[308] = 17'h00000;
    storage[309] = 17'h00000;
    storage[310] = 17'h00000;
    storage[311] = 17'h00000;
    storage[312] = 17'h00000;
    storage[313] = 17'h00000;
    storage[314] = 17'h00000;
    storage[315] = 17'h00000;
    storage[316] = 17'h00000;
    storage[317] = 17'h00000;
    storage[318] = 17'h00000;
    storage[319] = 17'h00000;
    storage[320] = 17'h00000;
    storage[321] = 17'h00000;
    storage[322] = 17'h00000;
    storage[323] = 17'h00000;
    storage[324] = 17'h00000;
    storage[325] = 17'h00000;
    storage[326] = 17'h00000;
    storage[327] = 17'h00000;
    storage[328] = 17'h00000;
    storage[329] = 17'h00000;
    storage[330] = 17'h00000;
    storage[331] = 17'h00000;
    storage[332] = 17'h00000;
    storage[333] = 17'h00000;
    storage[334] = 17'h00000;
    storage[335] = 17'h00000;
    storage[336] = 17'h00000;
    storage[337] = 17'h00000;
    storage[338] = 17'h00000;
    storage[339] = 17'h00000;
    storage[340] = 17'h00000;
    storage[341] = 17'h00000;
    storage[342] = 17'h00000;
    storage[343] = 17'h00000;
    storage[344] = 17'h00000;
    storage[345] = 17'h00000;
    storage[346] = 17'h00000;
    storage[347] = 17'h00000;
    storage[348] = 17'h00000;
    storage[349] = 17'h00000;
    storage[350] = 17'h00000;
    storage[351] = 17'h00000;
    storage[352] = 17'h00000;
    storage[353] = 17'h00000;
    storage[354] = 17'h00000;
    storage[355] = 17'h00000;
    storage[356] = 17'h00000;
    storage[357] = 17'h00000;
    storage[358] = 17'h00000;
    storage[359] = 17'h00000;
    storage[360] = 17'h00000;
    storage[361] = 17'h00000;
    storage[362] = 17'h00000;
    storage[363] = 17'h00000;
    storage[364] = 17'h00000;
    storage[365] = 17'h00000;
    storage[366] = 17'h00000;
    storage[367] = 17'h00000;
    storage[368] = 17'h00000;
    storage[369] = 17'h00000;
    storage[370] = 17'h00000;
    storage[371] = 17'h00000;
    storage[372] = 17'h00000;
    storage[373] = 17'h00000;
    storage[374] = 17'h00000;
    storage[375] = 17'h00000;
    storage[376] = 17'h00000;
    storage[377] = 17'h00000;
    storage[378] = 17'h00000;
    storage[379] = 17'h00000;
    storage[380] = 17'h00000;
    storage[381] = 17'h00000;
    storage[382] = 17'h00000;
    storage[383] = 17'h00000;
    storage[384] = 17'h00000;
    storage[385] = 17'h00000;
    storage[386] = 17'h00000;
    storage[387] = 17'h00000;
    storage[388] = 17'h00000;
    storage[389] = 17'h00000;
    storage[390] = 17'h00000;
    storage[391] = 17'h00000;
    storage[392] = 17'h00000;
    storage[393] = 17'h00000;
    storage[394] = 17'h00000;
    storage[395] = 17'h00000;
    storage[396] = 17'h00000;
    storage[397] = 17'h00000;
    storage[398] = 17'h00000;
    storage[399] = 17'h00000;
    storage[400] = 17'h00000;
    storage[401] = 17'h00000;
    storage[402] = 17'h00000;
    storage[403] = 17'h00000;
    storage[404] = 17'h00000;
    storage[405] = 17'h00000;
    storage[406] = 17'h00000;
    storage[407] = 17'h00000;
    storage[408] = 17'h00000;
    storage[409] = 17'h00000;
    storage[410] = 17'h00000;
    storage[411] = 17'h00000;
    storage[412] = 17'h00000;
    storage[413] = 17'h00000;
    storage[414] = 17'h00000;
    storage[415] = 17'h00000;
    storage[416] = 17'h00000;
    storage[417] = 17'h00000;
    storage[418] = 17'h00000;
    storage[419] = 17'h00000;
    storage[420] = 17'h00000;
    storage[421] = 17'h00000;
    storage[422] = 17'h00000;
    storage[423] = 17'h00000;
    storage[424] = 17'h00000;
    storage[425] = 17'h00000;
    storage[426] = 17'h00000;
    storage[427] = 17'h00000;
    storage[428] = 17'h00000;
    storage[429] = 17'h00000;
    storage[430] = 17'h00000;
    storage[431] = 17'h00000;
    storage[432] = 17'h00000;
    storage[433] = 17'h00000;
    storage[434] = 17'h00000;
    storage[435] = 17'h00000;
    storage[436] = 17'h00000;
    storage[437] = 17'h00000;
    storage[438] = 17'h00000;
    storage[439] = 17'h00000;
    storage[440] = 17'h00000;
    storage[441] = 17'h00000;
    storage[442] = 17'h00000;
    storage[443] = 17'h00000;
    storage[444] = 17'h00000;
    storage[445] = 17'h00000;
    storage[446] = 17'h00000;
    storage[447] = 17'h00000;
    storage[448] = 17'h00000;
    storage[449] = 17'h00000;
    storage[450] = 17'h00000;
    storage[451] = 17'h00000;
    storage[452] = 17'h00000;
    storage[453] = 17'h00000;
    storage[454] = 17'h00000;
    storage[455] = 17'h00000;
    storage[456] = 17'h00000;
    storage[457] = 17'h00000;
    storage[458] = 17'h00000;
    storage[459] = 17'h00000;
    storage[460] = 17'h00000;
    storage[461] = 17'h00000;
    storage[462] = 17'h00000;
    storage[463] = 17'h00000;
    storage[464] = 17'h00000;
    storage[465] = 17'h00000;
    storage[466] = 17'h00000;
    storage[467] = 17'h00000;
    storage[468] = 17'h00000;
    storage[469] = 17'h00000;
    storage[470] = 17'h00000;
    storage[471] = 17'h00000;
    storage[472] = 17'h00000;
    storage[473] = 17'h00000;
    storage[474] = 17'h00000;
    storage[475] = 17'h00000;
    storage[476] = 17'h00000;
    storage[477] = 17'h00000;
    storage[478] = 17'h00000;
    storage[479] = 17'h00000;
    storage[480] = 17'h00000;
    storage[481] = 17'h00000;
    storage[482] = 17'h00000;
    storage[483] = 17'h00000;
    storage[484] = 17'h00000;
    storage[485] = 17'h00000;
    storage[486] = 17'h00000;
    storage[487] = 17'h00000;
    storage[488] = 17'h00000;
    storage[489] = 17'h00000;
    storage[490] = 17'h00000;
    storage[491] = 17'h00000;
    storage[492] = 17'h00000;
    storage[493] = 17'h00000;
    storage[494] = 17'h00000;
    storage[495] = 17'h00000;
    storage[496] = 17'h00000;
    storage[497] = 17'h00000;
    storage[498] = 17'h00000;
    storage[499] = 17'h00000;
    storage[500] = 17'h00000;
    storage[501] = 17'h00000;
    storage[502] = 17'h00000;
    storage[503] = 17'h00000;
    storage[504] = 17'h00000;
    storage[505] = 17'h00000;
    storage[506] = 17'h00000;
    storage[507] = 17'h00000;
    storage[508] = 17'h00000;
    storage[509] = 17'h00000;
    storage[510] = 17'h00000;
    storage[511] = 17'h00000;
    storage[512] = 17'h00000;
    storage[513] = 17'h00000;
    storage[514] = 17'h00000;
    storage[515] = 17'h00000;
    storage[516] = 17'h00000;
    storage[517] = 17'h00000;
    storage[518] = 17'h00000;
    storage[519] = 17'h00000;
    storage[520] = 17'h00000;
    storage[521] = 17'h00000;
    storage[522] = 17'h00000;
    storage[523] = 17'h00000;
    storage[524] = 17'h00000;
    storage[525] = 17'h00000;
    storage[526] = 17'h00000;
    storage[527] = 17'h00000;
    storage[528] = 17'h00000;
    storage[529] = 17'h00000;
    storage[530] = 17'h00000;
    storage[531] = 17'h00000;
    storage[532] = 17'h00000;
    storage[533] = 17'h00000;
    storage[534] = 17'h00000;
    storage[535] = 17'h00000;
    storage[536] = 17'h00000;
    storage[537] = 17'h00000;
    storage[538] = 17'h00000;
    storage[539] = 17'h00000;
    storage[540] = 17'h00000;
    storage[541] = 17'h00000;
    storage[542] = 17'h00000;
    storage[543] = 17'h00000;
    storage[544] = 17'h00000;
    storage[545] = 17'h00000;
    storage[546] = 17'h00000;
    storage[547] = 17'h00000;
    storage[548] = 17'h00000;
    storage[549] = 17'h00000;
    storage[550] = 17'h00000;
    storage[551] = 17'h00000;
    storage[552] = 17'h00000;
    storage[553] = 17'h00000;
    storage[554] = 17'h00000;
    storage[555] = 17'h00000;
    storage[556] = 17'h00000;
    storage[557] = 17'h00000;
    storage[558] = 17'h00000;
    storage[559] = 17'h00000;
    storage[560] = 17'h00000;
    storage[561] = 17'h00000;
    storage[562] = 17'h00000;
    storage[563] = 17'h00000;
    storage[564] = 17'h00000;
    storage[565] = 17'h00000;
    storage[566] = 17'h00000;
    storage[567] = 17'h00000;
    storage[568] = 17'h00000;
    storage[569] = 17'h00000;
    storage[570] = 17'h00000;
    storage[571] = 17'h00000;
    storage[572] = 17'h00000;
    storage[573] = 17'h00000;
    storage[574] = 17'h00000;
    storage[575] = 17'h00000;
    storage[576] = 17'h00000;
    storage[577] = 17'h00000;
    storage[578] = 17'h00000;
    storage[579] = 17'h00000;
    storage[580] = 17'h00000;
    storage[581] = 17'h00000;
    storage[582] = 17'h00000;
    storage[583] = 17'h00000;
    storage[584] = 17'h00000;
    storage[585] = 17'h00000;
    storage[586] = 17'h00000;
    storage[587] = 17'h00000;
    storage[588] = 17'h00000;
    storage[589] = 17'h00000;
    storage[590] = 17'h00000;
    storage[591] = 17'h00000;
    storage[592] = 17'h00000;
    storage[593] = 17'h00000;
    storage[594] = 17'h00000;
    storage[595] = 17'h00000;
    storage[596] = 17'h00000;
    storage[597] = 17'h00000;
    storage[598] = 17'h00000;
    storage[599] = 17'h00000;
    storage[600] = 17'h00000;
    storage[601] = 17'h00000;
    storage[602] = 17'h00000;
    storage[603] = 17'h00000;
    storage[604] = 17'h00000;
    storage[605] = 17'h00000;
    storage[606] = 17'h00000;
    storage[607] = 17'h00000;
    storage[608] = 17'h00000;
    storage[609] = 17'h00000;
    storage[610] = 17'h00000;
    storage[611] = 17'h00000;
    storage[612] = 17'h00000;
    storage[613] = 17'h00000;
    storage[614] = 17'h00000;
    storage[615] = 17'h00000;
    storage[616] = 17'h00000;
    storage[617] = 17'h00000;
    storage[618] = 17'h00000;
    storage[619] = 17'h00000;
    storage[620] = 17'h00000;
    storage[621] = 17'h00000;
    storage[622] = 17'h00000;
    storage[623] = 17'h00000;
    storage[624] = 17'h00000;
    storage[625] = 17'h00000;
    storage[626] = 17'h00000;
    storage[627] = 17'h00000;
    storage[628] = 17'h00000;
    storage[629] = 17'h00000;
    storage[630] = 17'h00000;
    storage[631] = 17'h00000;
    storage[632] = 17'h00000;
    storage[633] = 17'h00000;
    storage[634] = 17'h00000;
    storage[635] = 17'h00000;
    storage[636] = 17'h00000;
    storage[637] = 17'h00000;
    storage[638] = 17'h00000;
    storage[639] = 17'h00000;
    storage[640] = 17'h00000;
    storage[641] = 17'h00000;
    storage[642] = 17'h00000;
    storage[643] = 17'h00000;
    storage[644] = 17'h00000;
    storage[645] = 17'h00000;
    storage[646] = 17'h00000;
    storage[647] = 17'h00000;
    storage[648] = 17'h00000;
    storage[649] = 17'h00000;
    storage[650] = 17'h00000;
    storage[651] = 17'h00000;
    storage[652] = 17'h00000;
    storage[653] = 17'h00000;
    storage[654] = 17'h00000;
    storage[655] = 17'h00000;
    storage[656] = 17'h00000;
    storage[657] = 17'h00000;
    storage[658] = 17'h00000;
    storage[659] = 17'h00000;
    storage[660] = 17'h00000;
    storage[661] = 17'h00000;
    storage[662] = 17'h00000;
    storage[663] = 17'h00000;
    storage[664] = 17'h00000;
    storage[665] = 17'h00000;
    storage[666] = 17'h00000;
    storage[667] = 17'h00000;
    storage[668] = 17'h00000;
    storage[669] = 17'h00000;
    storage[670] = 17'h00000;
    storage[671] = 17'h00000;
    storage[672] = 17'h00000;
    storage[673] = 17'h00000;
    storage[674] = 17'h00000;
    storage[675] = 17'h00000;
    storage[676] = 17'h00000;
    storage[677] = 17'h00000;
    storage[678] = 17'h00000;
    storage[679] = 17'h00000;
    storage[680] = 17'h00000;
    storage[681] = 17'h00000;
    storage[682] = 17'h00000;
    storage[683] = 17'h00000;
    storage[684] = 17'h00000;
    storage[685] = 17'h00000;
    storage[686] = 17'h00000;
    storage[687] = 17'h00000;
    storage[688] = 17'h00000;
    storage[689] = 17'h00000;
    storage[690] = 17'h00000;
    storage[691] = 17'h00000;
    storage[692] = 17'h00000;
    storage[693] = 17'h00000;
    storage[694] = 17'h00000;
    storage[695] = 17'h00000;
    storage[696] = 17'h00000;
    storage[697] = 17'h00000;
    storage[698] = 17'h00000;
    storage[699] = 17'h00000;
    storage[700] = 17'h00000;
    storage[701] = 17'h00000;
    storage[702] = 17'h00000;
    storage[703] = 17'h00000;
    storage[704] = 17'h00000;
    storage[705] = 17'h00000;
    storage[706] = 17'h00000;
    storage[707] = 17'h00000;
    storage[708] = 17'h00000;
    storage[709] = 17'h00000;
    storage[710] = 17'h00000;
    storage[711] = 17'h00000;
    storage[712] = 17'h00000;
    storage[713] = 17'h00000;
    storage[714] = 17'h00000;
    storage[715] = 17'h00000;
    storage[716] = 17'h00000;
    storage[717] = 17'h00000;
    storage[718] = 17'h00000;
    storage[719] = 17'h00000;
    storage[720] = 17'h00000;
    storage[721] = 17'h00000;
    storage[722] = 17'h00000;
    storage[723] = 17'h00000;
    storage[724] = 17'h00000;
    storage[725] = 17'h00000;
    storage[726] = 17'h00000;
    storage[727] = 17'h00000;
    storage[728] = 17'h00000;
    storage[729] = 17'h00000;
    storage[730] = 17'h00000;
    storage[731] = 17'h00000;
    storage[732] = 17'h00000;
    storage[733] = 17'h00000;
    storage[734] = 17'h00000;
    storage[735] = 17'h00000;
    storage[736] = 17'h00000;
    storage[737] = 17'h00000;
    storage[738] = 17'h00000;
    storage[739] = 17'h00000;
    storage[740] = 17'h00000;
    storage[741] = 17'h00000;
    storage[742] = 17'h00000;
    storage[743] = 17'h00000;
    storage[744] = 17'h00000;
    storage[745] = 17'h00000;
    storage[746] = 17'h00000;
    storage[747] = 17'h00000;
    storage[748] = 17'h00000;
    storage[749] = 17'h00000;
    storage[750] = 17'h00000;
    storage[751] = 17'h00000;
    storage[752] = 17'h00000;
    storage[753] = 17'h00000;
    storage[754] = 17'h00000;
    storage[755] = 17'h00000;
    storage[756] = 17'h00000;
    storage[757] = 17'h00000;
    storage[758] = 17'h00000;
    storage[759] = 17'h00000;
    storage[760] = 17'h00000;
    storage[761] = 17'h00000;
    storage[762] = 17'h00000;
    storage[763] = 17'h00000;
    storage[764] = 17'h00000;
    storage[765] = 17'h00000;
    storage[766] = 17'h00000;
    storage[767] = 17'h00000;
    storage[768] = 17'h00000;
    storage[769] = 17'h00000;
    storage[770] = 17'h00000;
    storage[771] = 17'h00000;
    storage[772] = 17'h00000;
    storage[773] = 17'h00000;
    storage[774] = 17'h00000;
    storage[775] = 17'h00000;
    storage[776] = 17'h00000;
    storage[777] = 17'h00000;
    storage[778] = 17'h00000;
    storage[779] = 17'h00000;
    storage[780] = 17'h00000;
    storage[781] = 17'h00000;
    storage[782] = 17'h00000;
    storage[783] = 17'h00000;
    storage[784] = 17'h00000;
    storage[785] = 17'h00000;
    storage[786] = 17'h00000;
    storage[787] = 17'h00000;
    storage[788] = 17'h00000;
    storage[789] = 17'h00000;
    storage[790] = 17'h00000;
    storage[791] = 17'h00000;
    storage[792] = 17'h00000;
    storage[793] = 17'h00000;
    storage[794] = 17'h00000;
    storage[795] = 17'h00000;
    storage[796] = 17'h00000;
    storage[797] = 17'h00000;
    storage[798] = 17'h00000;
    storage[799] = 17'h00000;
    storage[800] = 17'h00000;
    storage[801] = 17'h00000;
    storage[802] = 17'h00000;
    storage[803] = 17'h00000;
    storage[804] = 17'h00000;
    storage[805] = 17'h00000;
    storage[806] = 17'h00000;
    storage[807] = 17'h00000;
    storage[808] = 17'h00000;
    storage[809] = 17'h00000;
    storage[810] = 17'h00000;
    storage[811] = 17'h00000;
    storage[812] = 17'h00000;
    storage[813] = 17'h00000;
    storage[814] = 17'h00000;
    storage[815] = 17'h00000;
    storage[816] = 17'h00000;
    storage[817] = 17'h00000;
    storage[818] = 17'h00000;
    storage[819] = 17'h00000;
    storage[820] = 17'h00000;
    storage[821] = 17'h00000;
    storage[822] = 17'h00000;
    storage[823] = 17'h00000;
    storage[824] = 17'h00000;
    storage[825] = 17'h00000;
    storage[826] = 17'h00000;
    storage[827] = 17'h00000;
    storage[828] = 17'h00000;
    storage[829] = 17'h00000;
    storage[830] = 17'h00000;
    storage[831] = 17'h00000;
    storage[832] = 17'h00000;
    storage[833] = 17'h00000;
    storage[834] = 17'h00000;
    storage[835] = 17'h00000;
    storage[836] = 17'h00000;
    storage[837] = 17'h00000;
    storage[838] = 17'h00000;
    storage[839] = 17'h00000;
    storage[840] = 17'h00000;
    storage[841] = 17'h00000;
    storage[842] = 17'h00000;
    storage[843] = 17'h00000;
    storage[844] = 17'h00000;
    storage[845] = 17'h00000;
    storage[846] = 17'h00000;
    storage[847] = 17'h00000;
    storage[848] = 17'h00000;
    storage[849] = 17'h00000;
    storage[850] = 17'h00000;
    storage[851] = 17'h00000;
    storage[852] = 17'h00000;
    storage[853] = 17'h00000;
    storage[854] = 17'h00000;
    storage[855] = 17'h00000;
    storage[856] = 17'h00000;
    storage[857] = 17'h00000;
    storage[858] = 17'h00000;
    storage[859] = 17'h00000;
    storage[860] = 17'h00000;
    storage[861] = 17'h00000;
    storage[862] = 17'h00000;
    storage[863] = 17'h00000;
    storage[864] = 17'h00000;
    storage[865] = 17'h00000;
    storage[866] = 17'h00000;
    storage[867] = 17'h00000;
    storage[868] = 17'h00000;
    storage[869] = 17'h00000;
    storage[870] = 17'h00000;
    storage[871] = 17'h00000;
    storage[872] = 17'h00000;
    storage[873] = 17'h00000;
    storage[874] = 17'h00000;
    storage[875] = 17'h00000;
    storage[876] = 17'h00000;
    storage[877] = 17'h00000;
    storage[878] = 17'h00000;
    storage[879] = 17'h00000;
    storage[880] = 17'h00000;
    storage[881] = 17'h00000;
    storage[882] = 17'h00000;
    storage[883] = 17'h00000;
    storage[884] = 17'h00000;
    storage[885] = 17'h00000;
    storage[886] = 17'h00000;
    storage[887] = 17'h00000;
    storage[888] = 17'h00000;
    storage[889] = 17'h00000;
    storage[890] = 17'h00000;
    storage[891] = 17'h00000;
    storage[892] = 17'h00000;
    storage[893] = 17'h00000;
    storage[894] = 17'h00000;
    storage[895] = 17'h00000;
    storage[896] = 17'h00000;
    storage[897] = 17'h00000;
    storage[898] = 17'h00000;
    storage[899] = 17'h00000;
    storage[900] = 17'h00000;
    storage[901] = 17'h00000;
    storage[902] = 17'h00000;
    storage[903] = 17'h00000;
    storage[904] = 17'h00000;
    storage[905] = 17'h00000;
    storage[906] = 17'h00000;
    storage[907] = 17'h00000;
    storage[908] = 17'h00000;
    storage[909] = 17'h00000;
    storage[910] = 17'h00000;
    storage[911] = 17'h00000;
    storage[912] = 17'h00000;
    storage[913] = 17'h00000;
    storage[914] = 17'h00000;
    storage[915] = 17'h00000;
    storage[916] = 17'h00000;
    storage[917] = 17'h00000;
    storage[918] = 17'h00000;
    storage[919] = 17'h00000;
    storage[920] = 17'h00000;
    storage[921] = 17'h00000;
    storage[922] = 17'h00000;
    storage[923] = 17'h00000;
    storage[924] = 17'h00000;
    storage[925] = 17'h00000;
    storage[926] = 17'h00000;
    storage[927] = 17'h00000;
    storage[928] = 17'h00000;
    storage[929] = 17'h00000;
    storage[930] = 17'h00000;
    storage[931] = 17'h00000;
    storage[932] = 17'h00000;
    storage[933] = 17'h00000;
    storage[934] = 17'h00000;
    storage[935] = 17'h00000;
    storage[936] = 17'h00000;
    storage[937] = 17'h00000;
    storage[938] = 17'h00000;
    storage[939] = 17'h00000;
    storage[940] = 17'h00000;
    storage[941] = 17'h00000;
    storage[942] = 17'h00000;
    storage[943] = 17'h00000;
    storage[944] = 17'h00000;
    storage[945] = 17'h00000;
    storage[946] = 17'h00000;
    storage[947] = 17'h00000;
    storage[948] = 17'h00000;
    storage[949] = 17'h00000;
    storage[950] = 17'h00000;
    storage[951] = 17'h00000;
    storage[952] = 17'h00000;
    storage[953] = 17'h00000;
    storage[954] = 17'h00000;
    storage[955] = 17'h00000;
    storage[956] = 17'h00000;
    storage[957] = 17'h00000;
    storage[958] = 17'h00000;
    storage[959] = 17'h00000;
    storage[960] = 17'h00000;
    storage[961] = 17'h00000;
    storage[962] = 17'h00000;
    storage[963] = 17'h00000;
    storage[964] = 17'h00000;
    storage[965] = 17'h00000;
    storage[966] = 17'h00000;
    storage[967] = 17'h00000;
    storage[968] = 17'h00000;
    storage[969] = 17'h00000;
    storage[970] = 17'h00000;
    storage[971] = 17'h00000;
    storage[972] = 17'h00000;
    storage[973] = 17'h00000;
    storage[974] = 17'h00000;
    storage[975] = 17'h00000;
    storage[976] = 17'h00000;
    storage[977] = 17'h00000;
    storage[978] = 17'h00000;
    storage[979] = 17'h00000;
    storage[980] = 17'h00000;
    storage[981] = 17'h00000;
    storage[982] = 17'h00000;
    storage[983] = 17'h00000;
    storage[984] = 17'h00000;
    storage[985] = 17'h00000;
    storage[986] = 17'h00000;
    storage[987] = 17'h00000;
    storage[988] = 17'h00000;
    storage[989] = 17'h00000;
    storage[990] = 17'h00000;
    storage[991] = 17'h00000;
    storage[992] = 17'h00000;
    storage[993] = 17'h00000;
    storage[994] = 17'h00000;
    storage[995] = 17'h00000;
    storage[996] = 17'h00000;
    storage[997] = 17'h00000;
    storage[998] = 17'h00000;
    storage[999] = 17'h00000;
    storage[1000] = 17'h00000;
    storage[1001] = 17'h00000;
    storage[1002] = 17'h00000;
    storage[1003] = 17'h00000;
    storage[1004] = 17'h00000;
    storage[1005] = 17'h00000;
    storage[1006] = 17'h00000;
    storage[1007] = 17'h00000;
    storage[1008] = 17'h00000;
    storage[1009] = 17'h00000;
    storage[1010] = 17'h00000;
    storage[1011] = 17'h00000;
    storage[1012] = 17'h00000;
    storage[1013] = 17'h00000;
    storage[1014] = 17'h00000;
    storage[1015] = 17'h00000;
    storage[1016] = 17'h00000;
    storage[1017] = 17'h00000;
    storage[1018] = 17'h00000;
    storage[1019] = 17'h00000;
    storage[1020] = 17'h00000;
    storage[1021] = 17'h00000;
    storage[1022] = 17'h00000;
  end
  reg [16:0] _0_;
  always @(posedge clk) begin
    if (\$next\rdport_storage_r_en ) _0_ <= storage[\$next\rdport_storage_r_addr ];
    if (\$next\wrport_storage_w_en ) storage[\$next\wrport_storage_w_addr ] <= \$next\wrport_storage_w_data ;
  end
  assign rdport_storage_r_data = _0_;
  always @* begin
    \$next\writable  = 1'h0;
    \$next\writable  = \$2 ;
  end
  always @* begin
    \$next\readable  = 1'h0;
    \$next\readable  = \$4 ;
  end
  always @* begin
    \$next\level  = level;
    casez (\$49 )
      1'h1:
          \$next\level  = \$51 [9:0];
    endcase
    casez (\$64 )
      1'h1:
          \$next\level  = \$66 [9:0];
    endcase
    casez (rst)
      1'h1:
          \$next\level  = 10'h000;
    endcase
  end
  always @* begin
    \$next\wrport_storage_w_addr  = 10'h000;
    \$next\wrport_storage_w_addr  = produce;
    casez (replace)
      1'h1:
          \$next\wrport_storage_w_addr  = \$6 [9:0];
    endcase
  end
  always @* begin
    \$next\wrport_storage_w_data  = 17'h00000;
    \$next\wrport_storage_w_data  = din;
  end
  always @* begin
    \$next\wrport_storage_w_en  = 1'h0;
    \$next\wrport_storage_w_en  = \$15 ;
  end
  always @* begin
    \$next\produce  = produce;
    casez (\$21 )
      1'h1:
          \$next\produce  = \$23 [9:0];
    endcase
    casez (rst)
      1'h1:
          \$next\produce  = 10'h000;
    endcase
  end
  always @* begin
    \$next\rdport_storage_r_addr  = 10'h000;
    \$next\rdport_storage_r_addr  = consume;
  end
  always @* begin
    \$next\dout  = 17'h00000;
    \$next\dout  = rdport_storage_r_data;
  end
  always @* begin
    \$next\rdport_storage_r_en  = 1'h0;
    \$next\rdport_storage_r_en  = re;
  end
  always @* begin
    \$next\consume  = consume;
    casez (\$30 )
      1'h1:
          \$next\consume  = \$32 [9:0];
    endcase
    casez (rst)
      1'h1:
          \$next\consume  = 10'h000;
    endcase
  end
  assign \$6  = \$9 ;
  assign \$23  = \$26 ;
  assign \$32  = \$35 ;
  assign \$51  = \$52 ;
  assign \$66  = \$67 ;
  assign rdport_storage_r_en = \$next\rdport_storage_r_en ;
  assign dout = \$next\dout ;
  assign rdport_storage_r_addr = \$next\rdport_storage_r_addr ;
  assign wrport_storage_w_en = \$next\wrport_storage_w_en ;
  assign wrport_storage_w_data = \$next\wrport_storage_w_data ;
  assign wrport_storage_w_addr = \$next\wrport_storage_w_addr ;
  assign readable = \$next\readable ;
  assign writable = \$next\writable ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.vbits_to_cbits" *)
(* generator = "nMigen" *)
module vbits_to_cbits(enc_in_ctr, in_end, valid_in, busy_in, rst, clk, latch_input, data_out, valid_out, end_out, enc_in);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:233" *)
  reg [15:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:235" *)
  reg \$next\end_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:119" *)
  reg \$next\input_handler_dec_buff ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:107" *)
  reg [11:0] \$next\input_handler_enc_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:108" *)
  reg [3:0] \$next\input_handler_enc_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:109" *)
  reg \$next\input_handler_in_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:110" *)
  reg \$next\input_handler_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:227" *)
  reg \$next\latch_input ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:24" *)
  reg [5:0] \$next\output_handler_buff_consum ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:23" *)
  reg [41:0] \$next\output_handler_buffer ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:20" *)
  reg \$next\output_handler_busy_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:31" *)
  reg \$next\output_handler_end_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:25" *)
  reg [5:0] \$next\output_handler_new_buff_consum ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:26" *)
  reg \$next\output_handler_new_buff_consum_actv ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:234" *)
  reg \$next\valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:236" *)
  input busy_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:233" *)
  output [15:0] data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:228" *)
  input [11:0] enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:229" *)
  input [3:0] enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:235" *)
  output end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:230" *)
  input in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:114" *)
  wire [5:0] input_handler_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:113" *)
  wire [41:0] input_handler_buffer;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:119" *)
  wire input_handler_dec_buff;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:107" *)
  wire [11:0] input_handler_enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:108" *)
  wire [3:0] input_handler_enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:122" *)
  wire input_handler_end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:109" *)
  wire input_handler_in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:106" *)
  wire input_handler_latch_input;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:115" *)
  wire [5:0] input_handler_new_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:116" *)
  wire input_handler_new_buff_consum_actv;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:110" *)
  wire input_handler_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:227" *)
  output latch_input;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:24" *)
  wire [5:0] output_handler_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:23" *)
  wire [41:0] output_handler_buffer;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:20" *)
  wire output_handler_busy_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:17" *)
  wire [15:0] output_handler_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:28" *)
  wire output_handler_dec_buff_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:31" *)
  wire output_handler_end_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:19" *)
  wire output_handler_end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:25" *)
  wire [5:0] output_handler_new_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:26" *)
  wire output_handler_new_buff_consum_actv;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:18" *)
  wire output_handler_valid_out;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:231" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:234" *)
  output valid_out;
  input_handler input_handler (
    .buff_consum(input_handler_buff_consum),
    .buffer(input_handler_buffer),
    .clk(clk),
    .dec_buff(input_handler_dec_buff),
    .enc_in(input_handler_enc_in),
    .enc_in_ctr(input_handler_enc_in_ctr),
    .end_out(input_handler_end_out),
    .in_end(input_handler_in_end),
    .latch_input(input_handler_latch_input),
    .new_buff_consum(input_handler_new_buff_consum),
    .new_buff_consum_actv(input_handler_new_buff_consum_actv),
    .rst(rst),
    .valid_in(input_handler_valid_in)
  );
  output_handler output_handler (
    .buff_consum(output_handler_buff_consum),
    .buffer(output_handler_buffer),
    .busy_in(output_handler_busy_in),
    .clk(clk),
    .data_out(output_handler_data_out),
    .dec_buff_out(output_handler_dec_buff_out),
    .end_in(output_handler_end_in),
    .end_out(output_handler_end_out),
    .new_buff_consum(output_handler_new_buff_consum),
    .new_buff_consum_actv(output_handler_new_buff_consum_actv),
    .rst(rst),
    .valid_out(output_handler_valid_out)
  );
  always @* begin
    \$next\latch_input  = 1'h0;
    \$next\latch_input  = input_handler_latch_input;
  end
  always @* begin
    \$next\input_handler_enc_in  = 12'h000;
    \$next\input_handler_enc_in  = enc_in;
  end
  always @* begin
    \$next\output_handler_new_buff_consum_actv  = 1'h0;
    \$next\output_handler_new_buff_consum_actv  = input_handler_new_buff_consum_actv;
  end
  always @* begin
    \$next\data_out  = 16'h0000;
    \$next\data_out  = output_handler_data_out;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = output_handler_valid_out;
  end
  always @* begin
    \$next\end_out  = 1'h0;
    \$next\end_out  = output_handler_end_out;
  end
  always @* begin
    \$next\output_handler_busy_in  = 1'h0;
    \$next\output_handler_busy_in  = busy_in;
  end
  always @* begin
    \$next\input_handler_enc_in_ctr  = 4'h0;
    \$next\input_handler_enc_in_ctr  = enc_in_ctr;
  end
  always @* begin
    \$next\input_handler_in_end  = 1'h0;
    \$next\input_handler_in_end  = in_end;
  end
  always @* begin
    \$next\input_handler_valid_in  = 1'h0;
    \$next\input_handler_valid_in  = valid_in;
  end
  always @* begin
    \$next\input_handler_dec_buff  = 1'h0;
    \$next\input_handler_dec_buff  = output_handler_dec_buff_out;
  end
  always @* begin
    \$next\output_handler_buffer  = 42'h00000000000;
    \$next\output_handler_buffer  = input_handler_buffer;
  end
  always @* begin
    \$next\output_handler_buff_consum  = 6'h00;
    \$next\output_handler_buff_consum  = input_handler_buff_consum;
  end
  always @* begin
    \$next\output_handler_end_in  = 1'h0;
    \$next\output_handler_end_in  = input_handler_end_out;
  end
  always @* begin
    \$next\output_handler_new_buff_consum  = 6'h00;
    \$next\output_handler_new_buff_consum  = input_handler_new_buff_consum;
  end
  assign output_handler_busy_in = \$next\output_handler_busy_in ;
  assign end_out = \$next\end_out ;
  assign valid_out = \$next\valid_out ;
  assign data_out = \$next\data_out ;
  assign output_handler_new_buff_consum_actv = \$next\output_handler_new_buff_consum_actv ;
  assign output_handler_new_buff_consum = \$next\output_handler_new_buff_consum ;
  assign output_handler_end_in = \$next\output_handler_end_in ;
  assign output_handler_buff_consum = \$next\output_handler_buff_consum ;
  assign output_handler_buffer = \$next\output_handler_buffer ;
  assign input_handler_dec_buff = \$next\input_handler_dec_buff ;
  assign input_handler_valid_in = \$next\input_handler_valid_in ;
  assign input_handler_in_end = \$next\input_handler_in_end ;
  assign input_handler_enc_in_ctr = \$next\input_handler_enc_in_ctr ;
  assign input_handler_enc_in = \$next\input_handler_enc_in ;
  assign latch_input = \$next\latch_input ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.vbits_to_cbits_reg" *)
(* generator = "nMigen" *)
module vbits_to_cbits_reg(data_left, valid_left, end_left, o_busy, data_right, valid_right, end_right, i_busy);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:26" *)
  reg [15:0] \$next\data_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:28" *)
  reg \$next\end_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:19" *)
  reg \$next\o_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:27" *)
  reg \$next\valid_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:20" *)
  input [15:0] data_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:26" *)
  output [15:0] data_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:22" *)
  input end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:28" *)
  output end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:25" *)
  input i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:19" *)
  output o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:21" *)
  input valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:27" *)
  output valid_right;
  always @* begin
    \$next\o_busy  = 1'h0;
    \$next\o_busy  = i_busy;
  end
  always @* begin
    \$next\data_right  = 16'h0000;
    \$next\data_right  = data_left;
  end
  always @* begin
    \$next\valid_right  = 1'h0;
    \$next\valid_right  = valid_left;
  end
  always @* begin
    \$next\end_right  = 1'h0;
    \$next\end_right  = end_left;
  end
  assign end_right = \$next\end_right ;
  assign valid_right = \$next\valid_right ;
  assign data_right = \$next\data_right ;
  assign o_busy = \$next\o_busy ;
endmodule

