/* Generated by Yosys 0.8+     369 (git sha1 ea0e0722, clang 10.0.1 -fPIC -Os) */

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(valid_in, end_in, force_end_in, data_in, rst, clk, valid_out, o_busy, data_out, end_out, i_busy);
  wire \$1 ;
  wire \$11 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$3 ;
  wire \$31 ;
  wire \$33 ;
  wire [4:0] \$35 ;
  wire [4:0] \$36 ;
  wire \$38 ;
  wire \$40 ;
  wire [4:0] \$42 ;
  wire [4:0] \$43 ;
  wire \$45 ;
  wire [4:0] \$47 ;
  wire [4:0] \$48 ;
  wire \$5 ;
  wire \$50 ;
  wire \$52 ;
  wire \$54 ;
  wire \$56 ;
  wire \$58 ;
  wire \$60 ;
  wire \$62 ;
  wire \$64 ;
  wire \$66 ;
  wire \$68 ;
  wire \$7 ;
  wire \$70 ;
  wire \$72 ;
  wire \$74 ;
  wire \$76 ;
  wire \$78 ;
  wire \$80 ;
  wire \$82 ;
  wire \$84 ;
  wire \$9 ;
  (* src = "./migen_src/markers.py:61" *)
  reg [3:0] \$next\counter ;
  (* src = "./migen_src/markers.py:38" *)
  reg [15:0] \$next\data_out ;
  (* src = "./migen_src/markers.py:46" *)
  reg \$next\end_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [2:0] \$next\fsm_state ;
  (* src = "./migen_src/markers.py:70" *)
  reg \$next\late_busy_i ;
  (* src = "./migen_src/markers.py:72" *)
  reg \$next\late_end_i ;
  (* src = "./migen_src/markers.py:71" *)
  reg \$next\late_valid_i ;
  (* src = "./migen_src/markers.py:48" *)
  reg \$next\o_busy ;
  (* src = "./migen_src/markers.py:42" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input clk;
  (* init = 4'h0 *)
  (* src = "./migen_src/markers.py:61" *)
  reg [3:0] counter = 4'h0;
  (* src = "./migen_src/markers.py:35" *)
  input [15:0] data_in;
  (* src = "./migen_src/markers.py:38" *)
  output [15:0] data_out;
  (* src = "./migen_src/markers.py:44" *)
  input end_in;
  (* src = "./migen_src/markers.py:46" *)
  output end_out;
  (* src = "./migen_src/markers.py:45" *)
  input force_end_in;
  (* init = 3'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "./migen_src/markers.py:49" *)
  input i_busy;
  (* init = 1'h0 *)
  (* src = "./migen_src/markers.py:70" *)
  reg late_busy_i = 1'h0;
  (* init = 1'h0 *)
  (* src = "./migen_src/markers.py:72" *)
  reg late_end_i = 1'h0;
  (* init = 1'h0 *)
  (* src = "./migen_src/markers.py:71" *)
  reg late_valid_i = 1'h0;
  (* src = "./migen_src/markers.py:48" *)
  output o_busy;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "./migen_src/markers.py:41" *)
  input valid_in;
  (* src = "./migen_src/markers.py:42" *)
  output valid_out;
  assign \$9  = \$5  & (* src = "./migen_src/markers.py:134" *) \$7 ;
  assign \$11  = i_busy == (* src = "./migen_src/markers.py:93" *) 1'h0;
  assign \$13  = counter == (* src = "./migen_src/markers.py:96" *) 1'h0;
  assign \$15  = late_busy_i == (* src = "./migen_src/markers.py:134" *) 1'h0;
  assign \$17  = late_valid_i == (* src = "./migen_src/markers.py:134" *) 1'h1;
  assign \$1  = late_busy_i == (* src = "./migen_src/markers.py:134" *) 1'h0;
  assign \$19  = \$15  & (* src = "./migen_src/markers.py:134" *) \$17 ;
  assign \$21  = late_end_i == (* src = "./migen_src/markers.py:134" *) 1'h1;
  assign \$23  = \$19  & (* src = "./migen_src/markers.py:134" *) \$21 ;
  assign \$25  = i_busy == (* src = "./migen_src/markers.py:111" *) 1'h0;
  assign \$27  = counter == (* src = "./migen_src/markers.py:114" *) 1'h1;
  assign \$29  = i_busy == (* src = "./migen_src/markers.py:125" *) 1'h0;
  assign \$31  = counter == (* src = "./migen_src/markers.py:128" *) 1'h1;
  assign \$33  = i_busy == (* src = "./migen_src/markers.py:93" *) 1'h0;
  assign \$36  = counter - (* src = "./migen_src/markers.py:94" *) 1'h1;
  assign \$38  = counter == (* src = "./migen_src/markers.py:96" *) 1'h0;
  assign \$3  = late_valid_i == (* src = "./migen_src/markers.py:134" *) 1'h1;
  assign \$40  = i_busy == (* src = "./migen_src/markers.py:111" *) 1'h0;
  assign \$43  = counter - (* src = "./migen_src/markers.py:112" *) 1'h1;
  assign \$45  = i_busy == (* src = "./migen_src/markers.py:125" *) 1'h0;
  assign \$48  = counter - (* src = "./migen_src/markers.py:126" *) 1'h1;
  assign \$50  = i_busy == (* src = "./migen_src/markers.py:93" *) 1'h0;
  assign \$52  = counter == (* src = "./migen_src/markers.py:96" *) 1'h0;
  assign \$54  = i_busy == (* src = "./migen_src/markers.py:111" *) 1'h0;
  assign \$56  = counter == (* src = "./migen_src/markers.py:114" *) 1'h1;
  assign \$58  = i_busy == (* src = "./migen_src/markers.py:125" *) 1'h0;
  assign \$5  = \$1  & (* src = "./migen_src/markers.py:134" *) \$3 ;
  assign \$60  = counter == (* src = "./migen_src/markers.py:128" *) 1'h1;
  assign \$62  = late_busy_i == (* src = "./migen_src/markers.py:134" *) 1'h0;
  assign \$64  = late_valid_i == (* src = "./migen_src/markers.py:134" *) 1'h1;
  assign \$66  = \$62  & (* src = "./migen_src/markers.py:134" *) \$64 ;
  assign \$68  = late_end_i == (* src = "./migen_src/markers.py:134" *) 1'h1;
  assign \$70  = \$66  & (* src = "./migen_src/markers.py:134" *) \$68 ;
  assign \$72  = i_busy == (* src = "./migen_src/markers.py:93" *) 1'h0;
  assign \$74  = counter == (* src = "./migen_src/markers.py:96" *) 1'h0;
  assign \$76  = late_busy_i == (* src = "./migen_src/markers.py:134" *) 1'h0;
  assign \$78  = late_valid_i == (* src = "./migen_src/markers.py:134" *) 1'h1;
  assign \$7  = late_end_i == (* src = "./migen_src/markers.py:134" *) 1'h1;
  assign \$80  = \$76  & (* src = "./migen_src/markers.py:134" *) \$78 ;
  assign \$82  = late_end_i == (* src = "./migen_src/markers.py:134" *) 1'h1;
  assign \$84  = \$80  & (* src = "./migen_src/markers.py:134" *) \$82 ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      counter <= \$next\counter ;
  always @(posedge clk)
      late_end_i <= \$next\late_end_i ;
  always @(posedge clk)
      late_valid_i <= \$next\late_valid_i ;
  always @(posedge clk)
      late_busy_i <= \$next\late_busy_i ;
  always @* begin
    \$next\o_busy  = 1'h0;
    \$next\o_busy  = 1'h1;
    casez (fsm_state)
      3'h2:
          casez ({ force_end_in, \$9  })
            2'bz1:
                /* empty */;
            2'b1z:
                /* empty */;
            2'hz:
                \$next\o_busy  = i_busy;
          endcase
    endcase
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = 1'h0;
    casez (fsm_state)
      3'h1:
        begin
          \$next\valid_out  = 1'h1;
          casez (\$11 )
            1'h1:
                casez (\$13 )
                  1'h1:
                      \$next\valid_out  = 1'h0;
                endcase
          endcase
        end
      3'h3:
          \$next\valid_out  = 1'h1;
      3'h5:
          \$next\valid_out  = 1'h1;
      3'h2:
          casez ({ force_end_in, \$23  })
            2'bz1:
                /* empty */;
            2'b1z:
                /* empty */;
            2'hz:
                \$next\valid_out  = valid_in;
          endcase
      3'h4:
          \$next\valid_out  = 1'h1;
    endcase
  end
  always @* begin
    \$next\end_out  = 1'h0;
    \$next\end_out  = 1'h0;
    casez (fsm_state)
      3'h3:
          casez (\$25 )
            1'h1:
                casez (\$27 )
                  1'h1:
                      \$next\end_out  = 1'h1;
                endcase
          endcase
      3'h5:
          casez (\$29 )
            1'h1:
                casez (\$31 )
                  1'h1:
                      \$next\end_out  = 1'h1;
                endcase
          endcase
      3'h4:
          \$next\end_out  = 1'h1;
    endcase
  end
  always @* begin
    \$next\late_busy_i  = late_busy_i;
    \$next\late_busy_i  = i_busy;
    casez (rst)
      1'h1:
          \$next\late_busy_i  = 1'h0;
    endcase
  end
  always @* begin
    \$next\late_valid_i  = late_valid_i;
    \$next\late_valid_i  = valid_in;
    casez (rst)
      1'h1:
          \$next\late_valid_i  = 1'h0;
    endcase
  end
  always @* begin
    \$next\late_end_i  = late_end_i;
    \$next\late_end_i  = end_in;
    casez (rst)
      1'h1:
          \$next\late_end_i  = 1'h0;
    endcase
  end
  always @* begin
    \$next\counter  = counter;
    casez (fsm_state)
      3'h0:
          \$next\counter  = 4'h8;
      3'h1:
          casez (\$33 )
            1'h1:
              begin
                \$next\counter  = \$35 [3:0];
                casez (\$38 )
                  1'h1:
                      \$next\counter  = 4'h8;
                endcase
              end
          endcase
      3'h3:
          casez (\$40 )
            1'h1:
                \$next\counter  = \$42 [3:0];
          endcase
      3'h5:
          casez (\$45 )
            1'h1:
                \$next\counter  = \$47 [3:0];
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\counter  = 4'h0;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      3'h0:
          casez (valid_in)
            1'h1:
                \$next\fsm_state  = 3'h1;
          endcase
      3'h1:
          casez (\$50 )
            1'h1:
                casez (\$52 )
                  1'h1:
                      \$next\fsm_state  = 3'h2;
                endcase
          endcase
      3'h3:
          casez (\$54 )
            1'h1:
                casez (\$56 )
                  1'h1:
                      \$next\fsm_state  = 3'h4;
                endcase
          endcase
      3'h5:
          casez (\$58 )
            1'h1:
                casez (\$60 )
                  1'h1:
                      \$next\fsm_state  = 3'h4;
                endcase
          endcase
      3'h2:
          casez ({ force_end_in, \$70  })
            2'bz1:
                \$next\fsm_state  = 3'h3;
            2'b1z:
                \$next\fsm_state  = 3'h5;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 3'h0;
    endcase
  end
  always @* begin
    \$next\data_out  = 16'h0000;
    casez (fsm_state)
      3'h1:
        begin
          \$next\data_out  = 16'hffff;
          casez (\$72 )
            1'h1:
                casez (\$74 )
                  1'h1:
                      \$next\data_out  = 16'h0000;
                endcase
          endcase
        end
      3'h3:
          \$next\data_out  = 16'hffff;
      3'h5:
          \$next\data_out  = 16'hffee;
      3'h2:
          casez ({ force_end_in, \$84  })
            2'bz1:
                /* empty */;
            2'b1z:
                /* empty */;
            2'hz:
                \$next\data_out  = data_in;
          endcase
      3'h4:
          \$next\data_out  = 16'hffff;
    endcase
  end
  assign \$35  = \$36 ;
  assign \$42  = \$43 ;
  assign \$47  = \$48 ;
  assign data_out = \$next\data_out ;
  assign end_out = \$next\end_out ;
  assign valid_out = \$next\valid_out ;
  assign o_busy = \$next\o_busy ;
endmodule

