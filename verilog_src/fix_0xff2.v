/* Generated by Yosys 0.8+     369 (git sha1 ea0e0722, clang 10.0.1 -fPIC -Os) */

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(valid_in, data_in_ctr, data_in, rst, clk, valid_out, o_busy, data_out, i_busy);
  wire \$1 ;
  wire \$101 ;
  wire \$103 ;
  wire \$105 ;
  wire \$107 ;
  wire \$109 ;
  wire \$11 ;
  wire \$111 ;
  wire \$113 ;
  wire \$115 ;
  wire \$117 ;
  wire \$119 ;
  wire \$121 ;
  wire \$123 ;
  wire \$125 ;
  wire \$127 ;
  wire \$129 ;
  wire \$13 ;
  wire \$131 ;
  wire \$133 ;
  wire \$135 ;
  wire \$137 ;
  wire \$139 ;
  wire \$141 ;
  wire \$143 ;
  wire \$145 ;
  wire \$147 ;
  wire \$149 ;
  wire \$15 ;
  wire \$151 ;
  wire \$153 ;
  wire \$155 ;
  wire \$157 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$3 ;
  wire \$31 ;
  wire \$33 ;
  wire \$35 ;
  wire \$37 ;
  wire \$39 ;
  wire \$41 ;
  wire \$43 ;
  wire [23:0] \$45 ;
  wire [23:0] \$47 ;
  wire [23:0] \$49 ;
  wire \$5 ;
  wire [23:0] \$51 ;
  wire [23:0] \$53 ;
  wire [23:0] \$55 ;
  wire [23:0] \$57 ;
  wire [23:0] \$59 ;
  wire \$61 ;
  wire [23:0] \$63 ;
  wire [23:0] \$65 ;
  wire [23:0] \$67 ;
  wire [23:0] \$69 ;
  wire \$7 ;
  wire \$71 ;
  wire \$73 ;
  wire [23:0] \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$81 ;
  wire \$83 ;
  wire \$85 ;
  wire \$87 ;
  wire \$89 ;
  wire \$9 ;
  wire \$91 ;
  wire \$93 ;
  wire \$95 ;
  wire \$97 ;
  wire \$99 ;
  (* src = "./migen_src/fix_0xff2.py:110" *)
  reg [1:0] \$next\buffer_count ;
  (* src = "./migen_src/fix_0xff2.py:109" *)
  reg [23:0] \$next\buffer_data ;
  (* src = "./migen_src/fix_0xff2.py:94" *)
  reg [15:0] \$next\data_out ;
  (* src = "./migen_src/fix_0xff2.py:112" *)
  reg [15:0] \$next\data_out_reg ;
  (* src = "./migen_src/fix_0xff2.py:113" *)
  reg \$next\data_out_valid ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg \$next\fsm_state ;
  (* src = "./migen_src/fix_0xff2.py:99" *)
  reg \$next\o_busy ;
  (* src = "./migen_src/fix_0xff2.py:98" *)
  reg \$next\valid_out ;
  (* init = 2'h0 *)
  (* src = "./migen_src/fix_0xff2.py:110" *)
  reg [1:0] buffer_count = 2'h0;
  (* init = 24'h000000 *)
  (* src = "./migen_src/fix_0xff2.py:109" *)
  reg [23:0] buffer_data = 24'h000000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input clk;
  (* src = "./migen_src/fix_0xff2.py:90" *)
  input [31:0] data_in;
  (* src = "./migen_src/fix_0xff2.py:91" *)
  input [2:0] data_in_ctr;
  (* init = 16'h0000 *)
  (* src = "./migen_src/fix_0xff2.py:94" *)
  output [15:0] data_out;
  reg [15:0] data_out = 16'h0000;
  (* init = 16'h0000 *)
  (* src = "./migen_src/fix_0xff2.py:112" *)
  reg [15:0] data_out_reg = 16'h0000;
  (* init = 1'h0 *)
  (* src = "./migen_src/fix_0xff2.py:113" *)
  reg data_out_valid = 1'h0;
  (* init = 1'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg fsm_state = 1'h0;
  (* src = "./migen_src/fix_0xff2.py:100" *)
  input i_busy;
  (* init = 1'h0 *)
  (* src = "./migen_src/fix_0xff2.py:99" *)
  output o_busy;
  reg o_busy = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "./migen_src/fix_0xff2.py:97" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "./migen_src/fix_0xff2.py:98" *)
  output valid_out;
  reg valid_out = 1'h0;
  assign \$9  = \$5  & (* src = "./migen_src/fix_0xff2.py:140" *) \$7 ;
  assign \$99  = valid_in == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$101  = o_busy == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$103  = \$99  & (* src = "./migen_src/fix_0xff2.py:140" *) \$101 ;
  assign \$105  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$107  = valid_in == (* src = "./migen_src/fix_0xff2.py:143" *) 1'h1;
  assign \$109  = valid_out == (* src = "./migen_src/fix_0xff2.py:143" *) 1'h1;
  assign \$111  = \$107  & (* src = "./migen_src/fix_0xff2.py:143" *) \$109 ;
  assign \$113  = o_busy == (* src = "./migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$115  = i_busy == (* src = "./migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$117  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$11  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$119  = i_busy == (* src = "./migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$121  = valid_out == (* src = "./migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$123  = valid_in == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$125  = o_busy == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$127  = \$123  & (* src = "./migen_src/fix_0xff2.py:140" *) \$125 ;
  assign \$129  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$131  = o_busy == (* src = "./migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$133  = i_busy == (* src = "./migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$135  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$137  = i_busy == (* src = "./migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$13  = i_busy == (* src = "./migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$139  = valid_out == (* src = "./migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$141  = valid_in == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$143  = o_busy == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$145  = \$141  & (* src = "./migen_src/fix_0xff2.py:140" *) \$143 ;
  assign \$147  = valid_in == (* src = "./migen_src/fix_0xff2.py:142" *) 1'h1;
  assign \$149  = valid_out == (* src = "./migen_src/fix_0xff2.py:142" *) 1'h1;
  assign \$151  = \$147  & (* src = "./migen_src/fix_0xff2.py:142" *) \$149 ;
  assign \$153  = i_busy == (* src = "./migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$155  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$157  = o_busy == (* src = "./migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$15  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$17  = i_busy == (* src = "./migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$1  = i_busy == (* src = "./migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$19  = valid_out == (* src = "./migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$21  = valid_in == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$23  = o_busy == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$25  = \$21  & (* src = "./migen_src/fix_0xff2.py:140" *) \$23 ;
  assign \$27  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$29  = i_busy == (* src = "./migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$31  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$33  = i_busy == (* src = "./migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$35  = valid_out == (* src = "./migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$37  = valid_in == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$3  = valid_out == (* src = "./migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$39  = o_busy == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$41  = \$37  & (* src = "./migen_src/fix_0xff2.py:140" *) \$39 ;
  assign \$43  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$45  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$47  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$49  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$51  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$53  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$55  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$57  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$5  = valid_in == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$59  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$61  = o_busy == (* src = "./migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$63  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$65  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$67  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$69  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$71  = i_busy == (* src = "./migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$73  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$75  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) buffer_data[7:0];
  assign \$77  = i_busy == (* src = "./migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$7  = o_busy == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$79  = valid_out == (* src = "./migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$81  = valid_in == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$83  = o_busy == (* src = "./migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$85  = \$81  & (* src = "./migen_src/fix_0xff2.py:140" *) \$83 ;
  assign \$87  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$89  = o_busy == (* src = "./migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$91  = i_busy == (* src = "./migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$93  = data_out_valid == (* src = "./migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$95  = i_busy == (* src = "./migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$97  = valid_out == (* src = "./migen_src/fix_0xff2.py:131" *) 1'h0;
  always @(posedge clk)
      data_out_reg <= \$next\data_out_reg ;
  always @(posedge clk)
      data_out_valid <= \$next\data_out_valid ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      o_busy <= \$next\o_busy ;
  always @(posedge clk)
      buffer_count <= \$next\buffer_count ;
  always @(posedge clk)
      buffer_data <= \$next\buffer_data ;
  always @(posedge clk)
      data_out <= \$next\data_out ;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @* begin
    \$next\valid_out  = valid_out;
    casez (fsm_state)
      1'h0:
          casez ({ \$9 , \$3 , \$1  })
            3'bzz1:
                casez (\$11 )
                  1'h1:
                      \$next\valid_out  = valid_in;
                  1'hz:
                      \$next\valid_out  = 1'h1;
                endcase
            3'bz1z:
                \$next\valid_out  = valid_in;
          endcase
      1'h1:
          casez (\$13 )
            1'h1:
                casez (\$15 )
                  1'h1:
                      \$next\valid_out  = 1'h1;
                  1'hz:
                      \$next\valid_out  = 1'h1;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out  = data_out;
    casez (fsm_state)
      1'h0:
          casez ({ \$25 , \$19 , \$17  })
            3'bzz1:
                casez (\$27 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\data_out  = data_in[15:0];
                                    3'h3:
                                        \$next\data_out  = data_in[23:8];
                                    3'h4:
                                        \$next\data_out  = data_in[31:16];
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\data_out  = { buffer_data[7:0], data_in[15:8] };
                                    3'h3:
                                        \$next\data_out  = { buffer_data[7:0], data_in[23:16] };
                                    3'h4:
                                        \$next\data_out  = { buffer_data[7:0], data_in[31:24] };
                                  endcase
                            endcase
                      endcase
                  1'hz:
                      \$next\data_out  = data_out_reg;
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out  = data_in[15:0];
                              3'h3:
                                  \$next\data_out  = data_in[23:8];
                              3'h4:
                                  \$next\data_out  = data_in[31:16];
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out  = { buffer_data[7:0], data_in[15:8] };
                              3'h3:
                                  \$next\data_out  = { buffer_data[7:0], data_in[23:16] };
                              3'h4:
                                  \$next\data_out  = { buffer_data[7:0], data_in[31:24] };
                            endcase
                      endcase
                endcase
          endcase
      1'h1:
          casez (\$29 )
            1'h1:
                casez (\$31 )
                  1'h1:
                      casez (buffer_count)
                        2'h2:
                            \$next\data_out  = buffer_data[15:0];
                        2'h3:
                            \$next\data_out  = buffer_data[23:8];
                      endcase
                  1'hz:
                      \$next\data_out  = data_out_reg;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\buffer_data  = buffer_data;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$41 , \$35 , \$33  })
            3'bzz1:
                casez (\$43 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\buffer_data  = \$45 ;
                                    3'h4:
                                        \$next\buffer_data  = \$47 ;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\buffer_data  = \$49 ;
                                    3'h3:
                                        \$next\buffer_data  = \$51 ;
                                    3'h4:
                                        \$next\buffer_data  = data_in[23:0];
                                  endcase
                            endcase
                      endcase
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_data  = \$53 ;
                              3'h4:
                                  \$next\buffer_data  = \$55 ;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_data  = \$57 ;
                              3'h3:
                                  \$next\buffer_data  = \$59 ;
                              3'h4:
                                  \$next\buffer_data  = data_in[23:0];
                            endcase
                      endcase
                endcase
          endcase
          casez (\$61 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_data  = \$63 ;
                              3'h4:
                                  \$next\buffer_data  = \$65 ;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_data  = \$67 ;
                              3'h3:
                                  \$next\buffer_data  = \$69 ;
                              3'h4:
                                  \$next\buffer_data  = data_in[23:0];
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$71 )
            1'h1:
                casez (\$73 )
                  1'h1:
                      casez (buffer_count)
                        2'h3:
                            \$next\buffer_data  = \$75 ;
                      endcase
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buffer_data  = 24'h000000;
    endcase
  end
  always @* begin
    \$next\buffer_count  = buffer_count;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$85 , \$79 , \$77  })
            3'bzz1:
                casez (\$87 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\buffer_count  = 2'h1;
                                    3'h4:
                                        \$next\buffer_count  = 2'h2;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\buffer_count  = 2'h1;
                                    3'h3:
                                        \$next\buffer_count  = 2'h2;
                                    3'h4:
                                        \$next\buffer_count  = 2'h3;
                                  endcase
                            endcase
                      endcase
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_count  = 2'h1;
                              3'h4:
                                  \$next\buffer_count  = 2'h2;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_count  = 2'h1;
                              3'h3:
                                  \$next\buffer_count  = 2'h2;
                              3'h4:
                                  \$next\buffer_count  = 2'h3;
                            endcase
                      endcase
                endcase
          endcase
          casez (\$89 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_count  = 2'h1;
                              3'h4:
                                  \$next\buffer_count  = 2'h2;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_count  = 2'h1;
                              3'h3:
                                  \$next\buffer_count  = 2'h2;
                              3'h4:
                                  \$next\buffer_count  = 2'h3;
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$91 )
            1'h1:
                casez (\$93 )
                  1'h1:
                      casez (buffer_count)
                        2'h2:
                            \$next\buffer_count  = 2'h0;
                        2'h3:
                            \$next\buffer_count  = 2'h1;
                      endcase
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buffer_count  = 2'h0;
    endcase
  end
  always @* begin
    \$next\o_busy  = o_busy;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$103 , \$97 , \$95  })
            3'bzz1:
              begin
                \$next\o_busy  = 1'h0;
                casez (\$105 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h4:
                                        \$next\o_busy  = 1'h1;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\o_busy  = 1'h1;
                                    3'h4:
                                        \$next\o_busy  = 1'h1;
                                  endcase
                            endcase
                      endcase
                endcase
              end
            3'bz1z:
              begin
                \$next\o_busy  = 1'h0;
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\o_busy  = 1'h1;
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                      endcase
                endcase
              end
            3'b1zz:
                \$next\o_busy  = \$111 ;
          endcase
          casez (\$113 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\o_busy  = 1'h1;
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$115 )
            1'h1:
                casez (\$117 )
                  1'h1:
                      \$next\o_busy  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\o_busy  = 1'h0;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$127 , \$121 , \$119  })
            3'bzz1:
                casez (\$129 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h4:
                                        \$next\fsm_state  = 1'h1;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\fsm_state  = 1'h1;
                                    3'h4:
                                        \$next\fsm_state  = 1'h1;
                                  endcase
                            endcase
                      endcase
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\fsm_state  = 1'h1;
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                      endcase
                endcase
          endcase
          casez (\$131 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\fsm_state  = 1'h1;
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$133 )
            1'h1:
                casez (\$135 )
                  1'h1:
                      \$next\fsm_state  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_valid  = data_out_valid;
    casez (fsm_state)
      1'h0:
          casez ({ \$145 , \$139 , \$137  })
            3'bzz1:
                \$next\data_out_valid  = 1'h0;
            3'bz1z:
                \$next\data_out_valid  = 1'h0;
            3'b1zz:
                \$next\data_out_valid  = \$151 ;
          endcase
      1'h1:
          casez (\$153 )
            1'h1:
                casez (\$155 )
                  1'h1:
                      /* empty */;
                  1'hz:
                      \$next\data_out_valid  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_valid  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_reg  = data_out_reg;
    casez (fsm_state)
      1'h0:
          casez (\$157 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out_reg  = data_in[15:0];
                              3'h3:
                                  \$next\data_out_reg  = data_in[23:8];
                              3'h4:
                                  \$next\data_out_reg  = data_in[31:16];
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out_reg  = { buffer_data[7:0], data_in[15:8] };
                              3'h3:
                                  \$next\data_out_reg  = { buffer_data[7:0], data_in[23:16] };
                              3'h4:
                                  \$next\data_out_reg  = { buffer_data[7:0], data_in[31:24] };
                            endcase
                      endcase
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_reg  = 16'h0000;
    endcase
  end
endmodule

