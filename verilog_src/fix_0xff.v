/* Generated by Yosys 0.8+     369 (git sha1 ea0e0722, clang 10.0.1 -fPIC -Os) */

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(valid_in, data_in, zeros, ones, rst, clk, valid_out, o_busy, data_out, data_out_ctr, i_busy);
  wire \$1 ;
  wire \$101 ;
  wire \$103 ;
  wire \$105 ;
  wire \$107 ;
  wire \$109 ;
  wire \$11 ;
  wire \$111 ;
  wire [31:0] \$113 ;
  wire [31:0] \$115 ;
  wire [31:0] \$117 ;
  wire \$119 ;
  wire \$121 ;
  wire \$123 ;
  wire \$125 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$3 ;
  wire [31:0] \$31 ;
  wire [31:0] \$33 ;
  wire [31:0] \$35 ;
  wire \$37 ;
  wire \$39 ;
  wire \$41 ;
  wire [31:0] \$43 ;
  wire [31:0] \$45 ;
  wire [31:0] \$47 ;
  wire \$49 ;
  wire \$5 ;
  wire \$51 ;
  wire \$53 ;
  wire \$55 ;
  wire \$57 ;
  wire \$59 ;
  wire \$61 ;
  wire \$63 ;
  wire \$65 ;
  wire \$67 ;
  wire \$69 ;
  wire \$7 ;
  wire \$71 ;
  wire \$73 ;
  wire \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$81 ;
  wire \$83 ;
  wire \$85 ;
  wire \$87 ;
  wire \$89 ;
  wire \$9 ;
  wire \$91 ;
  wire \$93 ;
  wire \$95 ;
  wire \$97 ;
  wire \$99 ;
  (* src = "./migen_src/fix_0xff.py:40" *)
  reg [31:0] \$next\data_out ;
  (* src = "./migen_src/fix_0xff.py:41" *)
  reg [2:0] \$next\data_out_ctr ;
  (* src = "./migen_src/fix_0xff.py:60" *)
  reg [2:0] \$next\data_out_ctr_reg ;
  (* src = "./migen_src/fix_0xff.py:59" *)
  reg [31:0] \$next\data_out_reg ;
  (* src = "./migen_src/fix_0xff.py:61" *)
  reg \$next\data_out_valid ;
  (* src = "./migen_src/fix_0xff.py:46" *)
  reg \$next\o_busy ;
  (* src = "./migen_src/fix_0xff.py:45" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input clk;
  (* src = "./migen_src/fix_0xff.py:37" *)
  input [15:0] data_in;
  (* init = 32'd0 *)
  (* src = "./migen_src/fix_0xff.py:40" *)
  output [31:0] data_out;
  reg [31:0] data_out = 32'd0;
  (* init = 3'h0 *)
  (* src = "./migen_src/fix_0xff.py:41" *)
  output [2:0] data_out_ctr;
  reg [2:0] data_out_ctr = 3'h0;
  (* init = 3'h0 *)
  (* src = "./migen_src/fix_0xff.py:60" *)
  reg [2:0] data_out_ctr_reg = 3'h0;
  (* init = 32'd0 *)
  (* src = "./migen_src/fix_0xff.py:59" *)
  reg [31:0] data_out_reg = 32'd0;
  (* init = 1'h0 *)
  (* src = "./migen_src/fix_0xff.py:61" *)
  reg data_out_valid = 1'h0;
  (* src = "./migen_src/fix_0xff.py:47" *)
  input i_busy;
  (* init = 1'h0 *)
  (* src = "./migen_src/fix_0xff.py:46" *)
  output o_busy;
  reg o_busy = 1'h0;
  (* src = "./migen_src/fix_0xff.py:57" *)
  input [7:0] ones;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "./migen_src/fix_0xff.py:44" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "./migen_src/fix_0xff.py:45" *)
  output valid_out;
  reg valid_out = 1'h0;
  (* src = "./migen_src/fix_0xff.py:56" *)
  input [7:0] zeros;
  assign \$9  = \$5  & (* src = "./migen_src/fix_0xff.py:91" *) \$7 ;
  assign \$99  = valid_in == (* src = "./migen_src/fix_0xff.py:93" *) 1'h1;
  assign \$101  = valid_out == (* src = "./migen_src/fix_0xff.py:93" *) 1'h1;
  assign \$103  = \$99  & (* src = "./migen_src/fix_0xff.py:93" *) \$101 ;
  assign \$105  = o_busy == (* src = "./migen_src/fix_0xff.py:97" *) 1'h0;
  assign \$107  = data_in == (* src = "./migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$109  = data_in[7:0] == (* src = "./migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$111  = data_in[15:8] == (* src = "./migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$113  = + (* src = "./migen_src/fix_0xff.py:17" *) { data_in[15:8], ones, zeros };
  assign \$115  = + (* src = "./migen_src/fix_0xff.py:23" *) { ones, zeros, data_in[7:0] };
  assign \$117  = + (* src = "./migen_src/fix_0xff.py:37" *) data_in;
  assign \$11  = data_out_valid == (* src = "./migen_src/fix_0xff.py:68" *) 1'h0;
  assign \$119  = o_busy == (* src = "./migen_src/fix_0xff.py:97" *) 1'h0;
  assign \$121  = data_in == (* src = "./migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$123  = data_in[7:0] == (* src = "./migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$125  = data_in[15:8] == (* src = "./migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$13  = i_busy == (* src = "./migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$15  = valid_out == (* src = "./migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$17  = valid_in == (* src = "./migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$1  = i_busy == (* src = "./migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$19  = o_busy == (* src = "./migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$21  = \$17  & (* src = "./migen_src/fix_0xff.py:91" *) \$19 ;
  assign \$23  = data_out_valid == (* src = "./migen_src/fix_0xff.py:68" *) 1'h0;
  assign \$25  = data_in == (* src = "./migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$27  = data_in[7:0] == (* src = "./migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$29  = data_in[15:8] == (* src = "./migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$31  = + (* src = "./migen_src/fix_0xff.py:17" *) { data_in[15:8], ones, zeros };
  assign \$33  = + (* src = "./migen_src/fix_0xff.py:23" *) { ones, zeros, data_in[7:0] };
  assign \$35  = + (* src = "./migen_src/fix_0xff.py:37" *) data_in;
  assign \$37  = data_in == (* src = "./migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$3  = valid_out == (* src = "./migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$39  = data_in[7:0] == (* src = "./migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$41  = data_in[15:8] == (* src = "./migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$43  = + (* src = "./migen_src/fix_0xff.py:17" *) { data_in[15:8], ones, zeros };
  assign \$45  = + (* src = "./migen_src/fix_0xff.py:23" *) { ones, zeros, data_in[7:0] };
  assign \$47  = + (* src = "./migen_src/fix_0xff.py:37" *) data_in;
  assign \$49  = i_busy == (* src = "./migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$51  = valid_out == (* src = "./migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$53  = valid_in == (* src = "./migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$55  = o_busy == (* src = "./migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$57  = \$53  & (* src = "./migen_src/fix_0xff.py:91" *) \$55 ;
  assign \$5  = valid_in == (* src = "./migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$59  = data_out_valid == (* src = "./migen_src/fix_0xff.py:68" *) 1'h0;
  assign \$61  = data_in == (* src = "./migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$63  = data_in[7:0] == (* src = "./migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$65  = data_in[15:8] == (* src = "./migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$67  = data_in == (* src = "./migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$69  = data_in[7:0] == (* src = "./migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$71  = data_in[15:8] == (* src = "./migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$73  = i_busy == (* src = "./migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$75  = valid_out == (* src = "./migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$77  = valid_in == (* src = "./migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$7  = o_busy == (* src = "./migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$79  = o_busy == (* src = "./migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$81  = \$77  & (* src = "./migen_src/fix_0xff.py:91" *) \$79 ;
  assign \$83  = valid_in == (* src = "./migen_src/fix_0xff.py:94" *) 1'h1;
  assign \$85  = valid_out == (* src = "./migen_src/fix_0xff.py:94" *) 1'h1;
  assign \$87  = \$83  & (* src = "./migen_src/fix_0xff.py:94" *) \$85 ;
  assign \$89  = i_busy == (* src = "./migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$91  = valid_out == (* src = "./migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$93  = valid_in == (* src = "./migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$95  = o_busy == (* src = "./migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$97  = \$93  & (* src = "./migen_src/fix_0xff.py:91" *) \$95 ;
  always @(posedge clk)
      data_out_ctr_reg <= \$next\data_out_ctr_reg ;
  always @(posedge clk)
      data_out_reg <= \$next\data_out_reg ;
  always @(posedge clk)
      data_out_valid <= \$next\data_out_valid ;
  always @(posedge clk)
      o_busy <= \$next\o_busy ;
  always @(posedge clk)
      data_out_ctr <= \$next\data_out_ctr ;
  always @(posedge clk)
      data_out <= \$next\data_out ;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @* begin
    \$next\valid_out  = valid_out;
    casez ({ \$9 , \$3 , \$1  })
      3'bzz1:
          casez (\$11 )
            1'h1:
                \$next\valid_out  = valid_in;
            1'hz:
                \$next\valid_out  = 1'h1;
          endcase
      3'bz1z:
          \$next\valid_out  = valid_in;
    endcase
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out  = data_out;
    casez ({ \$21 , \$15 , \$13  })
      3'bzz1:
          casez (\$23 )
            1'h1:
                casez ({ \$29 , \$27 , \$25  })
                  3'bzz1:
                      \$next\data_out  = { ones, zeros, ones, zeros };
                  3'bz1z:
                      \$next\data_out  = \$31 ;
                  3'b1zz:
                      \$next\data_out  = \$33 ;
                  3'hz:
                      \$next\data_out  = \$35 ;
                endcase
            1'hz:
                \$next\data_out  = data_out_reg;
          endcase
      3'bz1z:
          casez ({ \$41 , \$39 , \$37  })
            3'bzz1:
                \$next\data_out  = { ones, zeros, ones, zeros };
            3'bz1z:
                \$next\data_out  = \$43 ;
            3'b1zz:
                \$next\data_out  = \$45 ;
            3'hz:
                \$next\data_out  = \$47 ;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out  = 32'd0;
    endcase
  end
  always @* begin
    \$next\data_out_ctr  = data_out_ctr;
    casez ({ \$57 , \$51 , \$49  })
      3'bzz1:
          casez (\$59 )
            1'h1:
                casez ({ \$65 , \$63 , \$61  })
                  3'bzz1:
                      \$next\data_out_ctr  = 3'h4;
                  3'bz1z:
                      \$next\data_out_ctr  = 3'h3;
                  3'b1zz:
                      \$next\data_out_ctr  = 3'h3;
                  3'hz:
                      \$next\data_out_ctr  = 3'h2;
                endcase
            1'hz:
                \$next\data_out_ctr  = data_out_ctr_reg;
          endcase
      3'bz1z:
          casez ({ \$71 , \$69 , \$67  })
            3'bzz1:
                \$next\data_out_ctr  = 3'h4;
            3'bz1z:
                \$next\data_out_ctr  = 3'h3;
            3'b1zz:
                \$next\data_out_ctr  = 3'h3;
            3'hz:
                \$next\data_out_ctr  = 3'h2;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_ctr  = 3'h0;
    endcase
  end
  always @* begin
    \$next\o_busy  = o_busy;
    casez ({ \$81 , \$75 , \$73  })
      3'bzz1:
          \$next\o_busy  = 1'h0;
      3'bz1z:
          \$next\o_busy  = 1'h0;
      3'b1zz:
          \$next\o_busy  = \$87 ;
    endcase
    casez (rst)
      1'h1:
          \$next\o_busy  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_valid  = data_out_valid;
    casez ({ \$97 , \$91 , \$89  })
      3'bzz1:
          \$next\data_out_valid  = 1'h0;
      3'bz1z:
          \$next\data_out_valid  = 1'h0;
      3'b1zz:
          \$next\data_out_valid  = \$103 ;
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_valid  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_reg  = data_out_reg;
    casez (\$105 )
      1'h1:
          casez ({ \$111 , \$109 , \$107  })
            3'bzz1:
                \$next\data_out_reg  = { ones, zeros, ones, zeros };
            3'bz1z:
                \$next\data_out_reg  = \$113 ;
            3'b1zz:
                \$next\data_out_reg  = \$115 ;
            3'hz:
                \$next\data_out_reg  = \$117 ;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_reg  = 32'd0;
    endcase
  end
  always @* begin
    \$next\data_out_ctr_reg  = data_out_ctr_reg;
    casez (\$119 )
      1'h1:
          casez ({ \$125 , \$123 , \$121  })
            3'bzz1:
                \$next\data_out_ctr_reg  = 3'h4;
            3'bz1z:
                \$next\data_out_ctr_reg  = 3'h3;
            3'b1zz:
                \$next\data_out_ctr_reg  = 3'h3;
            3'hz:
                \$next\data_out_ctr_reg  = 3'h2;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_ctr_reg  = 3'h0;
    endcase
  end
endmodule

