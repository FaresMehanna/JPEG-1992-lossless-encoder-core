/* Generated by Yosys 0.8+     369 (git sha1 ea0e0722, clang 10.0.1 -fPIC -Os) */

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.normalize.anonymous" *)
(* generator = "nMigen" *)
module anonymous(val_in, val_in_mns, rst, clk, val_out, ssss, valid_o, valid);
  wire \$1 ;
  wire [13:0] \$11 ;
  wire [13:0] \$12 ;
  wire [13:0] \$14 ;
  wire [13:0] \$15 ;
  wire [13:0] \$17 ;
  wire [13:0] \$18 ;
  wire \$20 ;
  wire \$22 ;
  wire [13:0] \$24 ;
  wire [13:0] \$25 ;
  wire [13:0] \$27 ;
  wire [13:0] \$28 ;
  wire \$3 ;
  wire [13:0] \$30 ;
  wire [13:0] \$31 ;
  wire \$33 ;
  wire \$35 ;
  wire \$37 ;
  wire [13:0] \$39 ;
  wire [13:0] \$40 ;
  wire [13:0] \$42 ;
  wire [13:0] \$43 ;
  wire [13:0] \$45 ;
  wire [13:0] \$46 ;
  wire \$48 ;
  wire \$5 ;
  wire \$50 ;
  wire [13:0] \$52 ;
  wire [13:0] \$53 ;
  wire [13:0] \$55 ;
  wire [13:0] \$56 ;
  wire [13:0] \$58 ;
  wire [13:0] \$59 ;
  wire \$61 ;
  wire \$63 ;
  wire \$65 ;
  wire \$67 ;
  wire \$69 ;
  wire \$7 ;
  wire \$71 ;
  wire \$73 ;
  wire \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$81 ;
  wire \$83 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:70" *)
  reg [4:0] \$next\ssss ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:69" *)
  reg [11:0] \$next\val_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:72" *)
  reg \$next\valid_o ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:70" *)
  output [4:0] ssss;
  reg [4:0] ssss = 5'h00;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:68" *)
  input [12:0] val_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:73" *)
  input [12:0] val_in_mns;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:69" *)
  output [11:0] val_out;
  reg [11:0] val_out = 12'h000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:71" *)
  input valid;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:72" *)
  output valid_o;
  reg valid_o = 1'h0;
  assign \$9  = val_in_mns[12:1] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 12'hfff;
  assign \$12  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 1'h1;
  assign \$15  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 2'h3;
  assign \$18  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 3'h7;
  assign \$1  = val_in[12] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:92" *) 1'h1;
  assign \$20  = val_in_mns[12:5] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 8'hff;
  assign \$22  = val_in_mns[12:4] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 9'h1ff;
  assign \$25  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 4'hf;
  assign \$28  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 5'h1f;
  assign \$31  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 6'h3f;
  assign \$33  = val_in_mns[12:9] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 4'hf;
  assign \$35  = val_in_mns[12:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 5'h1f;
  assign \$37  = val_in_mns[12:7] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 6'h3f;
  assign \$3  = val_in_mns[12:6] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 7'h7f;
  assign \$40  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 7'h7f;
  assign \$43  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 8'hff;
  assign \$46  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 9'h1ff;
  assign \$48  = val_in_mns[12:11] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 2'h3;
  assign \$50  = val_in_mns[12:10] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 3'h7;
  assign \$53  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 10'h3ff;
  assign \$56  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 11'h7ff;
  assign \$5  = val_in_mns[12:3] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 10'h3ff;
  assign \$59  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 12'hfff;
  assign \$61  = val_in[12] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:92" *) 1'h1;
  assign \$63  = val_in_mns[12:6] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 7'h7f;
  assign \$65  = val_in_mns[12:3] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 10'h3ff;
  assign \$67  = val_in_mns[12:2] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 11'h7ff;
  assign \$69  = val_in_mns[12:1] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 12'hfff;
  assign \$71  = val_in_mns[12:5] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 8'hff;
  assign \$73  = val_in_mns[12:4] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 9'h1ff;
  assign \$75  = val_in_mns[12:9] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 4'hf;
  assign \$77  = val_in_mns[12:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 5'h1f;
  assign \$7  = val_in_mns[12:2] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 11'h7ff;
  assign \$79  = val_in_mns[12:7] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 6'h3f;
  assign \$81  = val_in_mns[12:11] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 2'h3;
  assign \$83  = val_in_mns[12:10] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 3'h7;
  always @(posedge clk)
      valid_o <= \$next\valid_o ;
  always @(posedge clk)
      ssss <= \$next\ssss ;
  always @(posedge clk)
      val_out <= \$next\val_out ;
  always @* begin
    \$next\val_out  = val_out;
    casez (valid)
      1'h1:
          casez (\$1 )
            1'h1:
                casez (\$3 )
                  1'h1:
                      casez (\$5 )
                        1'h1:
                            casez (\$7 )
                              1'h1:
                                  casez (\$9 )
                                    1'h1:
                                        \$next\val_out  = \$11 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$14 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$17 [11:0];
                            endcase
                        1'hz:
                            casez (\$20 )
                              1'h1:
                                  casez (\$22 )
                                    1'h1:
                                        \$next\val_out  = \$24 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$27 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$30 [11:0];
                            endcase
                      endcase
                  1'hz:
                      casez (\$33 )
                        1'h1:
                            casez (\$35 )
                              1'h1:
                                  casez (\$37 )
                                    1'h1:
                                        \$next\val_out  = \$39 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$42 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$45 [11:0];
                            endcase
                        1'hz:
                            casez (\$48 )
                              1'h1:
                                  casez (\$50 )
                                    1'h1:
                                        \$next\val_out  = \$52 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$55 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$58 [11:0];
                            endcase
                      endcase
                endcase
            1'hz:
                \$next\val_out  = val_in[11:0];
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\val_out  = 12'h000;
    endcase
  end
  always @* begin
    \$next\ssss  = ssss;
    casez (valid)
      1'h1:
          casez (\$61 )
            1'h1:
                casez (\$63 )
                  1'h1:
                      casez (\$65 )
                        1'h1:
                            casez (\$67 )
                              1'h1:
                                  casez (\$69 )
                                    1'h1:
                                        \$next\ssss  = 5'h01;
                                    1'hz:
                                        \$next\ssss  = 5'h02;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h03;
                            endcase
                        1'hz:
                            casez (\$71 )
                              1'h1:
                                  casez (\$73 )
                                    1'h1:
                                        \$next\ssss  = 5'h04;
                                    1'hz:
                                        \$next\ssss  = 5'h05;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h06;
                            endcase
                      endcase
                  1'hz:
                      casez (\$75 )
                        1'h1:
                            casez (\$77 )
                              1'h1:
                                  casez (\$79 )
                                    1'h1:
                                        \$next\ssss  = 5'h07;
                                    1'hz:
                                        \$next\ssss  = 5'h08;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h09;
                            endcase
                        1'hz:
                            casez (\$81 )
                              1'h1:
                                  casez (\$83 )
                                    1'h1:
                                        \$next\ssss  = 5'h0a;
                                    1'hz:
                                        \$next\ssss  = 5'h0b;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h0c;
                            endcase
                      endcase
                endcase
            1'hz:
              begin
                \$next\ssss  = 5'h00;
                casez ({ val_in[0], val_in[1], val_in[2], val_in[3], val_in[4], val_in[5], val_in[6], val_in[7], val_in[8], val_in[9], val_in[10], val_in[11] })
                  12'bzzzzzzzzzzz1:
                      \$next\ssss  = 5'h0c;
                  12'bzzzzzzzzzz1z:
                      \$next\ssss  = 5'h0b;
                  12'bzzzzzzzzz1zz:
                      \$next\ssss  = 5'h0a;
                  12'bzzzzzzzz1zzz:
                      \$next\ssss  = 5'h09;
                  12'bzzzzzzz1zzzz:
                      \$next\ssss  = 5'h08;
                  12'bzzzzzz1zzzzz:
                      \$next\ssss  = 5'h07;
                  12'bzzzzz1zzzzzz:
                      \$next\ssss  = 5'h06;
                  12'bzzzz1zzzzzzz:
                      \$next\ssss  = 5'h05;
                  12'bzzz1zzzzzzzz:
                      \$next\ssss  = 5'h04;
                  12'bzz1zzzzzzzzz:
                      \$next\ssss  = 5'h03;
                  12'bz1zzzzzzzzzz:
                      \$next\ssss  = 5'h02;
                  12'b1zzzzzzzzzzz:
                      \$next\ssss  = 5'h01;
                endcase
              end
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\ssss  = 5'h00;
    endcase
  end
  always @* begin
    \$next\valid_o  = valid_o;
    \$next\valid_o  = valid;
    casez (rst)
      1'h1:
          \$next\valid_o  = 1'h0;
    endcase
  end
  assign \$11  = \$12 ;
  assign \$14  = \$15 ;
  assign \$17  = \$18 ;
  assign \$24  = \$25 ;
  assign \$27  = \$28 ;
  assign \$30  = \$31 ;
  assign \$39  = \$40 ;
  assign \$42  = \$43 ;
  assign \$45  = \$46 ;
  assign \$52  = \$53 ;
  assign \$55  = \$56 ;
  assign \$58  = \$59 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.normalize.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$1 (val_in, val_in_mns, rst, clk, val_out, ssss, valid);
  wire \$1 ;
  wire [13:0] \$11 ;
  wire [13:0] \$12 ;
  wire [13:0] \$14 ;
  wire [13:0] \$15 ;
  wire [13:0] \$17 ;
  wire [13:0] \$18 ;
  wire \$20 ;
  wire \$22 ;
  wire [13:0] \$24 ;
  wire [13:0] \$25 ;
  wire [13:0] \$27 ;
  wire [13:0] \$28 ;
  wire \$3 ;
  wire [13:0] \$30 ;
  wire [13:0] \$31 ;
  wire \$33 ;
  wire \$35 ;
  wire \$37 ;
  wire [13:0] \$39 ;
  wire [13:0] \$40 ;
  wire [13:0] \$42 ;
  wire [13:0] \$43 ;
  wire [13:0] \$45 ;
  wire [13:0] \$46 ;
  wire \$48 ;
  wire \$5 ;
  wire \$50 ;
  wire [13:0] \$52 ;
  wire [13:0] \$53 ;
  wire [13:0] \$55 ;
  wire [13:0] \$56 ;
  wire [13:0] \$58 ;
  wire [13:0] \$59 ;
  wire \$61 ;
  wire \$63 ;
  wire \$65 ;
  wire \$67 ;
  wire \$69 ;
  wire \$7 ;
  wire \$71 ;
  wire \$73 ;
  wire \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$81 ;
  wire \$83 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:70" *)
  reg [4:0] \$next\ssss ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:69" *)
  reg [11:0] \$next\val_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:72" *)
  reg \$next\valid_o ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:70" *)
  output [4:0] ssss;
  reg [4:0] ssss = 5'h00;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:68" *)
  input [12:0] val_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:73" *)
  input [12:0] val_in_mns;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:69" *)
  output [11:0] val_out;
  reg [11:0] val_out = 12'h000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:71" *)
  input valid;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:72" *)
  reg valid_o = 1'h0;
  assign \$9  = val_in_mns[12:1] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 12'hfff;
  assign \$12  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 1'h1;
  assign \$15  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 2'h3;
  assign \$18  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 3'h7;
  assign \$1  = val_in[12] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:92" *) 1'h1;
  assign \$20  = val_in_mns[12:5] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 8'hff;
  assign \$22  = val_in_mns[12:4] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 9'h1ff;
  assign \$25  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 4'hf;
  assign \$28  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 5'h1f;
  assign \$31  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 6'h3f;
  assign \$33  = val_in_mns[12:9] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 4'hf;
  assign \$35  = val_in_mns[12:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 5'h1f;
  assign \$37  = val_in_mns[12:7] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 6'h3f;
  assign \$3  = val_in_mns[12:6] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 7'h7f;
  assign \$40  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 7'h7f;
  assign \$43  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 8'hff;
  assign \$46  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 9'h1ff;
  assign \$48  = val_in_mns[12:11] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 2'h3;
  assign \$50  = val_in_mns[12:10] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 3'h7;
  assign \$53  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:26" *) 10'h3ff;
  assign \$56  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:31" *) 11'h7ff;
  assign \$5  = val_in_mns[12:3] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 10'h3ff;
  assign \$59  = val_in + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:17" *) 12'hfff;
  assign \$61  = val_in[12] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:92" *) 1'h1;
  assign \$63  = val_in_mns[12:6] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 7'h7f;
  assign \$65  = val_in_mns[12:3] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 10'h3ff;
  assign \$67  = val_in_mns[12:2] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 11'h7ff;
  assign \$69  = val_in_mns[12:1] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 12'hfff;
  assign \$71  = val_in_mns[12:5] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 8'hff;
  assign \$73  = val_in_mns[12:4] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 9'h1ff;
  assign \$75  = val_in_mns[12:9] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 4'hf;
  assign \$77  = val_in_mns[12:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 5'h1f;
  assign \$7  = val_in_mns[12:2] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 11'h7ff;
  assign \$79  = val_in_mns[12:7] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 6'h3f;
  assign \$81  = val_in_mns[12:11] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:40" *) 2'h3;
  assign \$83  = val_in_mns[12:10] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:24" *) 3'h7;
  always @(posedge clk)
      valid_o <= \$next\valid_o ;
  always @(posedge clk)
      ssss <= \$next\ssss ;
  always @(posedge clk)
      val_out <= \$next\val_out ;
  always @* begin
    \$next\val_out  = val_out;
    casez (valid)
      1'h1:
          casez (\$1 )
            1'h1:
                casez (\$3 )
                  1'h1:
                      casez (\$5 )
                        1'h1:
                            casez (\$7 )
                              1'h1:
                                  casez (\$9 )
                                    1'h1:
                                        \$next\val_out  = \$11 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$14 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$17 [11:0];
                            endcase
                        1'hz:
                            casez (\$20 )
                              1'h1:
                                  casez (\$22 )
                                    1'h1:
                                        \$next\val_out  = \$24 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$27 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$30 [11:0];
                            endcase
                      endcase
                  1'hz:
                      casez (\$33 )
                        1'h1:
                            casez (\$35 )
                              1'h1:
                                  casez (\$37 )
                                    1'h1:
                                        \$next\val_out  = \$39 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$42 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$45 [11:0];
                            endcase
                        1'hz:
                            casez (\$48 )
                              1'h1:
                                  casez (\$50 )
                                    1'h1:
                                        \$next\val_out  = \$52 [11:0];
                                    1'hz:
                                        \$next\val_out  = \$55 [11:0];
                                  endcase
                              1'hz:
                                  \$next\val_out  = \$58 [11:0];
                            endcase
                      endcase
                endcase
            1'hz:
                \$next\val_out  = val_in[11:0];
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\val_out  = 12'h000;
    endcase
  end
  always @* begin
    \$next\ssss  = ssss;
    casez (valid)
      1'h1:
          casez (\$61 )
            1'h1:
                casez (\$63 )
                  1'h1:
                      casez (\$65 )
                        1'h1:
                            casez (\$67 )
                              1'h1:
                                  casez (\$69 )
                                    1'h1:
                                        \$next\ssss  = 5'h01;
                                    1'hz:
                                        \$next\ssss  = 5'h02;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h03;
                            endcase
                        1'hz:
                            casez (\$71 )
                              1'h1:
                                  casez (\$73 )
                                    1'h1:
                                        \$next\ssss  = 5'h04;
                                    1'hz:
                                        \$next\ssss  = 5'h05;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h06;
                            endcase
                      endcase
                  1'hz:
                      casez (\$75 )
                        1'h1:
                            casez (\$77 )
                              1'h1:
                                  casez (\$79 )
                                    1'h1:
                                        \$next\ssss  = 5'h07;
                                    1'hz:
                                        \$next\ssss  = 5'h08;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h09;
                            endcase
                        1'hz:
                            casez (\$81 )
                              1'h1:
                                  casez (\$83 )
                                    1'h1:
                                        \$next\ssss  = 5'h0a;
                                    1'hz:
                                        \$next\ssss  = 5'h0b;
                                  endcase
                              1'hz:
                                  \$next\ssss  = 5'h0c;
                            endcase
                      endcase
                endcase
            1'hz:
              begin
                \$next\ssss  = 5'h00;
                casez ({ val_in[0], val_in[1], val_in[2], val_in[3], val_in[4], val_in[5], val_in[6], val_in[7], val_in[8], val_in[9], val_in[10], val_in[11] })
                  12'bzzzzzzzzzzz1:
                      \$next\ssss  = 5'h0c;
                  12'bzzzzzzzzzz1z:
                      \$next\ssss  = 5'h0b;
                  12'bzzzzzzzzz1zz:
                      \$next\ssss  = 5'h0a;
                  12'bzzzzzzzz1zzz:
                      \$next\ssss  = 5'h09;
                  12'bzzzzzzz1zzzz:
                      \$next\ssss  = 5'h08;
                  12'bzzzzzz1zzzzz:
                      \$next\ssss  = 5'h07;
                  12'bzzzzz1zzzzzz:
                      \$next\ssss  = 5'h06;
                  12'bzzzz1zzzzzzz:
                      \$next\ssss  = 5'h05;
                  12'bzzz1zzzzzzzz:
                      \$next\ssss  = 5'h04;
                  12'bzz1zzzzzzzzz:
                      \$next\ssss  = 5'h03;
                  12'bz1zzzzzzzzzz:
                      \$next\ssss  = 5'h02;
                  12'b1zzzzzzzzzzz:
                      \$next\ssss  = 5'h01;
                endcase
              end
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\ssss  = 5'h00;
    endcase
  end
  always @* begin
    \$next\valid_o  = valid_o;
    \$next\valid_o  = valid;
    casez (rst)
      1'h1:
          \$next\valid_o  = 1'h0;
    endcase
  end
  assign \$11  = \$12 ;
  assign \$14  = \$15 ;
  assign \$17  = \$18 ;
  assign \$24  = \$25 ;
  assign \$27  = \$28 ;
  assign \$30  = \$31 ;
  assign \$39  = \$40 ;
  assign \$42  = \$43 ;
  assign \$45  = \$46 ;
  assign \$52  = \$53 ;
  assign \$55  = \$56 ;
  assign \$58  = \$59 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.encode.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$2 (ssss, val_in, rp_data, rst, clk, rp_addr, enc_out, enc_ctr, valid);
  wire [32:0] \$1 ;
  wire [32:0] \$2 ;
  wire [5:0] \$4 ;
  wire [5:0] \$5 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:44" *)
  reg [4:0] \$next\enc_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:43" *)
  reg [27:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:38" *)
  reg [4:0] \$next\rp_addr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:58" *)
  reg [4:0] \$next\ssss_late ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:60" *)
  reg [11:0] \$next\val_in_late ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:54" *)
  reg \$next\valid_late ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:44" *)
  output [4:0] enc_ctr;
  reg [4:0] enc_ctr = 5'h00;
  (* init = 28'h0000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:43" *)
  output [27:0] enc_out;
  reg [27:0] enc_out = 28'h0000000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:38" *)
  output [4:0] rp_addr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:39" *)
  input [32:0] rp_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:42" *)
  input [4:0] ssss;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:58" *)
  reg [4:0] ssss_late = 5'h00;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:41" *)
  input [11:0] val_in;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:60" *)
  reg [11:0] val_in_late = 12'h000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:45" *)
  input valid;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:54" *)
  reg valid_late = 1'h0;
  assign \$2  = rp_data | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:86" *) val_in_late;
  assign \$5  = rp_data[32:28] + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:87" *) ssss_late[3:0];
  always @(posedge clk)
      enc_ctr <= \$next\enc_ctr ;
  always @(posedge clk)
      enc_out <= \$next\enc_out ;
  always @(posedge clk)
      val_in_late <= \$next\val_in_late ;
  always @(posedge clk)
      ssss_late <= \$next\ssss_late ;
  always @(posedge clk)
      valid_late <= \$next\valid_late ;
  always @* begin
    \$next\valid_late  = valid_late;
    \$next\valid_late  = valid;
    casez (rst)
      1'h1:
          \$next\valid_late  = 1'h0;
    endcase
  end
  always @* begin
    \$next\ssss_late  = ssss_late;
    \$next\ssss_late  = ssss;
    casez (rst)
      1'h1:
          \$next\ssss_late  = 5'h00;
    endcase
  end
  always @* begin
    \$next\val_in_late  = val_in_late;
    \$next\val_in_late  = val_in;
    casez (rst)
      1'h1:
          \$next\val_in_late  = 12'h000;
    endcase
  end
  always @* begin
    \$next\rp_addr  = 5'h00;
    \$next\rp_addr  = ssss;
  end
  always @* begin
    \$next\enc_out  = enc_out;
    casez (valid_late)
      1'h1:
          \$next\enc_out  = \$1 [27:0];
    endcase
    casez (rst)
      1'h1:
          \$next\enc_out  = 28'h0000000;
    endcase
  end
  always @* begin
    \$next\enc_ctr  = enc_ctr;
    casez (valid_late)
      1'h1:
          \$next\enc_ctr  = \$4 [4:0];
    endcase
    casez (rst)
      1'h1:
          \$next\enc_ctr  = 5'h00;
    endcase
  end
  assign \$1  = \$2 ;
  assign \$4  = \$5 ;
  assign rp_addr = \$next\rp_addr ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.encode.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$3 (ssss, val_in, rp_data, rst, clk, rp_addr, enc_out, enc_ctr, valid);
  wire [32:0] \$1 ;
  wire [32:0] \$2 ;
  wire [5:0] \$4 ;
  wire [5:0] \$5 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:44" *)
  reg [4:0] \$next\enc_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:43" *)
  reg [27:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:38" *)
  reg [4:0] \$next\rp_addr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:58" *)
  reg [4:0] \$next\ssss_late ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:60" *)
  reg [11:0] \$next\val_in_late ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:54" *)
  reg \$next\valid_late ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:44" *)
  output [4:0] enc_ctr;
  reg [4:0] enc_ctr = 5'h00;
  (* init = 28'h0000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:43" *)
  output [27:0] enc_out;
  reg [27:0] enc_out = 28'h0000000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:38" *)
  output [4:0] rp_addr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:39" *)
  input [32:0] rp_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:42" *)
  input [4:0] ssss;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:58" *)
  reg [4:0] ssss_late = 5'h00;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:41" *)
  input [11:0] val_in;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:60" *)
  reg [11:0] val_in_late = 12'h000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:45" *)
  input valid;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:54" *)
  reg valid_late = 1'h0;
  assign \$2  = rp_data | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:86" *) val_in_late;
  assign \$5  = rp_data[32:28] + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:87" *) ssss_late[3:0];
  always @(posedge clk)
      enc_ctr <= \$next\enc_ctr ;
  always @(posedge clk)
      enc_out <= \$next\enc_out ;
  always @(posedge clk)
      val_in_late <= \$next\val_in_late ;
  always @(posedge clk)
      ssss_late <= \$next\ssss_late ;
  always @(posedge clk)
      valid_late <= \$next\valid_late ;
  always @* begin
    \$next\valid_late  = valid_late;
    \$next\valid_late  = valid;
    casez (rst)
      1'h1:
          \$next\valid_late  = 1'h0;
    endcase
  end
  always @* begin
    \$next\ssss_late  = ssss_late;
    \$next\ssss_late  = ssss;
    casez (rst)
      1'h1:
          \$next\ssss_late  = 5'h00;
    endcase
  end
  always @* begin
    \$next\val_in_late  = val_in_late;
    \$next\val_in_late  = val_in;
    casez (rst)
      1'h1:
          \$next\val_in_late  = 12'h000;
    endcase
  end
  always @* begin
    \$next\rp_addr  = 5'h00;
    \$next\rp_addr  = ssss;
  end
  always @* begin
    \$next\enc_out  = enc_out;
    casez (valid_late)
      1'h1:
          \$next\enc_out  = \$1 [27:0];
    endcase
    casez (rst)
      1'h1:
          \$next\enc_out  = 28'h0000000;
    endcase
  end
  always @* begin
    \$next\enc_ctr  = enc_ctr;
    casez (valid_late)
      1'h1:
          \$next\enc_ctr  = \$4 [4:0];
    endcase
    casez (rst)
      1'h1:
          \$next\enc_ctr  = 5'h00;
    endcase
  end
  assign \$1  = \$2 ;
  assign \$4  = \$5 ;
  assign rp_addr = \$next\rp_addr ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.merge.anonymous" *)
(* generator = "nMigen" *)
module \anonymous$4 (enc_in_ctr1, enc_in_ctr2, enc_in1, enc_in2, rst, clk, enc_out_ctr, enc_out, valid_out, valid_in);
  wire [5:0] \$1 ;
  wire [58:0] \$3 ;
  wire [58:0] \$4 ;
  wire [58:0] \$6 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:17" *)
  reg [55:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:18" *)
  reg [5:0] \$next\enc_out_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:21" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:11" *)
  input [27:0] enc_in1;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:14" *)
  input [27:0] enc_in2;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:12" *)
  input [4:0] enc_in_ctr1;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:15" *)
  input [4:0] enc_in_ctr2;
  (* init = 56'h00000000000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:17" *)
  output [55:0] enc_out;
  reg [55:0] enc_out = 56'h00000000000000;
  (* init = 6'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:18" *)
  output [5:0] enc_out_ctr;
  reg [5:0] enc_out_ctr = 6'h00;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:20" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:21" *)
  output valid_out;
  reg valid_out = 1'h0;
  assign \$1  = enc_in_ctr1 + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:35" *) enc_in_ctr2;
  assign \$4  = enc_in1 <<< (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:36" *) enc_in_ctr2;
  assign \$6  = \$4  | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:36" *) enc_in2;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      enc_out <= \$next\enc_out ;
  always @(posedge clk)
      enc_out_ctr <= \$next\enc_out_ctr ;
  always @* begin
    \$next\enc_out_ctr  = enc_out_ctr;
    casez (valid_in)
      1'h1:
          \$next\enc_out_ctr  = \$1 ;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_out_ctr  = 6'h00;
    endcase
  end
  always @* begin
    \$next\enc_out  = enc_out;
    casez (valid_in)
      1'h1:
          \$next\enc_out  = \$3 [55:0];
    endcase
    casez (rst)
      1'h1:
          \$next\enc_out  = 56'h00000000000000;
    endcase
  end
  always @* begin
    \$next\valid_out  = valid_out;
    \$next\valid_out  = valid_in;
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  assign \$3  = \$6 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter" *)
(* generator = "nMigen" *)
module converter(valid_out, enc_out, enc_out_ctr, out_end, rst, clk, valid_in, latch_output, enc_in, enc_in_ctr, in_end, close_full);
  wire \$1 ;
  wire \$11 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$3 ;
  wire \$31 ;
  wire [23:0] \$33 ;
  wire \$35 ;
  wire \$37 ;
  wire \$39 ;
  wire [6:0] \$41 ;
  wire [6:0] \$42 ;
  wire [6:0] \$44 ;
  wire [6:0] \$45 ;
  wire \$47 ;
  wire \$49 ;
  wire \$5 ;
  wire \$51 ;
  wire \$7 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:32" *)
  reg [23:0] \$next\enc_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:33" *)
  reg [4:0] \$next\enc_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:58" *)
  reg [5:0] \$next\enc_out_ctr_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:53" *)
  reg [47:0] \$next\enc_out_latch ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:57" *)
  reg [55:0] \$next\enc_out_reg ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [2:0] \$next\fsm_state ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:34" *)
  reg \$next\in_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:25" *)
  reg \$next\latch_output ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:54" *)
  reg \$next\out_end_latch ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:59" *)
  reg \$next\out_end_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:35" *)
  reg \$next\valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:60" *)
  reg \$next\valid_out_reg ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:36" *)
  input close_full;
  (* init = 24'h000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:32" *)
  output [23:0] enc_in;
  reg [23:0] enc_in = 24'h000000;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:33" *)
  output [4:0] enc_in_ctr;
  reg [4:0] enc_in_ctr = 5'h00;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:26" *)
  input [55:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:27" *)
  input [5:0] enc_out_ctr;
  (* init = 6'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:58" *)
  reg [5:0] enc_out_ctr_reg = 6'h00;
  (* init = 48'h000000000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:53" *)
  reg [47:0] enc_out_latch = 48'h000000000000;
  (* init = 56'h00000000000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:57" *)
  reg [55:0] enc_out_reg = 56'h00000000000000;
  (* init = 3'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [2:0] fsm_state = 3'h0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:34" *)
  output in_end;
  reg in_end = 1'h0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:25" *)
  output latch_output;
  reg latch_output = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:28" *)
  input out_end;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:54" *)
  reg out_end_latch = 1'h0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:59" *)
  reg out_end_reg = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:35" *)
  output valid_in;
  reg valid_in = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:29" *)
  input valid_out;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:60" *)
  reg valid_out_reg = 1'h0;
  assign \$9  = valid_out & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:88" *) \$7 ;
  assign \$11  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 5'h18;
  assign \$13  = close_full == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:80" *) 1'h0;
  assign \$15  = valid_out_reg & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:80" *) \$13 ;
  assign \$17  = close_full == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:88" *) 1'h0;
  assign \$1  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 5'h18;
  assign \$19  = valid_out & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:88" *) \$17 ;
  assign \$21  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 5'h18;
  assign \$23  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:134" *) 6'h30;
  assign \$25  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:141" *) 6'h38;
  assign \$27  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 5'h18;
  assign \$29  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:134" *) 6'h30;
  assign \$31  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:141" *) 6'h38;
  assign \$33  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) enc_out_reg[55:48];
  assign \$35  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 5'h18;
  assign \$37  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:134" *) 6'h30;
  assign \$3  = close_full == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:80" *) 1'h0;
  assign \$39  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:141" *) 6'h38;
  assign \$42  = enc_out_ctr_reg - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:137" *) 5'h18;
  assign \$45  = enc_out_ctr_reg - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:144" *) 6'h30;
  assign \$47  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 5'h18;
  assign \$49  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 5'h18;
  assign \$51  = enc_out_ctr_reg <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:103" *) 5'h18;
  assign \$5  = valid_out_reg & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:80" *) \$3 ;
  assign \$7  = close_full == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:88" *) 1'h0;
  always @(posedge clk)
      out_end_latch <= \$next\out_end_latch ;
  always @(posedge clk)
      enc_out_latch <= \$next\enc_out_latch ;
  always @(posedge clk)
      in_end <= \$next\in_end ;
  always @(posedge clk)
      enc_in_ctr <= \$next\enc_in_ctr ;
  always @(posedge clk)
      enc_in <= \$next\enc_in ;
  always @(posedge clk)
      valid_out_reg <= \$next\valid_out_reg ;
  always @(posedge clk)
      out_end_reg <= \$next\out_end_reg ;
  always @(posedge clk)
      enc_out_ctr_reg <= \$next\enc_out_ctr_reg ;
  always @(posedge clk)
      enc_out_reg <= \$next\enc_out_reg ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      latch_output <= \$next\latch_output ;
  always @(posedge clk)
      valid_in <= \$next\valid_in ;
  always @* begin
    \$next\valid_in  = valid_in;
    casez (fsm_state)
      3'h0:
          \$next\valid_in  = 1'h0;
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$1 )
                  1'h1:
                      \$next\valid_in  = 1'h1;
                  1'hz:
                      \$next\valid_in  = 1'h1;
                endcase
            1'hz:
                \$next\valid_in  = 1'h0;
          endcase
      3'h3:
          \$next\valid_in  = 1'h1;
      3'h4:
          \$next\valid_in  = 1'h1;
    endcase
    casez (rst)
      1'h1:
          \$next\valid_in  = 1'h0;
    endcase
  end
  always @* begin
    \$next\latch_output  = latch_output;
    casez (fsm_state)
      3'h0:
        begin
          \$next\latch_output  = 1'h0;
          casez ({ \$9 , \$5  })
            2'bz1:
                \$next\latch_output  = 1'h1;
            2'b1z:
                \$next\latch_output  = 1'h1;
          endcase
        end
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$11 )
                  1'h1:
                      casez (close_full)
                        1'h1:
                            \$next\latch_output  = 1'h0;
                      endcase
                  1'hz:
                      \$next\latch_output  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\latch_output  = 1'h0;
    endcase
  end
  always @* begin
    \$next\enc_out_latch  = enc_out_latch;
    casez (fsm_state)
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$49 )
                  1'h1:
                      /* empty */;
                  1'hz:
                      \$next\enc_out_latch  = enc_out_reg[47:0];
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\enc_out_latch  = 48'h000000000000;
    endcase
  end
  always @* begin
    \$next\out_end_latch  = out_end_latch;
    casez (fsm_state)
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$51 )
                  1'h1:
                      /* empty */;
                  1'hz:
                      \$next\out_end_latch  = out_end_reg;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\out_end_latch  = 1'h0;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      3'h0:
          casez ({ \$19 , \$15  })
            2'bz1:
                \$next\fsm_state  = 3'h1;
            2'b1z:
                \$next\fsm_state  = 3'h2;
          endcase
      3'h2:
          \$next\fsm_state  = 3'h1;
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$21 )
                  1'h1:
                      casez (close_full)
                        1'h1:
                            \$next\fsm_state  = 3'h0;
                      endcase
                  1'hz:
                      casez ({ \$25 , \$23  })
                        2'bz1:
                            \$next\fsm_state  = 3'h3;
                        2'b1z:
                            \$next\fsm_state  = 3'h4;
                      endcase
                endcase
          endcase
      3'h3:
          \$next\fsm_state  = 3'h0;
      3'h4:
          \$next\fsm_state  = 3'h3;
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 3'h0;
    endcase
  end
  always @* begin
    \$next\enc_out_reg  = enc_out_reg;
    casez (fsm_state)
      3'h2:
          \$next\enc_out_reg  = enc_out;
      3'h1:
          \$next\enc_out_reg  = enc_out;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_out_reg  = 56'h00000000000000;
    endcase
  end
  always @* begin
    \$next\enc_out_ctr_reg  = enc_out_ctr_reg;
    casez (fsm_state)
      3'h2:
          \$next\enc_out_ctr_reg  = enc_out_ctr;
      3'h1:
          \$next\enc_out_ctr_reg  = enc_out_ctr;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_out_ctr_reg  = 6'h00;
    endcase
  end
  always @* begin
    \$next\out_end_reg  = out_end_reg;
    casez (fsm_state)
      3'h2:
          \$next\out_end_reg  = out_end;
      3'h1:
          \$next\out_end_reg  = out_end;
    endcase
    casez (rst)
      1'h1:
          \$next\out_end_reg  = 1'h0;
    endcase
  end
  always @* begin
    \$next\valid_out_reg  = valid_out_reg;
    casez (fsm_state)
      3'h2:
          \$next\valid_out_reg  = valid_out;
      3'h1:
          \$next\valid_out_reg  = valid_out;
    endcase
    casez (rst)
      1'h1:
          \$next\valid_out_reg  = 1'h0;
    endcase
  end
  always @* begin
    \$next\enc_in  = enc_in;
    casez (fsm_state)
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$27 )
                  1'h1:
                      \$next\enc_in  = enc_out_reg[23:0];
                  1'hz:
                      casez ({ \$31 , \$29  })
                        2'bz1:
                            \$next\enc_in  = enc_out_reg[47:24];
                        2'b1z:
                            \$next\enc_in  = \$33 ;
                      endcase
                endcase
          endcase
      3'h3:
          \$next\enc_in  = enc_out_latch[23:0];
      3'h4:
          \$next\enc_in  = enc_out_latch[47:24];
    endcase
    casez (rst)
      1'h1:
          \$next\enc_in  = 24'h000000;
    endcase
  end
  always @* begin
    \$next\enc_in_ctr  = enc_in_ctr;
    casez (fsm_state)
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$35 )
                  1'h1:
                      \$next\enc_in_ctr  = enc_out_ctr_reg[4:0];
                  1'hz:
                    begin
                      \$next\enc_in_ctr  = 5'h18;
                      casez ({ \$39 , \$37  })
                        2'bz1:
                            \$next\enc_in_ctr  = \$41 [4:0];
                        2'b1z:
                            \$next\enc_in_ctr  = \$44 [4:0];
                      endcase
                    end
                endcase
          endcase
      3'h3:
          \$next\enc_in_ctr  = 5'h18;
      3'h4:
          \$next\enc_in_ctr  = 5'h18;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_in_ctr  = 5'h00;
    endcase
  end
  always @* begin
    \$next\in_end  = in_end;
    casez (fsm_state)
      3'h1:
          casez (valid_out_reg)
            1'h1:
                casez (\$47 )
                  1'h1:
                      \$next\in_end  = out_end_reg;
                  1'hz:
                      \$next\in_end  = 1'h0;
                endcase
          endcase
      3'h3:
          \$next\in_end  = out_end_latch;
      3'h4:
          \$next\in_end  = out_end_latch;
    endcase
    casez (rst)
      1'h1:
          \$next\in_end  = 1'h0;
    endcase
  end
  assign \$41  = \$42 ;
  assign \$44  = \$45 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter_fifo" *)
(* generator = "nMigen" *)
module converter_fifo(enc_in, enc_in_ctr, in_end, latch_output, rst, clk, valid_out, enc_out, enc_out_ctr, out_end, close_full, valid_in);
  wire \$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:33" *)
  reg \$next\close_full ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:37" *)
  reg [23:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:38" *)
  reg [4:0] \$next\enc_out_ctr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  reg [29:0] \$next\fifo_din ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  reg \$next\fifo_re ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  reg \$next\fifo_we ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:39" *)
  reg \$next\out_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:40" *)
  reg \$next\valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:32" *)
  reg \$next\writable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:33" *)
  output close_full;
  reg close_full = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:28" *)
  input [23:0] enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:29" *)
  input [4:0] enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:37" *)
  output [23:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:38" *)
  output [4:0] enc_out_ctr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  wire [29:0] fifo_din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  wire [29:0] fifo_dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  wire [9:0] fifo_level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  wire fifo_re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  wire fifo_readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  wire fifo_we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  wire fifo_writable;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:30" *)
  input in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:36" *)
  input latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:39" *)
  output out_end;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:31" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:40" *)
  output valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:32" *)
  wire writable;
  assign \$1  = fifo_level > (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:72" *) 9'h1fc;
  always @(posedge clk)
      close_full <= \$next\close_full ;
  \fifo$5  fifo (
    .clk(clk),
    .din(fifo_din),
    .dout(fifo_dout),
    .level(fifo_level),
    .re(fifo_re),
    .readable(fifo_readable),
    .rst(rst),
    .we(fifo_we),
    .writable(fifo_writable)
  );
  always @* begin
    \$next\fifo_we  = 1'h0;
    \$next\fifo_we  = valid_in;
  end
  always @* begin
    \$next\fifo_din  = 30'h00000000;
    \$next\fifo_din  = { in_end, enc_in_ctr, enc_in };
  end
  always @* begin
    \$next\writable  = 1'h0;
    \$next\writable  = fifo_writable;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = fifo_readable;
  end
  always @* begin
    \$next\enc_out  = 24'h000000;
    \$next\enc_out  = fifo_dout[23:0];
  end
  always @* begin
    \$next\enc_out_ctr  = 5'h00;
    \$next\enc_out_ctr  = fifo_dout[28:24];
  end
  always @* begin
    \$next\out_end  = 1'h0;
    \$next\out_end  = fifo_dout[29];
  end
  always @* begin
    \$next\fifo_re  = 1'h0;
    \$next\fifo_re  = latch_output;
  end
  always @* begin
    \$next\close_full  = close_full;
    \$next\close_full  = \$1 ;
    casez (rst)
      1'h1:
          \$next\close_full  = 1'h0;
    endcase
  end
  assign fifo_re = \$next\fifo_re ;
  assign out_end = \$next\out_end ;
  assign enc_out_ctr = \$next\enc_out_ctr ;
  assign enc_out = \$next\enc_out ;
  assign valid_out = \$next\valid_out ;
  assign writable = \$next\writable ;
  assign fifo_din = \$next\fifo_din ;
  assign fifo_we = \$next\fifo_we ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter_fifo_reg" *)
(* generator = "nMigen" *)
module converter_fifo_reg(enc_left, enc_ctr_left, out_end_left, valid_left, o_busy, enc_right, enc_ctr_right, out_end_right, valid_right, i_busy);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:30" *)
  reg [4:0] \$next\enc_ctr_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:29" *)
  reg [23:0] \$next\enc_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:21" *)
  reg \$next\o_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:31" *)
  reg \$next\out_end_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:32" *)
  reg \$next\valid_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:23" *)
  input [4:0] enc_ctr_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:30" *)
  output [4:0] enc_ctr_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:22" *)
  input [23:0] enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:29" *)
  output [23:0] enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:28" *)
  input i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:21" *)
  output o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:24" *)
  input out_end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:31" *)
  output out_end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:25" *)
  input valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:32" *)
  output valid_right;
  always @* begin
    \$next\o_busy  = 1'h0;
    \$next\o_busy  = i_busy;
  end
  always @* begin
    \$next\enc_right  = 24'h000000;
    \$next\enc_right  = enc_left;
  end
  always @* begin
    \$next\enc_ctr_right  = 5'h00;
    \$next\enc_ctr_right  = enc_ctr_left;
  end
  always @* begin
    \$next\out_end_right  = 1'h0;
    \$next\out_end_right  = out_end_left;
  end
  always @* begin
    \$next\valid_right  = 1'h0;
    \$next\valid_right  = valid_left;
  end
  assign valid_right = \$next\valid_right ;
  assign out_end_right = \$next\out_end_right ;
  assign enc_ctr_right = \$next\enc_ctr_right ;
  assign enc_right = \$next\enc_right ;
  assign o_busy = \$next\o_busy ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter_reg" *)
(* generator = "nMigen" *)
module converter_reg(left_enc_ctr, left_end, left_valid, right_close_full, right_enc, right_enc_ctr, right_end, right_valid, left_close_full, left_enc);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:23" *)
  reg \$next\left_close_full ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:26" *)
  reg [23:0] \$next\right_enc ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:27" *)
  reg [4:0] \$next\right_enc_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:28" *)
  reg \$next\right_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:29" *)
  reg \$next\right_valid ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:23" *)
  output left_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:19" *)
  input [23:0] left_enc;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:20" *)
  input [4:0] left_enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:21" *)
  input left_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:22" *)
  input left_valid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:30" *)
  input right_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:26" *)
  output [23:0] right_enc;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:27" *)
  output [4:0] right_enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:28" *)
  output right_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:29" *)
  output right_valid;
  always @* begin
    \$next\right_enc  = 24'h000000;
    \$next\right_enc  = left_enc;
  end
  always @* begin
    \$next\right_enc_ctr  = 5'h00;
    \$next\right_enc_ctr  = left_enc_ctr;
  end
  always @* begin
    \$next\right_end  = 1'h0;
    \$next\right_end  = left_end;
  end
  always @* begin
    \$next\right_valid  = 1'h0;
    \$next\right_valid  = left_valid;
  end
  always @* begin
    \$next\left_close_full  = 1'h0;
    \$next\left_close_full  = right_close_full;
  end
  assign left_close_full = \$next\left_close_full ;
  assign right_valid = \$next\right_valid ;
  assign right_end = \$next\right_end ;
  assign right_enc_ctr = \$next\right_enc_ctr ;
  assign right_enc = \$next\right_enc ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.difference" *)
(* generator = "nMigen" *)
module difference(pixel_in, predic_in, \pixel_in$1 , \predic_in$2 , rst, clk, val_out, \val_out$3 , \val_out$4 , \val_out$5 , valid_out, valid_in);
  wire [13:0] \$10 ;
  wire [12:0] \$11 ;
  wire [13:0] \$13 ;
  wire [13:0] \$15 ;
  wire [12:0] \$16 ;
  wire [13:0] \$18 ;
  wire [12:0] \$6 ;
  wire [12:0] \$8 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:23" *)
  reg [12:0] \$next\val_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:23" *)
  reg [12:0] \$next\val_out$3 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:24" *)
  reg [12:0] \$next\val_out$4 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:24" *)
  reg [12:0] \$next\val_out$5 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:27" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:21" *)
  input [11:0] pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:21" *)
  input [11:0] \pixel_in$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:22" *)
  input [11:0] predic_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:22" *)
  input [11:0] \predic_in$2 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* init = 13'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:23" *)
  output [12:0] val_out;
  reg [12:0] val_out = 13'h0000;
  (* init = 13'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:23" *)
  output [12:0] \val_out$3 ;
  reg [12:0] \val_out$3  = 13'h0000;
  (* init = 13'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:24" *)
  output [12:0] \val_out$4 ;
  reg [12:0] \val_out$4  = 13'h0000;
  (* init = 13'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:24" *)
  output [12:0] \val_out$5 ;
  reg [12:0] \val_out$5  = 13'h0000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:26" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:27" *)
  output valid_out;
  reg valid_out = 1'h0;
  assign \$11  = pixel_in - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:44" *) predic_in;
  assign \$13  = \$11  - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:44" *) 1'h1;
  assign \$16  = \pixel_in$1  - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:44" *) \predic_in$2 ;
  assign \$18  = \$16  - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:44" *) 1'h1;
  assign \$6  = pixel_in - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:43" *) predic_in;
  assign \$8  = \pixel_in$1  - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:43" *) \predic_in$2 ;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      \val_out$5  <= \$next\val_out$5 ;
  always @(posedge clk)
      \val_out$4  <= \$next\val_out$4 ;
  always @(posedge clk)
      \val_out$3  <= \$next\val_out$3 ;
  always @(posedge clk)
      val_out <= \$next\val_out ;
  always @* begin
    \$next\val_out  = val_out;
    casez (valid_in)
      1'h1:
          \$next\val_out  = \$6 ;
    endcase
    casez (rst)
      1'h1:
          \$next\val_out  = 13'h0000;
    endcase
  end
  always @* begin
    \$next\val_out$3  = \val_out$3 ;
    casez (valid_in)
      1'h1:
          \$next\val_out$3  = \$8 ;
    endcase
    casez (rst)
      1'h1:
          \$next\val_out$3  = 13'h0000;
    endcase
  end
  always @* begin
    \$next\val_out$4  = \val_out$4 ;
    casez (valid_in)
      1'h1:
          \$next\val_out$4  = \$10 [12:0];
    endcase
    casez (rst)
      1'h1:
          \$next\val_out$4  = 13'h0000;
    endcase
  end
  always @* begin
    \$next\val_out$5  = \val_out$5 ;
    casez (valid_in)
      1'h1:
          \$next\val_out$5  = \$15 [12:0];
    endcase
    casez (rst)
      1'h1:
          \$next\val_out$5  = 13'h0000;
    endcase
  end
  always @* begin
    \$next\valid_out  = valid_out;
    \$next\valid_out  = valid_in;
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  assign \$10  = \$13 ;
  assign \$15  = \$18 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.encode" *)
(* generator = "nMigen" *)
module encode(valid_in, ssss, \val_in$1 , \ssss$2 , rst, clk, enc_out, enc_ctr, \enc_out$3 , \enc_ctr$4 , valid_out, val_in);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:110" *)
  reg [4:0] \$next\enc_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:110" *)
  reg [4:0] \$next\enc_ctr$4 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:109" *)
  reg [27:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:109" *)
  reg [27:0] \$next\enc_out$3 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  reg [3:0] \$next\mem_r_addr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  reg [3:0] \$next\mem_r_addr$20 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:39" *)
  reg [32:0] \$next\rp_data ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:39" *)
  reg [32:0] \$next\rp_data$13 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:42" *)
  reg [4:0] \$next\ssss$11 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:42" *)
  reg [4:0] \$next\ssss$5 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:41" *)
  reg [11:0] \$next\val_in$12 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:41" *)
  reg [11:0] \$next\val_in$6 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:45" *)
  reg \$next\valid ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:45" *)
  reg \$next\valid$10 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:146" *)
  reg \$next\valid_late ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:113" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:110" *)
  output [4:0] enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:44" *)
  wire [4:0] \enc_ctr$16 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:110" *)
  output [4:0] \enc_ctr$4 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:44" *)
  wire [4:0] \enc_ctr$8 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:109" *)
  output [27:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:43" *)
  wire [27:0] \enc_out$15 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:109" *)
  output [27:0] \enc_out$3 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:43" *)
  wire [27:0] \enc_out$7 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  wire [3:0] mem_r_addr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  wire [3:0] \mem_r_addr$20 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:83" *)
  wire [32:0] mem_r_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:83" *)
  wire [32:0] \mem_r_data$21 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:38" *)
  wire [4:0] rp_addr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:38" *)
  wire [4:0] \rp_addr$14 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:39" *)
  wire [32:0] rp_data;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:39" *)
  wire [32:0] \rp_data$13 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:106" *)
  input [4:0] ssss;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:42" *)
  wire [4:0] \ssss$11 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:106" *)
  input [4:0] \ssss$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:42" *)
  wire [4:0] \ssss$5 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:105" *)
  input [11:0] val_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:105" *)
  input [11:0] \val_in$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:41" *)
  wire [11:0] \val_in$12 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:41" *)
  wire [11:0] \val_in$6 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:45" *)
  wire valid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:45" *)
  wire \valid$10 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:112" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:146" *)
  reg valid_late = 1'h0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:113" *)
  output valid_out;
  reg valid_out = 1'h0;
  \anonymous$3  \$17  (
    .clk(clk),
    .enc_ctr(\enc_ctr$16 ),
    .enc_out(\enc_out$15 ),
    .rp_addr(\rp_addr$14 ),
    .rp_data(\rp_data$13 ),
    .rst(rst),
    .ssss(\ssss$11 ),
    .val_in(\val_in$12 ),
    .valid(\valid$10 )
  );
  \anonymous$2  \$9  (
    .clk(clk),
    .enc_ctr(\enc_ctr$8 ),
    .enc_out(\enc_out$7 ),
    .rp_addr(rp_addr),
    .rp_data(rp_data),
    .rst(rst),
    .ssss(\ssss$5 ),
    .val_in(\val_in$6 ),
    .valid(valid)
  );
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      valid_late <= \$next\valid_late ;
  reg [32:0] mem [12:0];
  initial begin
    mem[0] = 33'h04000000e;
    mem[1] = 33'h030000000;
    mem[2] = 33'h030000004;
    mem[3] = 33'h030000010;
    mem[4] = 33'h030000030;
    mem[5] = 33'h030000080;
    mem[6] = 33'h030000140;
    mem[7] = 33'h030000300;
    mem[8] = 33'h050001e00;
    mem[9] = 33'h060007c00;
    mem[10] = 33'h07001f800;
    mem[11] = 33'h08007f000;
    mem[12] = 33'h0901fe000;
  end
  reg [3:0] _0_;
  reg [3:0] _1_;
  always @(posedge clk) begin
    _0_ <= \$next\mem_r_addr ;
    _1_ <= \$next\mem_r_addr$20 ;
  end
  assign mem_r_data = mem[_0_];
  assign \mem_r_data$21  = mem[_1_];
  always @* begin
    \$next\val_in$6  = 12'h000;
    \$next\val_in$6  = val_in;
  end
  always @* begin
    \$next\valid  = 1'h0;
    \$next\valid  = valid_in;
  end
  always @* begin
    \$next\mem_r_addr$20  = 4'h0;
    \$next\mem_r_addr$20  = \rp_addr$14 [3:0];
  end
  always @* begin
    \$next\rp_data$13  = 33'h000000000;
    \$next\rp_data$13  = \mem_r_data$21 ;
  end
  always @* begin
    \$next\enc_out$3  = 28'h0000000;
    \$next\enc_out$3  = \enc_out$15 ;
  end
  always @* begin
    \$next\enc_ctr$4  = 5'h00;
    \$next\enc_ctr$4  = \enc_ctr$16 ;
  end
  always @* begin
    \$next\valid_late  = valid_late;
    \$next\valid_late  = valid_in;
    casez (rst)
      1'h1:
          \$next\valid_late  = 1'h0;
    endcase
  end
  always @* begin
    \$next\valid_out  = valid_out;
    \$next\valid_out  = valid_late;
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\ssss$5  = 5'h00;
    \$next\ssss$5  = ssss;
  end
  always @* begin
    \$next\mem_r_addr  = 4'h0;
    \$next\mem_r_addr  = rp_addr[3:0];
  end
  always @* begin
    \$next\rp_data  = 33'h000000000;
    \$next\rp_data  = mem_r_data;
  end
  always @* begin
    \$next\enc_out  = 28'h0000000;
    \$next\enc_out  = \enc_out$7 ;
  end
  always @* begin
    \$next\enc_ctr  = 5'h00;
    \$next\enc_ctr  = \enc_ctr$8 ;
  end
  always @* begin
    \$next\val_in$12  = 12'h000;
    \$next\val_in$12  = \val_in$1 ;
  end
  always @* begin
    \$next\valid$10  = 1'h0;
    \$next\valid$10  = valid_in;
  end
  always @* begin
    \$next\ssss$11  = 5'h00;
    \$next\ssss$11  = \ssss$2 ;
  end
  assign \enc_ctr$4  = \$next\enc_ctr$4 ;
  assign \enc_out$3  = \$next\enc_out$3 ;
  assign \rp_data$13  = \$next\rp_data$13 ;
  assign \mem_r_addr$20  = \$next\mem_r_addr$20 ;
  assign \ssss$11  = \$next\ssss$11 ;
  assign \valid$10  = \$next\valid$10 ;
  assign \val_in$12  = \$next\val_in$12 ;
  assign enc_ctr = \$next\enc_ctr ;
  assign enc_out = \$next\enc_out ;
  assign rp_data = \$next\rp_data ;
  assign mem_r_addr = \$next\mem_r_addr ;
  assign \ssss$5  = \$next\ssss$5 ;
  assign valid = \$next\valid ;
  assign \val_in$6  = \$next\val_in$6 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.end_delayer" *)
(* generator = "nMigen" *)
module end_delayer(rst, clk, out_sig, in_sig);
  wire [3:0] \$1 ;
  wire [3:0] \$2 ;
  wire \$4 ;
  wire \$6 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:11" *)
  reg \$next\out_sig ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:19" *)
  reg \$next\out_val ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:12" *)
  reg [2:0] \$next\timer ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:18" *)
  reg \$next\timer_start ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:10" *)
  input in_sig;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:11" *)
  output out_sig;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:19" *)
  reg out_val = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* init = 3'h4 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:12" *)
  reg [2:0] timer = 3'h4;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:18" *)
  reg timer_start = 1'h0;
  assign \$2  = timer - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:27" *) 1'h1;
  assign \$4  = timer == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:29" *) 1'h0;
  assign \$6  = \$4  | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:29" *) out_val;
  always @(posedge clk)
      out_val <= \$next\out_val ;
  always @(posedge clk)
      timer <= \$next\timer ;
  always @(posedge clk)
      timer_start <= \$next\timer_start ;
  always @* begin
    \$next\timer_start  = timer_start;
    casez (in_sig)
      1'h1:
          \$next\timer_start  = 1'h1;
    endcase
    casez (rst)
      1'h1:
          \$next\timer_start  = 1'h0;
    endcase
  end
  always @* begin
    \$next\timer  = timer;
    casez (timer_start)
      1'h1:
          \$next\timer  = \$1 [2:0];
    endcase
    casez (rst)
      1'h1:
          \$next\timer  = 3'h4;
    endcase
  end
  always @* begin
    \$next\out_val  = out_val;
    \$next\out_val  = \$6 ;
    casez (rst)
      1'h1:
          \$next\out_val  = 1'h0;
    endcase
  end
  always @* begin
    \$next\out_sig  = 1'h0;
    \$next\out_sig  = out_val;
  end
  assign \$1  = \$2 ;
  assign out_sig = \$next\out_sig ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.lj92_pipeline_fifo.fifo" *)
(* generator = "nMigen" *)
module fifo(we, re, rst, clk, dout, readable, level, din);
  wire \$1 ;
  wire \$3 ;
  wire \$5 ;
  wire [9:0] \$7 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  reg [62:0] \$next\dout ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  reg [9:0] \$next\level ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  reg \$next\readable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  reg [62:0] \$next\unbuffered_din ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  reg \$next\unbuffered_re ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  reg \$next\unbuffered_replace ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  reg \$next\unbuffered_we ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  reg \$next\writable ;
  (* init = 1'h0 *)
  reg \$verilog_initial_trigger  = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  input [62:0] din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  output [62:0] dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  output [9:0] level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  input re;
  (* init = 1'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  output readable;
  reg readable = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  wire [62:0] unbuffered_din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  wire [62:0] unbuffered_dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  wire [8:0] unbuffered_level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  wire unbuffered_re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  wire unbuffered_readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  wire unbuffered_replace;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  wire unbuffered_we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  wire unbuffered_writable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  input we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  wire writable;
  assign \$1  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) readable;
  assign \$3  = \$1  | (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) re;
  assign \$5  = unbuffered_readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) \$3 ;
  assign \$7  = unbuffered_level + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:263" *) readable;
  always @(posedge clk)
      readable <= \$next\readable ;
  unbuffered unbuffered (
    .clk(clk),
    .din(unbuffered_din),
    .dout(unbuffered_dout),
    .level(unbuffered_level),
    .re(unbuffered_re),
    .readable(unbuffered_readable),
    .replace(unbuffered_replace),
    .rst(rst),
    .we(unbuffered_we),
    .writable(unbuffered_writable)
  );
  always @* begin
    \$next\unbuffered_din  = 63'h0000000000000000;
    \$next\unbuffered_din  = din;
  end
  always @* begin
    \$next\unbuffered_we  = 1'h0;
    \$next\unbuffered_we  = we;
  end
  always @* begin
    \$next\writable  = 1'h0;
    \$next\writable  = unbuffered_writable;
  end
  always @* begin
    \$next\unbuffered_replace  = 1'h0;
    \$next\unbuffered_replace  = 1'h0;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    \$next\dout  = 63'h0000000000000000;
    \$next\dout  = unbuffered_dout;
  end
  always @* begin
    \$next\unbuffered_re  = 1'h0;
    \$next\unbuffered_re  = \$5 ;
  end
  always @* begin
    \$next\readable  = readable;
    casez ({ re, unbuffered_re })
      2'bz1:
          \$next\readable  = 1'h1;
      2'b1z:
          \$next\readable  = 1'h0;
    endcase
    casez (rst)
      1'h1:
          \$next\readable  = 1'h0;
    endcase
  end
  always @* begin
    \$next\level  = 10'h000;
    \$next\level  = \$7 ;
  end
  assign level = \$next\level ;
  assign unbuffered_re = \$next\unbuffered_re ;
  assign dout = \$next\dout ;
  assign unbuffered_replace = \$next\unbuffered_replace ;
  assign writable = \$next\writable ;
  assign unbuffered_we = \$next\unbuffered_we ;
  assign unbuffered_din = \$next\unbuffered_din ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter_fifo.fifo" *)
(* generator = "nMigen" *)
module \fifo$5 (we, re, rst, clk, writable, dout, readable, level, din);
  wire \$1 ;
  wire \$3 ;
  wire \$5 ;
  wire [9:0] \$7 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  reg [29:0] \$next\dout ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  reg [9:0] \$next\level ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  reg \$next\readable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  reg [29:0] \$next\unbuffered_din ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  reg \$next\unbuffered_re ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  reg \$next\unbuffered_replace ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  reg \$next\unbuffered_we ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  reg \$next\writable ;
  (* init = 1'h0 *)
  reg \$verilog_initial_trigger  = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  input [29:0] din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  output [29:0] dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  output [9:0] level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  input re;
  (* init = 1'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  output readable;
  reg readable = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  wire [29:0] unbuffered_din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  wire [29:0] unbuffered_dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  wire [8:0] unbuffered_level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  wire unbuffered_re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  wire unbuffered_readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  wire unbuffered_replace;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  wire unbuffered_we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  wire unbuffered_writable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  input we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  output writable;
  assign \$1  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) readable;
  assign \$3  = \$1  | (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) re;
  assign \$5  = unbuffered_readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:256" *) \$3 ;
  assign \$7  = unbuffered_level + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:263" *) readable;
  always @(posedge clk)
      readable <= \$next\readable ;
  \unbuffered$6  unbuffered (
    .clk(clk),
    .din(unbuffered_din),
    .dout(unbuffered_dout),
    .level(unbuffered_level),
    .re(unbuffered_re),
    .readable(unbuffered_readable),
    .replace(unbuffered_replace),
    .rst(rst),
    .we(unbuffered_we),
    .writable(unbuffered_writable)
  );
  always @* begin
    \$next\unbuffered_din  = 30'h00000000;
    \$next\unbuffered_din  = din;
  end
  always @* begin
    \$next\unbuffered_we  = 1'h0;
    \$next\unbuffered_we  = we;
  end
  always @* begin
    \$next\writable  = 1'h0;
    \$next\writable  = unbuffered_writable;
  end
  always @* begin
    \$next\unbuffered_replace  = 1'h0;
    \$next\unbuffered_replace  = 1'h0;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    \$next\dout  = 30'h00000000;
    \$next\dout  = unbuffered_dout;
  end
  always @* begin
    \$next\unbuffered_re  = 1'h0;
    \$next\unbuffered_re  = \$5 ;
  end
  always @* begin
    \$next\readable  = readable;
    casez ({ re, unbuffered_re })
      2'bz1:
          \$next\readable  = 1'h1;
      2'b1z:
          \$next\readable  = 1'h0;
    endcase
    casez (rst)
      1'h1:
          \$next\readable  = 1'h0;
    endcase
  end
  always @* begin
    \$next\level  = 10'h000;
    \$next\level  = \$7 ;
  end
  assign level = \$next\level ;
  assign unbuffered_re = \$next\unbuffered_re ;
  assign dout = \$next\dout ;
  assign unbuffered_replace = \$next\unbuffered_replace ;
  assign writable = \$next\writable ;
  assign unbuffered_we = \$next\unbuffered_we ;
  assign unbuffered_din = \$next\unbuffered_din ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.fix_0xff" *)
(* generator = "nMigen" *)
module fix_0xff(valid_in, data_in, zeros, ones, rst, clk, valid_out, data_out, data_out_ctr, o_busy, i_busy);
  wire \$1 ;
  wire \$101 ;
  wire \$103 ;
  wire \$105 ;
  wire \$107 ;
  wire \$109 ;
  wire \$11 ;
  wire \$111 ;
  wire [31:0] \$113 ;
  wire [31:0] \$115 ;
  wire [31:0] \$117 ;
  wire \$119 ;
  wire \$121 ;
  wire \$123 ;
  wire \$125 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$3 ;
  wire [31:0] \$31 ;
  wire [31:0] \$33 ;
  wire [31:0] \$35 ;
  wire \$37 ;
  wire \$39 ;
  wire \$41 ;
  wire [31:0] \$43 ;
  wire [31:0] \$45 ;
  wire [31:0] \$47 ;
  wire \$49 ;
  wire \$5 ;
  wire \$51 ;
  wire \$53 ;
  wire \$55 ;
  wire \$57 ;
  wire \$59 ;
  wire \$61 ;
  wire \$63 ;
  wire \$65 ;
  wire \$67 ;
  wire \$69 ;
  wire \$7 ;
  wire \$71 ;
  wire \$73 ;
  wire \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$81 ;
  wire \$83 ;
  wire \$85 ;
  wire \$87 ;
  wire \$89 ;
  wire \$9 ;
  wire \$91 ;
  wire \$93 ;
  wire \$95 ;
  wire \$97 ;
  wire \$99 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:40" *)
  reg [31:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:41" *)
  reg [2:0] \$next\data_out_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:60" *)
  reg [2:0] \$next\data_out_ctr_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:59" *)
  reg [31:0] \$next\data_out_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:61" *)
  reg \$next\data_out_valid ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:46" *)
  reg \$next\o_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:45" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *)
  input [15:0] data_in;
  (* init = 32'd0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:40" *)
  output [31:0] data_out;
  reg [31:0] data_out = 32'd0;
  (* init = 3'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:41" *)
  output [2:0] data_out_ctr;
  reg [2:0] data_out_ctr = 3'h0;
  (* init = 3'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:60" *)
  reg [2:0] data_out_ctr_reg = 3'h0;
  (* init = 32'd0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:59" *)
  reg [31:0] data_out_reg = 32'd0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:61" *)
  reg data_out_valid = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:47" *)
  input i_busy;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:46" *)
  output o_busy;
  reg o_busy = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:57" *)
  input [7:0] ones;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:44" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:45" *)
  output valid_out;
  reg valid_out = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:56" *)
  input [7:0] zeros;
  assign \$9  = \$5  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) \$7 ;
  assign \$99  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:93" *) 1'h1;
  assign \$101  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:93" *) 1'h1;
  assign \$103  = \$99  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:93" *) \$101 ;
  assign \$105  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:97" *) 1'h0;
  assign \$107  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$109  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$111  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$113  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:17" *) { data_in[15:8], ones, zeros };
  assign \$115  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:23" *) { ones, zeros, data_in[7:0] };
  assign \$117  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *) data_in;
  assign \$11  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:68" *) 1'h0;
  assign \$119  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:97" *) 1'h0;
  assign \$121  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$123  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$125  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$13  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$15  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$17  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$1  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$19  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$21  = \$17  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) \$19 ;
  assign \$23  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:68" *) 1'h0;
  assign \$25  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$27  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$29  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$31  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:17" *) { data_in[15:8], ones, zeros };
  assign \$33  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:23" *) { ones, zeros, data_in[7:0] };
  assign \$35  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *) data_in;
  assign \$37  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$3  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$39  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$41  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$43  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:17" *) { data_in[15:8], ones, zeros };
  assign \$45  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:23" *) { ones, zeros, data_in[7:0] };
  assign \$47  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *) data_in;
  assign \$49  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$51  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$53  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$55  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$57  = \$53  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) \$55 ;
  assign \$5  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$59  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:68" *) 1'h0;
  assign \$61  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$63  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$65  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$67  = data_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:9" *) 16'hffff;
  assign \$69  = data_in[7:0] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:15" *) 8'hff;
  assign \$71  = data_in[15:8] == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:21" *) 8'hff;
  assign \$73  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$75  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$77  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$7  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$79  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$81  = \$77  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) \$79 ;
  assign \$83  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:94" *) 1'h1;
  assign \$85  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:94" *) 1'h1;
  assign \$87  = \$83  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:94" *) \$85 ;
  assign \$89  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:67" *) 1'h0;
  assign \$91  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:82" *) 1'h0;
  assign \$93  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h1;
  assign \$95  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) 1'h0;
  assign \$97  = \$93  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:91" *) \$95 ;
  always @(posedge clk)
      data_out_reg <= \$next\data_out_reg ;
  always @(posedge clk)
      data_out_valid <= \$next\data_out_valid ;
  always @(posedge clk)
      o_busy <= \$next\o_busy ;
  always @(posedge clk)
      data_out_ctr <= \$next\data_out_ctr ;
  always @(posedge clk)
      data_out <= \$next\data_out ;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      data_out_ctr_reg <= \$next\data_out_ctr_reg ;
  always @* begin
    \$next\valid_out  = valid_out;
    casez ({ \$9 , \$3 , \$1  })
      3'bzz1:
          casez (\$11 )
            1'h1:
                \$next\valid_out  = valid_in;
            1'hz:
                \$next\valid_out  = 1'h1;
          endcase
      3'bz1z:
          \$next\valid_out  = valid_in;
    endcase
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out  = data_out;
    casez ({ \$21 , \$15 , \$13  })
      3'bzz1:
          casez (\$23 )
            1'h1:
                casez ({ \$29 , \$27 , \$25  })
                  3'bzz1:
                      \$next\data_out  = { ones, zeros, ones, zeros };
                  3'bz1z:
                      \$next\data_out  = \$31 ;
                  3'b1zz:
                      \$next\data_out  = \$33 ;
                  3'hz:
                      \$next\data_out  = \$35 ;
                endcase
            1'hz:
                \$next\data_out  = data_out_reg;
          endcase
      3'bz1z:
          casez ({ \$41 , \$39 , \$37  })
            3'bzz1:
                \$next\data_out  = { ones, zeros, ones, zeros };
            3'bz1z:
                \$next\data_out  = \$43 ;
            3'b1zz:
                \$next\data_out  = \$45 ;
            3'hz:
                \$next\data_out  = \$47 ;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out  = 32'd0;
    endcase
  end
  always @* begin
    \$next\data_out_ctr  = data_out_ctr;
    casez ({ \$57 , \$51 , \$49  })
      3'bzz1:
          casez (\$59 )
            1'h1:
                casez ({ \$65 , \$63 , \$61  })
                  3'bzz1:
                      \$next\data_out_ctr  = 3'h4;
                  3'bz1z:
                      \$next\data_out_ctr  = 3'h3;
                  3'b1zz:
                      \$next\data_out_ctr  = 3'h3;
                  3'hz:
                      \$next\data_out_ctr  = 3'h2;
                endcase
            1'hz:
                \$next\data_out_ctr  = data_out_ctr_reg;
          endcase
      3'bz1z:
          casez ({ \$71 , \$69 , \$67  })
            3'bzz1:
                \$next\data_out_ctr  = 3'h4;
            3'bz1z:
                \$next\data_out_ctr  = 3'h3;
            3'b1zz:
                \$next\data_out_ctr  = 3'h3;
            3'hz:
                \$next\data_out_ctr  = 3'h2;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_ctr  = 3'h0;
    endcase
  end
  always @* begin
    \$next\o_busy  = o_busy;
    casez ({ \$81 , \$75 , \$73  })
      3'bzz1:
          \$next\o_busy  = 1'h0;
      3'bz1z:
          \$next\o_busy  = 1'h0;
      3'b1zz:
          \$next\o_busy  = \$87 ;
    endcase
    casez (rst)
      1'h1:
          \$next\o_busy  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_valid  = data_out_valid;
    casez ({ \$97 , \$91 , \$89  })
      3'bzz1:
          \$next\data_out_valid  = 1'h0;
      3'bz1z:
          \$next\data_out_valid  = 1'h0;
      3'b1zz:
          \$next\data_out_valid  = \$103 ;
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_valid  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_reg  = data_out_reg;
    casez (\$105 )
      1'h1:
          casez ({ \$111 , \$109 , \$107  })
            3'bzz1:
                \$next\data_out_reg  = { ones, zeros, ones, zeros };
            3'bz1z:
                \$next\data_out_reg  = \$113 ;
            3'b1zz:
                \$next\data_out_reg  = \$115 ;
            3'hz:
                \$next\data_out_reg  = \$117 ;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_reg  = 32'd0;
    endcase
  end
  always @* begin
    \$next\data_out_ctr_reg  = data_out_ctr_reg;
    casez (\$119 )
      1'h1:
          casez ({ \$125 , \$123 , \$121  })
            3'bzz1:
                \$next\data_out_ctr_reg  = 3'h4;
            3'bz1z:
                \$next\data_out_ctr_reg  = 3'h3;
            3'b1zz:
                \$next\data_out_ctr_reg  = 3'h3;
            3'hz:
                \$next\data_out_ctr_reg  = 3'h2;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_ctr_reg  = 3'h0;
    endcase
  end
endmodule

(* \nmigen.hierarchy  = "top.top_module.fix_0xff2" *)
(* generator = "nMigen" *)
module fix_0xff2(valid_in, data_in_ctr, data_in, rst, clk, valid_out, data_out, o_busy, i_busy);
  wire \$1 ;
  wire \$101 ;
  wire \$103 ;
  wire \$105 ;
  wire \$107 ;
  wire \$109 ;
  wire \$11 ;
  wire \$111 ;
  wire \$113 ;
  wire \$115 ;
  wire \$117 ;
  wire \$119 ;
  wire \$121 ;
  wire \$123 ;
  wire \$125 ;
  wire \$127 ;
  wire \$129 ;
  wire \$13 ;
  wire \$131 ;
  wire \$133 ;
  wire \$135 ;
  wire \$137 ;
  wire \$139 ;
  wire \$141 ;
  wire \$143 ;
  wire \$145 ;
  wire \$147 ;
  wire \$149 ;
  wire \$15 ;
  wire \$151 ;
  wire \$153 ;
  wire \$155 ;
  wire \$157 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$3 ;
  wire \$31 ;
  wire \$33 ;
  wire \$35 ;
  wire \$37 ;
  wire \$39 ;
  wire \$41 ;
  wire \$43 ;
  wire [23:0] \$45 ;
  wire [23:0] \$47 ;
  wire [23:0] \$49 ;
  wire \$5 ;
  wire [23:0] \$51 ;
  wire [23:0] \$53 ;
  wire [23:0] \$55 ;
  wire [23:0] \$57 ;
  wire [23:0] \$59 ;
  wire \$61 ;
  wire [23:0] \$63 ;
  wire [23:0] \$65 ;
  wire [23:0] \$67 ;
  wire [23:0] \$69 ;
  wire \$7 ;
  wire \$71 ;
  wire \$73 ;
  wire [23:0] \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$81 ;
  wire \$83 ;
  wire \$85 ;
  wire \$87 ;
  wire \$89 ;
  wire \$9 ;
  wire \$91 ;
  wire \$93 ;
  wire \$95 ;
  wire \$97 ;
  wire \$99 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:110" *)
  reg [1:0] \$next\buffer_count ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:109" *)
  reg [23:0] \$next\buffer_data ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:94" *)
  reg [15:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:112" *)
  reg [15:0] \$next\data_out_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:113" *)
  reg \$next\data_out_valid ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg \$next\fsm_state ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:99" *)
  reg \$next\o_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:98" *)
  reg \$next\valid_out ;
  (* init = 2'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:110" *)
  reg [1:0] buffer_count = 2'h0;
  (* init = 24'h000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:109" *)
  reg [23:0] buffer_data = 24'h000000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:90" *)
  input [31:0] data_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:91" *)
  input [2:0] data_in_ctr;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:94" *)
  output [15:0] data_out;
  reg [15:0] data_out = 16'h0000;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:112" *)
  reg [15:0] data_out_reg = 16'h0000;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:113" *)
  reg data_out_valid = 1'h0;
  (* init = 1'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg fsm_state = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:100" *)
  input i_busy;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:99" *)
  output o_busy;
  reg o_busy = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:97" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:98" *)
  output valid_out;
  reg valid_out = 1'h0;
  assign \$9  = \$5  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$7 ;
  assign \$99  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$101  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$103  = \$99  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$101 ;
  assign \$105  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$107  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:143" *) 1'h1;
  assign \$109  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:143" *) 1'h1;
  assign \$111  = \$107  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:143" *) \$109 ;
  assign \$113  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$115  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$117  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$11  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$119  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$121  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$123  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$125  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$127  = \$123  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$125 ;
  assign \$129  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$131  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$133  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$135  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$137  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$13  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$139  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$141  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$143  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$145  = \$141  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$143 ;
  assign \$147  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:142" *) 1'h1;
  assign \$149  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:142" *) 1'h1;
  assign \$151  = \$147  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:142" *) \$149 ;
  assign \$153  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$155  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$157  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$15  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$17  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$1  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$19  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$21  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$23  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$25  = \$21  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$23 ;
  assign \$27  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$29  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$31  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$33  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$35  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$37  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$3  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$39  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$41  = \$37  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$39 ;
  assign \$43  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$45  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$47  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$49  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$51  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$53  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$55  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$57  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$5  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$59  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$61  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$63  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$65  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$67  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[7:0];
  assign \$69  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) data_in[15:0];
  assign \$71  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$73  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$75  = + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ast.py:123" *) buffer_data[7:0];
  assign \$77  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$7  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$79  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  assign \$81  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h1;
  assign \$83  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) 1'h0;
  assign \$85  = \$81  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:140" *) \$83 ;
  assign \$87  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:118" *) 1'h0;
  assign \$89  = o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:146" *) 1'h0;
  assign \$91  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:150" *) 1'h0;
  assign \$93  = data_out_valid == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:151" *) 1'h0;
  assign \$95  = i_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:117" *) 1'h0;
  assign \$97  = valid_out == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:131" *) 1'h0;
  always @(posedge clk)
      data_out_reg <= \$next\data_out_reg ;
  always @(posedge clk)
      data_out_valid <= \$next\data_out_valid ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      o_busy <= \$next\o_busy ;
  always @(posedge clk)
      buffer_count <= \$next\buffer_count ;
  always @(posedge clk)
      buffer_data <= \$next\buffer_data ;
  always @(posedge clk)
      data_out <= \$next\data_out ;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @* begin
    \$next\valid_out  = valid_out;
    casez (fsm_state)
      1'h0:
          casez ({ \$9 , \$3 , \$1  })
            3'bzz1:
                casez (\$11 )
                  1'h1:
                      \$next\valid_out  = valid_in;
                  1'hz:
                      \$next\valid_out  = 1'h1;
                endcase
            3'bz1z:
                \$next\valid_out  = valid_in;
          endcase
      1'h1:
          casez (\$13 )
            1'h1:
                casez (\$15 )
                  1'h1:
                      \$next\valid_out  = 1'h1;
                  1'hz:
                      \$next\valid_out  = 1'h1;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out  = data_out;
    casez (fsm_state)
      1'h0:
          casez ({ \$25 , \$19 , \$17  })
            3'bzz1:
                casez (\$27 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\data_out  = data_in[15:0];
                                    3'h3:
                                        \$next\data_out  = data_in[23:8];
                                    3'h4:
                                        \$next\data_out  = data_in[31:16];
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\data_out  = { buffer_data[7:0], data_in[15:8] };
                                    3'h3:
                                        \$next\data_out  = { buffer_data[7:0], data_in[23:16] };
                                    3'h4:
                                        \$next\data_out  = { buffer_data[7:0], data_in[31:24] };
                                  endcase
                            endcase
                      endcase
                  1'hz:
                      \$next\data_out  = data_out_reg;
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out  = data_in[15:0];
                              3'h3:
                                  \$next\data_out  = data_in[23:8];
                              3'h4:
                                  \$next\data_out  = data_in[31:16];
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out  = { buffer_data[7:0], data_in[15:8] };
                              3'h3:
                                  \$next\data_out  = { buffer_data[7:0], data_in[23:16] };
                              3'h4:
                                  \$next\data_out  = { buffer_data[7:0], data_in[31:24] };
                            endcase
                      endcase
                endcase
          endcase
      1'h1:
          casez (\$29 )
            1'h1:
                casez (\$31 )
                  1'h1:
                      casez (buffer_count)
                        2'h2:
                            \$next\data_out  = buffer_data[15:0];
                        2'h3:
                            \$next\data_out  = buffer_data[23:8];
                      endcase
                  1'hz:
                      \$next\data_out  = data_out_reg;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\buffer_data  = buffer_data;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$41 , \$35 , \$33  })
            3'bzz1:
                casez (\$43 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\buffer_data  = \$45 ;
                                    3'h4:
                                        \$next\buffer_data  = \$47 ;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\buffer_data  = \$49 ;
                                    3'h3:
                                        \$next\buffer_data  = \$51 ;
                                    3'h4:
                                        \$next\buffer_data  = data_in[23:0];
                                  endcase
                            endcase
                      endcase
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_data  = \$53 ;
                              3'h4:
                                  \$next\buffer_data  = \$55 ;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_data  = \$57 ;
                              3'h3:
                                  \$next\buffer_data  = \$59 ;
                              3'h4:
                                  \$next\buffer_data  = data_in[23:0];
                            endcase
                      endcase
                endcase
          endcase
          casez (\$61 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_data  = \$63 ;
                              3'h4:
                                  \$next\buffer_data  = \$65 ;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_data  = \$67 ;
                              3'h3:
                                  \$next\buffer_data  = \$69 ;
                              3'h4:
                                  \$next\buffer_data  = data_in[23:0];
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$71 )
            1'h1:
                casez (\$73 )
                  1'h1:
                      casez (buffer_count)
                        2'h3:
                            \$next\buffer_data  = \$75 ;
                      endcase
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buffer_data  = 24'h000000;
    endcase
  end
  always @* begin
    \$next\buffer_count  = buffer_count;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$85 , \$79 , \$77  })
            3'bzz1:
                casez (\$87 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\buffer_count  = 2'h1;
                                    3'h4:
                                        \$next\buffer_count  = 2'h2;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h2:
                                        \$next\buffer_count  = 2'h1;
                                    3'h3:
                                        \$next\buffer_count  = 2'h2;
                                    3'h4:
                                        \$next\buffer_count  = 2'h3;
                                  endcase
                            endcase
                      endcase
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_count  = 2'h1;
                              3'h4:
                                  \$next\buffer_count  = 2'h2;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_count  = 2'h1;
                              3'h3:
                                  \$next\buffer_count  = 2'h2;
                              3'h4:
                                  \$next\buffer_count  = 2'h3;
                            endcase
                      endcase
                endcase
          endcase
          casez (\$89 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\buffer_count  = 2'h1;
                              3'h4:
                                  \$next\buffer_count  = 2'h2;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\buffer_count  = 2'h1;
                              3'h3:
                                  \$next\buffer_count  = 2'h2;
                              3'h4:
                                  \$next\buffer_count  = 2'h3;
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$91 )
            1'h1:
                casez (\$93 )
                  1'h1:
                      casez (buffer_count)
                        2'h2:
                            \$next\buffer_count  = 2'h0;
                        2'h3:
                            \$next\buffer_count  = 2'h1;
                      endcase
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buffer_count  = 2'h0;
    endcase
  end
  always @* begin
    \$next\o_busy  = o_busy;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$103 , \$97 , \$95  })
            3'bzz1:
              begin
                \$next\o_busy  = 1'h0;
                casez (\$105 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h4:
                                        \$next\o_busy  = 1'h1;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\o_busy  = 1'h1;
                                    3'h4:
                                        \$next\o_busy  = 1'h1;
                                  endcase
                            endcase
                      endcase
                endcase
              end
            3'bz1z:
              begin
                \$next\o_busy  = 1'h0;
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\o_busy  = 1'h1;
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                      endcase
                endcase
              end
            3'b1zz:
                \$next\o_busy  = \$111 ;
          endcase
          casez (\$113 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\o_busy  = 1'h1;
                              3'h4:
                                  \$next\o_busy  = 1'h1;
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$115 )
            1'h1:
                casez (\$117 )
                  1'h1:
                      \$next\o_busy  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\o_busy  = 1'h0;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      1'h0:
        begin
          casez ({ \$127 , \$121 , \$119  })
            3'bzz1:
                casez (\$129 )
                  1'h1:
                      casez (valid_in)
                        1'h1:
                            casez (buffer_count)
                              2'h0:
                                  casez (data_in_ctr)
                                    3'h4:
                                        \$next\fsm_state  = 1'h1;
                                  endcase
                              2'h1:
                                  casez (data_in_ctr)
                                    3'h3:
                                        \$next\fsm_state  = 1'h1;
                                    3'h4:
                                        \$next\fsm_state  = 1'h1;
                                  endcase
                            endcase
                      endcase
                endcase
            3'bz1z:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\fsm_state  = 1'h1;
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                      endcase
                endcase
          endcase
          casez (\$131 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h3:
                                  \$next\fsm_state  = 1'h1;
                              3'h4:
                                  \$next\fsm_state  = 1'h1;
                            endcase
                      endcase
                endcase
          endcase
        end
      1'h1:
          casez (\$133 )
            1'h1:
                casez (\$135 )
                  1'h1:
                      \$next\fsm_state  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_valid  = data_out_valid;
    casez (fsm_state)
      1'h0:
          casez ({ \$145 , \$139 , \$137  })
            3'bzz1:
                \$next\data_out_valid  = 1'h0;
            3'bz1z:
                \$next\data_out_valid  = 1'h0;
            3'b1zz:
                \$next\data_out_valid  = \$151 ;
          endcase
      1'h1:
          casez (\$153 )
            1'h1:
                casez (\$155 )
                  1'h1:
                      /* empty */;
                  1'hz:
                      \$next\data_out_valid  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_valid  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_reg  = data_out_reg;
    casez (fsm_state)
      1'h0:
          casez (\$157 )
            1'h1:
                casez (valid_in)
                  1'h1:
                      casez (buffer_count)
                        2'h0:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out_reg  = data_in[15:0];
                              3'h3:
                                  \$next\data_out_reg  = data_in[23:8];
                              3'h4:
                                  \$next\data_out_reg  = data_in[31:16];
                            endcase
                        2'h1:
                            casez (data_in_ctr)
                              3'h2:
                                  \$next\data_out_reg  = { buffer_data[7:0], data_in[15:8] };
                              3'h3:
                                  \$next\data_out_reg  = { buffer_data[7:0], data_in[23:16] };
                              3'h4:
                                  \$next\data_out_reg  = { buffer_data[7:0], data_in[31:24] };
                            endcase
                      endcase
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_reg  = 16'h0000;
    endcase
  end
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.vbits_to_cbits.input_handler" *)
(* generator = "nMigen" *)
module input_handler(enc_in, enc_in_ctr, in_end, dec_buff, rst, clk, new_buff_consum_actv, latch_input, buffer, end_out, new_buff_consum, buff_consum, valid_in);
  wire \$1 ;
  wire [114:0] \$11 ;
  wire [114:0] \$12 ;
  wire [114:0] \$14 ;
  wire \$16 ;
  wire [8:0] \$18 ;
  wire [7:0] \$19 ;
  wire [8:0] \$21 ;
  wire [7:0] \$23 ;
  wire [7:0] \$24 ;
  wire [7:0] \$26 ;
  wire [7:0] \$27 ;
  wire \$29 ;
  wire [7:0] \$3 ;
  wire \$31 ;
  wire \$5 ;
  wire [7:0] \$7 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:114" *)
  reg [6:0] \$next\buff_consum ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:113" *)
  reg [83:0] \$next\buffer ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:139" *)
  reg [4:0] \$next\enc_in_ctr_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:138" *)
  reg [23:0] \$next\enc_in_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:122" *)
  reg \$next\end_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [1:0] \$next\fsm_state ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:140" *)
  reg \$next\in_end_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:134" *)
  reg \$next\inc_buff ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:106" *)
  reg \$next\latch_input ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:115" *)
  reg [6:0] \$next\new_buff_consum ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:116" *)
  reg \$next\new_buff_consum_actv ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:145" *)
  reg \$next\normal_cond ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:141" *)
  reg \$next\valid_in_reg ;
  (* init = 7'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:114" *)
  output [6:0] buff_consum;
  reg [6:0] buff_consum = 7'h00;
  (* init = 84'h000000000000000000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:113" *)
  output [83:0] buffer;
  reg [83:0] buffer = 84'h000000000000000000000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:119" *)
  input dec_buff;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:107" *)
  input [23:0] enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:108" *)
  input [4:0] enc_in_ctr;
  (* init = 5'h00 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:139" *)
  reg [4:0] enc_in_ctr_reg = 5'h00;
  (* init = 24'h000000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:138" *)
  reg [23:0] enc_in_reg = 24'h000000;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:122" *)
  output end_out;
  reg end_out = 1'h0;
  (* init = 2'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [1:0] fsm_state = 2'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:109" *)
  input in_end;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:140" *)
  reg in_end_reg = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:134" *)
  wire inc_buff;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:106" *)
  output latch_input;
  reg latch_input = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:115" *)
  output [6:0] new_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:116" *)
  output new_buff_consum_actv;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:145" *)
  reg normal_cond = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:110" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:141" *)
  reg valid_in_reg = 1'h0;
  assign \$9  = \$7  <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:191" *) 6'h3c;
  assign \$12  = buffer <<< (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:160" *) enc_in_ctr_reg;
  assign \$14  = \$12  | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:160" *) enc_in_reg;
  assign \$16  = inc_buff & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:197" *) dec_buff;
  assign \$1  = inc_buff | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:204" *) dec_buff;
  assign \$19  = buff_consum - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:198" *) 5'h10;
  assign \$21  = \$19  + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:198" *) enc_in_ctr_reg;
  assign \$24  = buff_consum - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:200" *) 5'h10;
  assign \$27  = buff_consum + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:202" *) enc_in_ctr_reg;
  assign \$29  = inc_buff | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:204" *) dec_buff;
  assign \$31  = new_buff_consum <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:208" *) 6'h3c;
  assign \$3  = buff_consum + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:191" *) enc_in_ctr_reg;
  assign \$5  = \$3  <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:191" *) 6'h3c;
  assign \$7  = buff_consum + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:191" *) enc_in_ctr_reg;
  always @(posedge clk)
      normal_cond <= \$next\normal_cond ;
  always @(posedge clk)
      buff_consum <= \$next\buff_consum ;
  always @(posedge clk)
      end_out <= \$next\end_out ;
  always @(posedge clk)
      buffer <= \$next\buffer ;
  always @(posedge clk)
      valid_in_reg <= \$next\valid_in_reg ;
  always @(posedge clk)
      in_end_reg <= \$next\in_end_reg ;
  always @(posedge clk)
      enc_in_ctr_reg <= \$next\enc_in_ctr_reg ;
  always @(posedge clk)
      enc_in_reg <= \$next\enc_in_reg ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      latch_input <= \$next\latch_input ;
  always @* begin
    \$next\inc_buff  = 1'h0;
    \$next\inc_buff  = 1'h0;
    casez (fsm_state)
      2'h1:
          casez (valid_in_reg)
            1'h1:
                \$next\inc_buff  = 1'h1;
          endcase
    endcase
  end
  always @* begin
    \$next\new_buff_consum_actv  = 1'h0;
    \$next\new_buff_consum_actv  = 1'h0;
    casez (\$1 )
      1'h1:
          \$next\new_buff_consum_actv  = 1'h1;
    endcase
  end
  always @* begin
    \$next\new_buff_consum  = 7'h00;
    casez ({ inc_buff, dec_buff, \$16  })
      3'bzz1:
          \$next\new_buff_consum  = \$18 [6:0];
      3'bz1z:
          \$next\new_buff_consum  = \$23 [6:0];
      3'b1zz:
          \$next\new_buff_consum  = \$26 [6:0];
    endcase
  end
  always @* begin
    \$next\buff_consum  = buff_consum;
    casez (\$29 )
      1'h1:
          \$next\buff_consum  = new_buff_consum;
    endcase
    casez (rst)
      1'h1:
          \$next\buff_consum  = 7'h00;
    endcase
  end
  always @* begin
    \$next\normal_cond  = normal_cond;
    \$next\normal_cond  = \$31 ;
    casez (rst)
      1'h1:
          \$next\normal_cond  = 1'h0;
    endcase
  end
  always @* begin
    \$next\latch_input  = latch_input;
    casez (fsm_state)
      2'h0:
          casez (normal_cond)
            1'h1:
                casez ({ valid_in, valid_in_reg })
                  2'bz1:
                      \$next\latch_input  = 1'h1;
                  2'b1z:
                      \$next\latch_input  = 1'h1;
                endcase
          endcase
      2'h1:
          casez (valid_in_reg)
            1'h1:
                casez (\$5 )
                  1'h1:
                      \$next\latch_input  = 1'h1;
                  1'hz:
                      \$next\latch_input  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\latch_input  = 1'h0;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      2'h0:
          casez (normal_cond)
            1'h1:
                casez ({ valid_in, valid_in_reg })
                  2'bz1:
                      \$next\fsm_state  = 2'h1;
                  2'b1z:
                      \$next\fsm_state  = 2'h2;
                endcase
          endcase
      2'h2:
          \$next\fsm_state  = 2'h1;
      2'h1:
          casez (valid_in_reg)
            1'h1:
                casez (\$9 )
                  1'h1:
                      /* empty */;
                  1'hz:
                      \$next\fsm_state  = 2'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 2'h0;
    endcase
  end
  always @* begin
    \$next\enc_in_reg  = enc_in_reg;
    casez (fsm_state)
      2'h2:
          \$next\enc_in_reg  = enc_in;
      2'h1:
          \$next\enc_in_reg  = enc_in;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_in_reg  = 24'h000000;
    endcase
  end
  always @* begin
    \$next\enc_in_ctr_reg  = enc_in_ctr_reg;
    casez (fsm_state)
      2'h2:
          \$next\enc_in_ctr_reg  = enc_in_ctr;
      2'h1:
          \$next\enc_in_ctr_reg  = enc_in_ctr;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_in_ctr_reg  = 5'h00;
    endcase
  end
  always @* begin
    \$next\in_end_reg  = in_end_reg;
    casez (fsm_state)
      2'h2:
          \$next\in_end_reg  = in_end;
      2'h1:
          \$next\in_end_reg  = in_end;
    endcase
    casez (rst)
      1'h1:
          \$next\in_end_reg  = 1'h0;
    endcase
  end
  always @* begin
    \$next\valid_in_reg  = valid_in_reg;
    casez (fsm_state)
      2'h2:
          \$next\valid_in_reg  = valid_in;
      2'h1:
          \$next\valid_in_reg  = valid_in;
    endcase
    casez (rst)
      1'h1:
          \$next\valid_in_reg  = 1'h0;
    endcase
  end
  always @* begin
    \$next\buffer  = buffer;
    casez (fsm_state)
      2'h1:
          casez (valid_in_reg)
            1'h1:
                \$next\buffer  = \$11 [83:0];
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buffer  = 84'h000000000000000000000;
    endcase
  end
  always @* begin
    \$next\end_out  = end_out;
    casez (fsm_state)
      2'h1:
          casez (valid_in_reg)
            1'h1:
                \$next\end_out  = in_end_reg;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\end_out  = 1'h0;
    endcase
  end
  assign \$11  = \$14 ;
  assign \$18  = \$21 ;
  assign \$23  = \$24 ;
  assign \$26  = \$27 ;
  assign new_buff_consum = \$next\new_buff_consum ;
  assign new_buff_consum_actv = \$next\new_buff_consum_actv ;
  assign inc_buff = \$next\inc_buff ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1" *)
(* generator = "nMigen" *)
module integration_1(pixel_in, \pixel_in$1 , rst, clk, enc_out, enc_out_ctr, valid_out, end_of_frame, valid_in);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:21" *)
  reg [11:0] \$next\difference_pixel_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:21" *)
  reg [11:0] \$next\difference_pixel_in$5 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:22" *)
  reg [11:0] \$next\difference_predic_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:22" *)
  reg [11:0] \$next\difference_predic_in$6 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:26" *)
  reg \$next\difference_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:24" *)
  reg [55:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:25" *)
  reg [5:0] \$next\enc_out_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:106" *)
  reg [4:0] \$next\encode_ssss ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:106" *)
  reg [4:0] \$next\encode_ssss$15 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:105" *)
  reg [11:0] \$next\encode_val_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:105" *)
  reg [11:0] \$next\encode_val_in$14 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:112" *)
  reg \$next\encode_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:65" *)
  reg [27:0] \$next\merge_enc_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:65" *)
  reg [27:0] \$next\merge_enc_in$18 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:66" *)
  reg [4:0] \$next\merge_enc_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:66" *)
  reg [4:0] \$next\merge_enc_in_ctr$19 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:71" *)
  reg \$next\merge_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:122" *)
  reg [12:0] \$next\normalize_val_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:122" *)
  reg [12:0] \$next\normalize_val_in$10 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:127" *)
  reg \$next\normalize_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:123" *)
  reg [12:0] \$next\normalize_vals_in_mns ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:123" *)
  reg [12:0] \$next\normalize_vals_in_mns$11 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:24" *)
  reg [55:0] \$next\pipeline_reg_enc_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:25" *)
  reg [5:0] \$next\pipeline_reg_enc_left_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:31" *)
  reg \$next\pipeline_reg_valid_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:40" *)
  reg \$next\predictor_new_row ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:31" *)
  reg [11:0] \$next\predictor_pixel_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:31" *)
  reg [11:0] \$next\predictor_pixel_in$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:43" *)
  reg \$next\predictor_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:17" *)
  reg [15:0] \$next\signals_height ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:19" *)
  reg \$next\signals_new_input ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:18" *)
  reg [15:0] \$next\signals_width ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:29" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:21" *)
  wire [11:0] difference_pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:21" *)
  wire [11:0] \difference_pixel_in$5 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:22" *)
  wire [11:0] difference_predic_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:22" *)
  wire [11:0] \difference_predic_in$6 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:23" *)
  wire [12:0] difference_val_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:23" *)
  wire [12:0] \difference_val_out$7 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:24" *)
  wire [12:0] \difference_val_out$8 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:24" *)
  wire [12:0] \difference_val_out$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:26" *)
  wire difference_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/difference.py:27" *)
  wire difference_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:24" *)
  output [55:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:25" *)
  output [5:0] enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:110" *)
  wire [4:0] encode_enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:110" *)
  wire [4:0] \encode_enc_ctr$17 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:109" *)
  wire [27:0] encode_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:109" *)
  wire [27:0] \encode_enc_out$16 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:106" *)
  wire [4:0] encode_ssss;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:106" *)
  wire [4:0] \encode_ssss$15 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:105" *)
  wire [11:0] encode_val_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:105" *)
  wire [11:0] \encode_val_in$14 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:112" *)
  wire encode_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/encode.py:113" *)
  wire encode_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:21" *)
  output end_of_frame;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:65" *)
  wire [27:0] merge_enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:65" *)
  wire [27:0] \merge_enc_in$18 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:66" *)
  wire [4:0] merge_enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:66" *)
  wire [4:0] \merge_enc_in_ctr$19 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:68" *)
  wire [55:0] merge_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:69" *)
  wire [5:0] merge_enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:71" *)
  wire merge_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:72" *)
  wire merge_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:125" *)
  wire [4:0] normalize_ssss;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:125" *)
  wire [4:0] \normalize_ssss$12 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:122" *)
  wire [12:0] normalize_val_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:122" *)
  wire [12:0] \normalize_val_in$10 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:124" *)
  wire [11:0] normalize_val_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:124" *)
  wire [11:0] \normalize_val_out$13 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:127" *)
  wire normalize_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:128" *)
  wire normalize_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:123" *)
  wire [12:0] normalize_vals_in_mns;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:123" *)
  wire [12:0] \normalize_vals_in_mns$11 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:24" *)
  wire [55:0] pipeline_reg_enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:25" *)
  wire [5:0] pipeline_reg_enc_left_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:28" *)
  wire [55:0] pipeline_reg_enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:29" *)
  wire [5:0] pipeline_reg_enc_right_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:31" *)
  wire pipeline_reg_valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:32" *)
  wire pipeline_reg_valid_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:21" *)
  input [11:0] pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:21" *)
  input [11:0] \pixel_in$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:40" *)
  wire predictor_new_row;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:31" *)
  wire [11:0] predictor_pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:31" *)
  wire [11:0] \predictor_pixel_in$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:34" *)
  wire [11:0] predictor_pixel_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:34" *)
  wire [11:0] \predictor_pixel_out$3 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:37" *)
  wire [11:0] predictor_predic_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:37" *)
  wire [11:0] \predictor_predic_out$4 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:43" *)
  wire predictor_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:44" *)
  wire predictor_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:10" *)
  wire [15:0] register_file_height;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:11" *)
  wire [15:0] register_file_width;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:17" *)
  wire [15:0] signals_height;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:19" *)
  wire signals_new_input;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:22" *)
  wire signals_new_row;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:18" *)
  wire [15:0] signals_width;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:28" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:29" *)
  output valid_out;
  difference difference (
    .clk(clk),
    .pixel_in(difference_pixel_in),
    .\pixel_in$1 (\difference_pixel_in$5 ),
    .predic_in(difference_predic_in),
    .\predic_in$2 (\difference_predic_in$6 ),
    .rst(rst),
    .val_out(difference_val_out),
    .\val_out$3 (\difference_val_out$7 ),
    .\val_out$4 (\difference_val_out$8 ),
    .\val_out$5 (\difference_val_out$9 ),
    .valid_in(difference_valid_in),
    .valid_out(difference_valid_out)
  );
  encode encode (
    .clk(clk),
    .enc_ctr(encode_enc_ctr),
    .\enc_ctr$4 (\encode_enc_ctr$17 ),
    .enc_out(encode_enc_out),
    .\enc_out$3 (\encode_enc_out$16 ),
    .rst(rst),
    .ssss(encode_ssss),
    .\ssss$2 (\encode_ssss$15 ),
    .val_in(encode_val_in),
    .\val_in$1 (\encode_val_in$14 ),
    .valid_in(encode_valid_in),
    .valid_out(encode_valid_out)
  );
  merge merge (
    .clk(clk),
    .enc_in(merge_enc_in),
    .\enc_in$1 (\merge_enc_in$18 ),
    .enc_in_ctr(merge_enc_in_ctr),
    .\enc_in_ctr$2 (\merge_enc_in_ctr$19 ),
    .enc_out(merge_enc_out),
    .enc_out_ctr(merge_enc_out_ctr),
    .rst(rst),
    .valid_in(merge_valid_in),
    .valid_out(merge_valid_out)
  );
  normalize normalize (
    .clk(clk),
    .rst(rst),
    .ssss(normalize_ssss),
    .\ssss$3 (\normalize_ssss$12 ),
    .val_in(normalize_val_in),
    .\val_in$1 (\normalize_val_in$10 ),
    .val_out(normalize_val_out),
    .\val_out$4 (\normalize_val_out$13 ),
    .valid_in(normalize_valid_in),
    .valid_out(normalize_valid_out),
    .vals_in_mns(normalize_vals_in_mns),
    .\vals_in_mns$2 (\normalize_vals_in_mns$11 )
  );
  pipeline_reg pipeline_reg (
    .enc_left(pipeline_reg_enc_left),
    .enc_left_ctr(pipeline_reg_enc_left_ctr),
    .enc_right(pipeline_reg_enc_right),
    .enc_right_ctr(pipeline_reg_enc_right_ctr),
    .valid_left(pipeline_reg_valid_left),
    .valid_right(pipeline_reg_valid_right)
  );
  predictor predictor (
    .clk(clk),
    .new_row(predictor_new_row),
    .pixel_in(predictor_pixel_in),
    .\pixel_in$1 (\predictor_pixel_in$2 ),
    .pixel_out(predictor_pixel_out),
    .\pixel_out$2 (\predictor_pixel_out$3 ),
    .predic_out(predictor_predic_out),
    .\predic_out$3 (\predictor_predic_out$4 ),
    .rst(rst),
    .valid_in(predictor_valid_in),
    .valid_out(predictor_valid_out)
  );
  register_file register_file (
    .clk(clk),
    .height(register_file_height),
    .rst(rst),
    .width(register_file_width)
  );
  signals signals (
    .clk(clk),
    .end_of_frame(end_of_frame),
    .height(signals_height),
    .new_input(signals_new_input),
    .new_row(signals_new_row),
    .rst(rst),
    .width(signals_width)
  );
  always @* begin
    \$next\signals_height  = 16'h0000;
    \$next\signals_height  = register_file_height;
  end
  always @* begin
    \$next\signals_width  = 16'h0000;
    \$next\signals_width  = register_file_width;
  end
  always @* begin
    \$next\difference_predic_in$6  = 12'h000;
    \$next\difference_predic_in$6  = \predictor_predic_out$4 ;
  end
  always @* begin
    \$next\difference_valid_in  = 1'h0;
    \$next\difference_valid_in  = predictor_valid_out;
  end
  always @* begin
    \$next\normalize_val_in  = 13'h0000;
    \$next\normalize_val_in  = difference_val_out;
  end
  always @* begin
    \$next\normalize_val_in$10  = 13'h0000;
    \$next\normalize_val_in$10  = \difference_val_out$7 ;
  end
  always @* begin
    \$next\normalize_vals_in_mns  = 13'h0000;
    \$next\normalize_vals_in_mns  = \difference_val_out$8 ;
  end
  always @* begin
    \$next\normalize_vals_in_mns$11  = 13'h0000;
    \$next\normalize_vals_in_mns$11  = \difference_val_out$9 ;
  end
  always @* begin
    \$next\normalize_valid_in  = 1'h0;
    \$next\normalize_valid_in  = difference_valid_out;
  end
  always @* begin
    \$next\encode_val_in  = 12'h000;
    \$next\encode_val_in  = normalize_val_out;
  end
  always @* begin
    \$next\encode_val_in$14  = 12'h000;
    \$next\encode_val_in$14  = \normalize_val_out$13 ;
  end
  always @* begin
    \$next\encode_ssss  = 5'h00;
    \$next\encode_ssss  = normalize_ssss;
  end
  always @* begin
    \$next\signals_new_input  = 1'h0;
    \$next\signals_new_input  = valid_in;
  end
  always @* begin
    \$next\encode_ssss$15  = 5'h00;
    \$next\encode_ssss$15  = \normalize_ssss$12 ;
  end
  always @* begin
    \$next\encode_valid_in  = 1'h0;
    \$next\encode_valid_in  = normalize_valid_out;
  end
  always @* begin
    \$next\merge_enc_in  = 28'h0000000;
    \$next\merge_enc_in  = encode_enc_out;
  end
  always @* begin
    \$next\merge_enc_in$18  = 28'h0000000;
    \$next\merge_enc_in$18  = \encode_enc_out$16 ;
  end
  always @* begin
    \$next\merge_enc_in_ctr  = 5'h00;
    \$next\merge_enc_in_ctr  = encode_enc_ctr;
  end
  always @* begin
    \$next\merge_enc_in_ctr$19  = 5'h00;
    \$next\merge_enc_in_ctr$19  = \encode_enc_ctr$17 ;
  end
  always @* begin
    \$next\merge_valid_in  = 1'h0;
    \$next\merge_valid_in  = encode_valid_out;
  end
  always @* begin
    \$next\pipeline_reg_enc_left  = 56'h00000000000000;
    \$next\pipeline_reg_enc_left  = merge_enc_out;
  end
  always @* begin
    \$next\pipeline_reg_enc_left_ctr  = 6'h00;
    \$next\pipeline_reg_enc_left_ctr  = merge_enc_out_ctr;
  end
  always @* begin
    \$next\pipeline_reg_valid_left  = 1'h0;
    \$next\pipeline_reg_valid_left  = merge_valid_out;
  end
  always @* begin
    \$next\predictor_pixel_in  = 12'h000;
    \$next\predictor_pixel_in  = pixel_in;
  end
  always @* begin
    \$next\enc_out  = 56'h00000000000000;
    \$next\enc_out  = pipeline_reg_enc_right;
  end
  always @* begin
    \$next\enc_out_ctr  = 6'h00;
    \$next\enc_out_ctr  = pipeline_reg_enc_right_ctr;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = pipeline_reg_valid_right;
  end
  always @* begin
    \$next\predictor_pixel_in$2  = 12'h000;
    \$next\predictor_pixel_in$2  = \pixel_in$1 ;
  end
  always @* begin
    \$next\predictor_new_row  = 1'h0;
    \$next\predictor_new_row  = signals_new_row;
  end
  always @* begin
    \$next\predictor_valid_in  = 1'h0;
    \$next\predictor_valid_in  = valid_in;
  end
  always @* begin
    \$next\difference_pixel_in  = 12'h000;
    \$next\difference_pixel_in  = predictor_pixel_out;
  end
  always @* begin
    \$next\difference_pixel_in$5  = 12'h000;
    \$next\difference_pixel_in$5  = \predictor_pixel_out$3 ;
  end
  always @* begin
    \$next\difference_predic_in  = 12'h000;
    \$next\difference_predic_in  = predictor_predic_out;
  end
  assign valid_out = \$next\valid_out ;
  assign enc_out_ctr = \$next\enc_out_ctr ;
  assign enc_out = \$next\enc_out ;
  assign pipeline_reg_valid_left = \$next\pipeline_reg_valid_left ;
  assign pipeline_reg_enc_left_ctr = \$next\pipeline_reg_enc_left_ctr ;
  assign pipeline_reg_enc_left = \$next\pipeline_reg_enc_left ;
  assign merge_valid_in = \$next\merge_valid_in ;
  assign \merge_enc_in_ctr$19  = \$next\merge_enc_in_ctr$19 ;
  assign merge_enc_in_ctr = \$next\merge_enc_in_ctr ;
  assign \merge_enc_in$18  = \$next\merge_enc_in$18 ;
  assign merge_enc_in = \$next\merge_enc_in ;
  assign encode_valid_in = \$next\encode_valid_in ;
  assign \encode_ssss$15  = \$next\encode_ssss$15 ;
  assign encode_ssss = \$next\encode_ssss ;
  assign \encode_val_in$14  = \$next\encode_val_in$14 ;
  assign encode_val_in = \$next\encode_val_in ;
  assign normalize_valid_in = \$next\normalize_valid_in ;
  assign \normalize_vals_in_mns$11  = \$next\normalize_vals_in_mns$11 ;
  assign normalize_vals_in_mns = \$next\normalize_vals_in_mns ;
  assign \normalize_val_in$10  = \$next\normalize_val_in$10 ;
  assign normalize_val_in = \$next\normalize_val_in ;
  assign difference_valid_in = \$next\difference_valid_in ;
  assign \difference_predic_in$6  = \$next\difference_predic_in$6 ;
  assign difference_predic_in = \$next\difference_predic_in ;
  assign \difference_pixel_in$5  = \$next\difference_pixel_in$5 ;
  assign difference_pixel_in = \$next\difference_pixel_in ;
  assign predictor_valid_in = \$next\predictor_valid_in ;
  assign predictor_new_row = \$next\predictor_new_row ;
  assign \predictor_pixel_in$2  = \$next\predictor_pixel_in$2 ;
  assign predictor_pixel_in = \$next\predictor_pixel_in ;
  assign signals_new_input = \$next\signals_new_input ;
  assign signals_width = \$next\signals_width ;
  assign signals_height = \$next\signals_height ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2" *)
(* generator = "nMigen" *)
module integration_2(\pixel_in$1 , valid_in, latch_output, rst, clk, nready, enc_out, enc_out_ctr, valid_out, out_end, pixel_in);
  wire \$11 ;
  wire \$13 ;
  wire [55:0] \$15 ;
  wire [5:0] \$17 ;
  wire \$19 ;
  wire \$3 ;
  wire \$5 ;
  wire \$7 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:36" *)
  reg \$next\converter_close_full ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:26" *)
  reg [55:0] \$next\converter_enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:27" *)
  reg [5:0] \$next\converter_enc_out_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:28" *)
  reg [23:0] \$next\converter_fifo_enc_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:29" *)
  reg [4:0] \$next\converter_fifo_enc_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:30" *)
  reg \$next\converter_fifo_in_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:36" *)
  reg \$next\converter_fifo_latch_output ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:23" *)
  reg [4:0] \$next\converter_fifo_reg_enc_ctr_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:22" *)
  reg [23:0] \$next\converter_fifo_reg_enc_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:28" *)
  reg \$next\converter_fifo_reg_i_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:24" *)
  reg \$next\converter_fifo_reg_out_end_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:25" *)
  reg \$next\converter_fifo_reg_valid_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:31" *)
  reg \$next\converter_fifo_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:28" *)
  reg \$next\converter_out_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:19" *)
  reg [23:0] \$next\converter_reg_left_enc ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:20" *)
  reg [4:0] \$next\converter_reg_left_enc_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:21" *)
  reg \$next\converter_reg_left_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:22" *)
  reg \$next\converter_reg_left_valid ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:30" *)
  reg \$next\converter_reg_right_close_full ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:29" *)
  reg \$next\converter_valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:24" *)
  reg [55:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:25" *)
  reg [5:0] \$next\enc_out_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:10" *)
  reg \$next\end_delayer_in_sig ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:21" *)
  reg [11:0] \$next\integration_1_pixel_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:21" *)
  reg [11:0] \$next\integration_1_pixel_in$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:28" *)
  reg \$next\integration_1_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:26" *)
  reg [55:0] \$next\lj92_pipeline_fifo_enc_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:27" *)
  reg [5:0] \$next\lj92_pipeline_fifo_enc_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:28" *)
  reg \$next\lj92_pipeline_fifo_in_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:31" *)
  reg \$next\lj92_pipeline_fifo_latch_output ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:29" *)
  reg \$next\lj92_pipeline_fifo_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:29" *)
  reg \$next\nready ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:32" *)
  reg \$next\out_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:23" *)
  reg [5:0] \$next\pipeline_fifo_reg_enc_ctr_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:22" *)
  reg [55:0] \$next\pipeline_fifo_reg_enc_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:28" *)
  reg \$next\pipeline_fifo_reg_i_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:24" *)
  reg \$next\pipeline_fifo_reg_out_end_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:25" *)
  reg \$next\pipeline_fifo_reg_valid_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:31" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:36" *)
  wire converter_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:32" *)
  wire [23:0] converter_enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:33" *)
  wire [4:0] converter_enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:26" *)
  wire [55:0] converter_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:27" *)
  wire [5:0] converter_enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:33" *)
  wire converter_fifo_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:28" *)
  wire [23:0] converter_fifo_enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:29" *)
  wire [4:0] converter_fifo_enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:37" *)
  wire [23:0] converter_fifo_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:38" *)
  wire [4:0] converter_fifo_enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:30" *)
  wire converter_fifo_in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:36" *)
  wire converter_fifo_latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:39" *)
  wire converter_fifo_out_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:23" *)
  wire [4:0] converter_fifo_reg_enc_ctr_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:30" *)
  wire [4:0] converter_fifo_reg_enc_ctr_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:22" *)
  wire [23:0] converter_fifo_reg_enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:29" *)
  wire [23:0] converter_fifo_reg_enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:28" *)
  wire converter_fifo_reg_i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:21" *)
  wire converter_fifo_reg_o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:24" *)
  wire converter_fifo_reg_out_end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:31" *)
  wire converter_fifo_reg_out_end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:25" *)
  wire converter_fifo_reg_valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:32" *)
  wire converter_fifo_reg_valid_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:31" *)
  wire converter_fifo_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo.py:40" *)
  wire converter_fifo_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:34" *)
  wire converter_in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:25" *)
  wire converter_latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:28" *)
  wire converter_out_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:23" *)
  wire converter_reg_left_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:19" *)
  wire [23:0] converter_reg_left_enc;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:20" *)
  wire [4:0] converter_reg_left_enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:21" *)
  wire converter_reg_left_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:22" *)
  wire converter_reg_left_valid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:30" *)
  wire converter_reg_right_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:26" *)
  wire [23:0] converter_reg_right_enc;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:27" *)
  wire [4:0] converter_reg_right_enc_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:28" *)
  wire converter_reg_right_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_reg.py:29" *)
  wire converter_reg_right_valid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:35" *)
  wire converter_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter.py:29" *)
  wire converter_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:24" *)
  output [55:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:25" *)
  output [5:0] enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:10" *)
  wire end_delayer_in_sig;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/delayer.py:11" *)
  wire end_delayer_out_sig;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:24" *)
  wire [55:0] integration_1_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:25" *)
  wire [5:0] integration_1_enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:21" *)
  wire integration_1_end_of_frame;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:21" *)
  wire [11:0] integration_1_pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:21" *)
  wire [11:0] \integration_1_pixel_in$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:28" *)
  wire integration_1_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_1.py:29" *)
  wire integration_1_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:26" *)
  input latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:39" *)
  wire lj92_pipeline_fifo_close_full;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:26" *)
  wire [55:0] lj92_pipeline_fifo_enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:27" *)
  wire [5:0] lj92_pipeline_fifo_enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:32" *)
  wire [55:0] lj92_pipeline_fifo_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:33" *)
  wire [5:0] lj92_pipeline_fifo_enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:28" *)
  wire lj92_pipeline_fifo_in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:31" *)
  wire lj92_pipeline_fifo_latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:34" *)
  wire lj92_pipeline_fifo_out_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:29" *)
  wire lj92_pipeline_fifo_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:35" *)
  wire lj92_pipeline_fifo_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:29" *)
  output nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:32" *)
  output out_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:23" *)
  wire [5:0] pipeline_fifo_reg_enc_ctr_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:30" *)
  wire [5:0] pipeline_fifo_reg_enc_ctr_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:22" *)
  wire [55:0] pipeline_fifo_reg_enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:29" *)
  wire [55:0] pipeline_fifo_reg_enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:28" *)
  wire pipeline_fifo_reg_i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:21" *)
  wire pipeline_fifo_reg_o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:24" *)
  wire pipeline_fifo_reg_out_end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:31" *)
  wire pipeline_fifo_reg_out_end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:25" *)
  wire pipeline_fifo_reg_valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:32" *)
  wire pipeline_fifo_reg_valid_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:22" *)
  input [11:0] pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:22" *)
  input [11:0] \pixel_in$1 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:30" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:31" *)
  output valid_out;
  assign \$9  = pipeline_fifo_reg_o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:84" *) 1'h0;
  assign \$11  = converter_latch_output == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:93" *) 1'h0;
  assign \$13  = converter_fifo_reg_o_busy == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:124" *) 1'h0;
  assign \$15  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:29" *) converter_fifo_reg_enc_right;
  assign \$17  = + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/converter_fifo_reg.py:30" *) converter_fifo_reg_enc_ctr_right;
  assign \$19  = latch_output == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:133" *) 1'h0;
  assign \$3  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:65" *) 1'h1;
  assign \$5  = lj92_pipeline_fifo_close_full == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:65" *) 1'h0;
  assign \$7  = \$3  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:65" *) \$5 ;
  converter converter (
    .clk(clk),
    .close_full(converter_close_full),
    .enc_in(converter_enc_in),
    .enc_in_ctr(converter_enc_in_ctr),
    .enc_out(converter_enc_out),
    .enc_out_ctr(converter_enc_out_ctr),
    .in_end(converter_in_end),
    .latch_output(converter_latch_output),
    .out_end(converter_out_end),
    .rst(rst),
    .valid_in(converter_valid_in),
    .valid_out(converter_valid_out)
  );
  converter_fifo converter_fifo (
    .clk(clk),
    .close_full(converter_fifo_close_full),
    .enc_in(converter_fifo_enc_in),
    .enc_in_ctr(converter_fifo_enc_in_ctr),
    .enc_out(converter_fifo_enc_out),
    .enc_out_ctr(converter_fifo_enc_out_ctr),
    .in_end(converter_fifo_in_end),
    .latch_output(converter_fifo_latch_output),
    .out_end(converter_fifo_out_end),
    .rst(rst),
    .valid_in(converter_fifo_valid_in),
    .valid_out(converter_fifo_valid_out)
  );
  converter_fifo_reg converter_fifo_reg (
    .enc_ctr_left(converter_fifo_reg_enc_ctr_left),
    .enc_ctr_right(converter_fifo_reg_enc_ctr_right),
    .enc_left(converter_fifo_reg_enc_left),
    .enc_right(converter_fifo_reg_enc_right),
    .i_busy(converter_fifo_reg_i_busy),
    .o_busy(converter_fifo_reg_o_busy),
    .out_end_left(converter_fifo_reg_out_end_left),
    .out_end_right(converter_fifo_reg_out_end_right),
    .valid_left(converter_fifo_reg_valid_left),
    .valid_right(converter_fifo_reg_valid_right)
  );
  converter_reg converter_reg (
    .left_close_full(converter_reg_left_close_full),
    .left_enc(converter_reg_left_enc),
    .left_enc_ctr(converter_reg_left_enc_ctr),
    .left_end(converter_reg_left_end),
    .left_valid(converter_reg_left_valid),
    .right_close_full(converter_reg_right_close_full),
    .right_enc(converter_reg_right_enc),
    .right_enc_ctr(converter_reg_right_enc_ctr),
    .right_end(converter_reg_right_end),
    .right_valid(converter_reg_right_valid)
  );
  end_delayer end_delayer (
    .clk(clk),
    .in_sig(end_delayer_in_sig),
    .out_sig(end_delayer_out_sig),
    .rst(rst)
  );
  integration_1 integration_1 (
    .clk(clk),
    .enc_out(integration_1_enc_out),
    .enc_out_ctr(integration_1_enc_out_ctr),
    .end_of_frame(integration_1_end_of_frame),
    .pixel_in(integration_1_pixel_in),
    .\pixel_in$1 (\integration_1_pixel_in$2 ),
    .rst(rst),
    .valid_in(integration_1_valid_in),
    .valid_out(integration_1_valid_out)
  );
  lj92_pipeline_fifo lj92_pipeline_fifo (
    .clk(clk),
    .close_full(lj92_pipeline_fifo_close_full),
    .enc_in(lj92_pipeline_fifo_enc_in),
    .enc_in_ctr(lj92_pipeline_fifo_enc_in_ctr),
    .enc_out(lj92_pipeline_fifo_enc_out),
    .enc_out_ctr(lj92_pipeline_fifo_enc_out_ctr),
    .in_end(lj92_pipeline_fifo_in_end),
    .latch_output(lj92_pipeline_fifo_latch_output),
    .out_end(lj92_pipeline_fifo_out_end),
    .rst(rst),
    .valid_in(lj92_pipeline_fifo_valid_in),
    .valid_out(lj92_pipeline_fifo_valid_out)
  );
  pipeline_fifo_reg pipeline_fifo_reg (
    .enc_ctr_left(pipeline_fifo_reg_enc_ctr_left),
    .enc_ctr_right(pipeline_fifo_reg_enc_ctr_right),
    .enc_left(pipeline_fifo_reg_enc_left),
    .enc_right(pipeline_fifo_reg_enc_right),
    .i_busy(pipeline_fifo_reg_i_busy),
    .o_busy(pipeline_fifo_reg_o_busy),
    .out_end_left(pipeline_fifo_reg_out_end_left),
    .out_end_right(pipeline_fifo_reg_out_end_right),
    .valid_left(pipeline_fifo_reg_valid_left),
    .valid_right(pipeline_fifo_reg_valid_right)
  );
  always @* begin
    \$next\integration_1_pixel_in  = 12'h000;
    \$next\integration_1_pixel_in  = pixel_in;
  end
  always @* begin
    \$next\integration_1_pixel_in$2  = 12'h000;
    \$next\integration_1_pixel_in$2  = \pixel_in$1 ;
  end
  always @* begin
    \$next\pipeline_fifo_reg_enc_left  = 56'h00000000000000;
    \$next\pipeline_fifo_reg_enc_left  = lj92_pipeline_fifo_enc_out;
  end
  always @* begin
    \$next\pipeline_fifo_reg_enc_ctr_left  = 6'h00;
    \$next\pipeline_fifo_reg_enc_ctr_left  = lj92_pipeline_fifo_enc_out_ctr;
  end
  always @* begin
    \$next\pipeline_fifo_reg_out_end_left  = 1'h0;
    \$next\pipeline_fifo_reg_out_end_left  = lj92_pipeline_fifo_out_end;
  end
  always @* begin
    \$next\pipeline_fifo_reg_valid_left  = 1'h0;
    \$next\pipeline_fifo_reg_valid_left  = lj92_pipeline_fifo_valid_out;
  end
  always @* begin
    \$next\pipeline_fifo_reg_i_busy  = 1'h0;
    \$next\pipeline_fifo_reg_i_busy  = \$11 ;
  end
  always @* begin
    \$next\converter_enc_out  = 56'h00000000000000;
    \$next\converter_enc_out  = pipeline_fifo_reg_enc_right;
  end
  always @* begin
    \$next\converter_enc_out_ctr  = 6'h00;
    \$next\converter_enc_out_ctr  = pipeline_fifo_reg_enc_ctr_right;
  end
  always @* begin
    \$next\converter_out_end  = 1'h0;
    \$next\converter_out_end  = pipeline_fifo_reg_out_end_right;
  end
  always @* begin
    \$next\converter_valid_out  = 1'h0;
    \$next\converter_valid_out  = pipeline_fifo_reg_valid_right;
  end
  always @* begin
    \$next\converter_reg_left_enc  = 24'h000000;
    \$next\converter_reg_left_enc  = converter_enc_in;
  end
  always @* begin
    \$next\integration_1_valid_in  = 1'h0;
    \$next\integration_1_valid_in  = \$7 ;
  end
  always @* begin
    \$next\converter_reg_left_enc_ctr  = 5'h00;
    \$next\converter_reg_left_enc_ctr  = converter_enc_in_ctr;
  end
  always @* begin
    \$next\converter_reg_left_end  = 1'h0;
    \$next\converter_reg_left_end  = converter_in_end;
  end
  always @* begin
    \$next\converter_reg_left_valid  = 1'h0;
    \$next\converter_reg_left_valid  = converter_valid_in;
  end
  always @* begin
    \$next\converter_close_full  = 1'h0;
    \$next\converter_close_full  = converter_reg_left_close_full;
  end
  always @* begin
    \$next\converter_fifo_enc_in  = 24'h000000;
    \$next\converter_fifo_enc_in  = converter_reg_right_enc;
  end
  always @* begin
    \$next\converter_fifo_enc_in_ctr  = 5'h00;
    \$next\converter_fifo_enc_in_ctr  = converter_reg_right_enc_ctr;
  end
  always @* begin
    \$next\converter_fifo_in_end  = 1'h0;
    \$next\converter_fifo_in_end  = converter_reg_right_end;
  end
  always @* begin
    \$next\converter_fifo_valid_in  = 1'h0;
    \$next\converter_fifo_valid_in  = converter_reg_right_valid;
  end
  always @* begin
    \$next\converter_reg_right_close_full  = 1'h0;
    \$next\converter_reg_right_close_full  = converter_fifo_close_full;
  end
  always @* begin
    \$next\converter_fifo_reg_enc_left  = 24'h000000;
    \$next\converter_fifo_reg_enc_left  = converter_fifo_enc_out;
  end
  always @* begin
    \$next\end_delayer_in_sig  = 1'h0;
    \$next\end_delayer_in_sig  = integration_1_end_of_frame;
  end
  always @* begin
    \$next\converter_fifo_reg_enc_ctr_left  = 5'h00;
    \$next\converter_fifo_reg_enc_ctr_left  = converter_fifo_enc_out_ctr;
  end
  always @* begin
    \$next\converter_fifo_reg_valid_left  = 1'h0;
    \$next\converter_fifo_reg_valid_left  = converter_fifo_valid_out;
  end
  always @* begin
    \$next\converter_fifo_reg_out_end_left  = 1'h0;
    \$next\converter_fifo_reg_out_end_left  = converter_fifo_out_end;
  end
  always @* begin
    \$next\converter_fifo_latch_output  = 1'h0;
    \$next\converter_fifo_latch_output  = \$13 ;
  end
  always @* begin
    \$next\enc_out  = 56'h00000000000000;
    \$next\enc_out  = \$15 ;
  end
  always @* begin
    \$next\enc_out_ctr  = 6'h00;
    \$next\enc_out_ctr  = \$17 ;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = converter_fifo_reg_valid_right;
  end
  always @* begin
    \$next\out_end  = 1'h0;
    \$next\out_end  = converter_fifo_reg_out_end_right;
  end
  always @* begin
    \$next\converter_fifo_reg_i_busy  = 1'h0;
    \$next\converter_fifo_reg_i_busy  = \$19 ;
  end
  always @* begin
    \$next\lj92_pipeline_fifo_in_end  = 1'h0;
    \$next\lj92_pipeline_fifo_in_end  = end_delayer_out_sig;
  end
  always @* begin
    \$next\lj92_pipeline_fifo_enc_in  = 56'h00000000000000;
    \$next\lj92_pipeline_fifo_enc_in  = integration_1_enc_out;
  end
  always @* begin
    \$next\lj92_pipeline_fifo_enc_in_ctr  = 6'h00;
    \$next\lj92_pipeline_fifo_enc_in_ctr  = integration_1_enc_out_ctr;
  end
  always @* begin
    \$next\lj92_pipeline_fifo_valid_in  = 1'h0;
    \$next\lj92_pipeline_fifo_valid_in  = integration_1_valid_out;
  end
  always @* begin
    \$next\nready  = 1'h0;
    \$next\nready  = lj92_pipeline_fifo_close_full;
  end
  always @* begin
    \$next\lj92_pipeline_fifo_latch_output  = 1'h0;
    \$next\lj92_pipeline_fifo_latch_output  = \$9 ;
  end
  assign converter_fifo_reg_i_busy = \$next\converter_fifo_reg_i_busy ;
  assign out_end = \$next\out_end ;
  assign valid_out = \$next\valid_out ;
  assign enc_out_ctr = \$next\enc_out_ctr ;
  assign enc_out = \$next\enc_out ;
  assign converter_fifo_latch_output = \$next\converter_fifo_latch_output ;
  assign converter_fifo_reg_out_end_left = \$next\converter_fifo_reg_out_end_left ;
  assign converter_fifo_reg_valid_left = \$next\converter_fifo_reg_valid_left ;
  assign converter_fifo_reg_enc_ctr_left = \$next\converter_fifo_reg_enc_ctr_left ;
  assign converter_fifo_reg_enc_left = \$next\converter_fifo_reg_enc_left ;
  assign converter_reg_right_close_full = \$next\converter_reg_right_close_full ;
  assign converter_fifo_valid_in = \$next\converter_fifo_valid_in ;
  assign converter_fifo_in_end = \$next\converter_fifo_in_end ;
  assign converter_fifo_enc_in_ctr = \$next\converter_fifo_enc_in_ctr ;
  assign converter_fifo_enc_in = \$next\converter_fifo_enc_in ;
  assign converter_close_full = \$next\converter_close_full ;
  assign converter_reg_left_valid = \$next\converter_reg_left_valid ;
  assign converter_reg_left_end = \$next\converter_reg_left_end ;
  assign converter_reg_left_enc_ctr = \$next\converter_reg_left_enc_ctr ;
  assign converter_reg_left_enc = \$next\converter_reg_left_enc ;
  assign converter_valid_out = \$next\converter_valid_out ;
  assign converter_out_end = \$next\converter_out_end ;
  assign converter_enc_out_ctr = \$next\converter_enc_out_ctr ;
  assign converter_enc_out = \$next\converter_enc_out ;
  assign pipeline_fifo_reg_i_busy = \$next\pipeline_fifo_reg_i_busy ;
  assign pipeline_fifo_reg_valid_left = \$next\pipeline_fifo_reg_valid_left ;
  assign pipeline_fifo_reg_out_end_left = \$next\pipeline_fifo_reg_out_end_left ;
  assign pipeline_fifo_reg_enc_ctr_left = \$next\pipeline_fifo_reg_enc_ctr_left ;
  assign pipeline_fifo_reg_enc_left = \$next\pipeline_fifo_reg_enc_left ;
  assign lj92_pipeline_fifo_latch_output = \$next\lj92_pipeline_fifo_latch_output ;
  assign nready = \$next\nready ;
  assign lj92_pipeline_fifo_valid_in = \$next\lj92_pipeline_fifo_valid_in ;
  assign lj92_pipeline_fifo_enc_in_ctr = \$next\lj92_pipeline_fifo_enc_in_ctr ;
  assign lj92_pipeline_fifo_enc_in = \$next\lj92_pipeline_fifo_enc_in ;
  assign lj92_pipeline_fifo_in_end = \$next\lj92_pipeline_fifo_in_end ;
  assign end_delayer_in_sig = \$next\end_delayer_in_sig ;
  assign integration_1_valid_in = \$next\integration_1_valid_in ;
  assign \integration_1_pixel_in$2  = \$next\integration_1_pixel_in$2 ;
  assign integration_1_pixel_in = \$next\integration_1_pixel_in ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3" *)
(* generator = "nMigen" *)
module integration_3(\pixel_in$1 , valid_in, busy_in, rst, clk, data_out, valid_out, end_out, nready, pixel_in);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:25" *)
  reg [15:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:30" *)
  reg \$next\end_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:26" *)
  reg \$next\integration_2_latch_output ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:22" *)
  reg [11:0] \$next\integration_2_pixel_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:22" *)
  reg [11:0] \$next\integration_2_pixel_in$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:30" *)
  reg \$next\integration_2_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:31" *)
  reg \$next\nready ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:29" *)
  reg \$next\valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:236" *)
  reg \$next\vbits_to_cbits_busy_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:228" *)
  reg [23:0] \$next\vbits_to_cbits_enc_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:229" *)
  reg [4:0] \$next\vbits_to_cbits_enc_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:230" *)
  reg \$next\vbits_to_cbits_in_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:20" *)
  reg [15:0] \$next\vbits_to_cbits_reg_data_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:22" *)
  reg \$next\vbits_to_cbits_reg_end_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:25" *)
  reg \$next\vbits_to_cbits_reg_i_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:21" *)
  reg \$next\vbits_to_cbits_reg_valid_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:231" *)
  reg \$next\vbits_to_cbits_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:32" *)
  input busy_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:25" *)
  output [15:0] data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:30" *)
  output end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:24" *)
  wire [55:0] integration_2_enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:25" *)
  wire [5:0] integration_2_enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:26" *)
  wire integration_2_latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:29" *)
  wire integration_2_nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:32" *)
  wire integration_2_out_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:22" *)
  wire [11:0] integration_2_pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:22" *)
  wire [11:0] \integration_2_pixel_in$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:30" *)
  wire integration_2_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_2.py:31" *)
  wire integration_2_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:31" *)
  output nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:22" *)
  input [11:0] pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:22" *)
  input [11:0] \pixel_in$1 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:28" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:29" *)
  output valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:236" *)
  wire vbits_to_cbits_busy_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:233" *)
  wire [15:0] vbits_to_cbits_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:228" *)
  wire [23:0] vbits_to_cbits_enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:229" *)
  wire [4:0] vbits_to_cbits_enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:235" *)
  wire vbits_to_cbits_end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:230" *)
  wire vbits_to_cbits_in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:227" *)
  wire vbits_to_cbits_latch_input;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:20" *)
  wire [15:0] vbits_to_cbits_reg_data_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:26" *)
  wire [15:0] vbits_to_cbits_reg_data_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:22" *)
  wire vbits_to_cbits_reg_end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:28" *)
  wire vbits_to_cbits_reg_end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:25" *)
  wire vbits_to_cbits_reg_i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:19" *)
  wire vbits_to_cbits_reg_o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:21" *)
  wire vbits_to_cbits_reg_valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:27" *)
  wire vbits_to_cbits_reg_valid_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:231" *)
  wire vbits_to_cbits_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:234" *)
  wire vbits_to_cbits_valid_out;
  integration_2 integration_2 (
    .clk(clk),
    .enc_out(integration_2_enc_out),
    .enc_out_ctr(integration_2_enc_out_ctr),
    .latch_output(integration_2_latch_output),
    .nready(integration_2_nready),
    .out_end(integration_2_out_end),
    .pixel_in(integration_2_pixel_in),
    .\pixel_in$1 (\integration_2_pixel_in$2 ),
    .rst(rst),
    .valid_in(integration_2_valid_in),
    .valid_out(integration_2_valid_out)
  );
  vbits_to_cbits vbits_to_cbits (
    .busy_in(vbits_to_cbits_busy_in),
    .clk(clk),
    .data_out(vbits_to_cbits_data_out),
    .enc_in(vbits_to_cbits_enc_in),
    .enc_in_ctr(vbits_to_cbits_enc_in_ctr),
    .end_out(vbits_to_cbits_end_out),
    .in_end(vbits_to_cbits_in_end),
    .latch_input(vbits_to_cbits_latch_input),
    .rst(rst),
    .valid_in(vbits_to_cbits_valid_in),
    .valid_out(vbits_to_cbits_valid_out)
  );
  vbits_to_cbits_reg vbits_to_cbits_reg (
    .data_left(vbits_to_cbits_reg_data_left),
    .data_right(vbits_to_cbits_reg_data_right),
    .end_left(vbits_to_cbits_reg_end_left),
    .end_right(vbits_to_cbits_reg_end_right),
    .i_busy(vbits_to_cbits_reg_i_busy),
    .o_busy(vbits_to_cbits_reg_o_busy),
    .valid_left(vbits_to_cbits_reg_valid_left),
    .valid_right(vbits_to_cbits_reg_valid_right)
  );
  always @* begin
    \$next\integration_2_pixel_in  = 12'h000;
    \$next\integration_2_pixel_in  = pixel_in;
  end
  always @* begin
    \$next\integration_2_pixel_in$2  = 12'h000;
    \$next\integration_2_pixel_in$2  = \pixel_in$1 ;
  end
  always @* begin
    \$next\vbits_to_cbits_reg_data_left  = 16'h0000;
    \$next\vbits_to_cbits_reg_data_left  = vbits_to_cbits_data_out;
  end
  always @* begin
    \$next\vbits_to_cbits_reg_valid_left  = 1'h0;
    \$next\vbits_to_cbits_reg_valid_left  = vbits_to_cbits_valid_out;
  end
  always @* begin
    \$next\vbits_to_cbits_reg_end_left  = 1'h0;
    \$next\vbits_to_cbits_reg_end_left  = vbits_to_cbits_end_out;
  end
  always @* begin
    \$next\data_out  = 16'h0000;
    \$next\data_out  = vbits_to_cbits_reg_data_right;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = vbits_to_cbits_reg_valid_right;
  end
  always @* begin
    \$next\end_out  = 1'h0;
    \$next\end_out  = vbits_to_cbits_reg_end_right;
  end
  always @* begin
    \$next\nready  = 1'h0;
    \$next\nready  = integration_2_nready;
  end
  always @* begin
    \$next\integration_2_valid_in  = 1'h0;
    \$next\integration_2_valid_in  = valid_in;
  end
  always @* begin
    \$next\integration_2_latch_output  = 1'h0;
    \$next\integration_2_latch_output  = vbits_to_cbits_latch_input;
  end
  always @* begin
    \$next\vbits_to_cbits_enc_in  = 24'h000000;
    \$next\vbits_to_cbits_enc_in  = integration_2_enc_out[23:0];
  end
  always @* begin
    \$next\vbits_to_cbits_enc_in_ctr  = 5'h00;
    \$next\vbits_to_cbits_enc_in_ctr  = integration_2_enc_out_ctr[4:0];
  end
  always @* begin
    \$next\vbits_to_cbits_in_end  = 1'h0;
    \$next\vbits_to_cbits_in_end  = integration_2_out_end;
  end
  always @* begin
    \$next\vbits_to_cbits_valid_in  = 1'h0;
    \$next\vbits_to_cbits_valid_in  = integration_2_valid_out;
  end
  always @* begin
    \$next\vbits_to_cbits_busy_in  = 1'h0;
    \$next\vbits_to_cbits_busy_in  = vbits_to_cbits_reg_o_busy;
  end
  always @* begin
    \$next\vbits_to_cbits_reg_i_busy  = 1'h0;
    \$next\vbits_to_cbits_reg_i_busy  = busy_in;
  end
  assign nready = \$next\nready ;
  assign end_out = \$next\end_out ;
  assign valid_out = \$next\valid_out ;
  assign data_out = \$next\data_out ;
  assign vbits_to_cbits_reg_end_left = \$next\vbits_to_cbits_reg_end_left ;
  assign vbits_to_cbits_reg_valid_left = \$next\vbits_to_cbits_reg_valid_left ;
  assign vbits_to_cbits_reg_data_left = \$next\vbits_to_cbits_reg_data_left ;
  assign vbits_to_cbits_reg_i_busy = \$next\vbits_to_cbits_reg_i_busy ;
  assign vbits_to_cbits_busy_in = \$next\vbits_to_cbits_busy_in ;
  assign vbits_to_cbits_valid_in = \$next\vbits_to_cbits_valid_in ;
  assign vbits_to_cbits_in_end = \$next\vbits_to_cbits_in_end ;
  assign vbits_to_cbits_enc_in_ctr = \$next\vbits_to_cbits_enc_in_ctr ;
  assign vbits_to_cbits_enc_in = \$next\vbits_to_cbits_enc_in ;
  assign integration_2_latch_output = \$next\integration_2_latch_output ;
  assign integration_2_valid_in = \$next\integration_2_valid_in ;
  assign \integration_2_pixel_in$2  = \$next\integration_2_pixel_in$2 ;
  assign integration_2_pixel_in = \$next\integration_2_pixel_in ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.lj92_pipeline_fifo" *)
(* generator = "nMigen" *)
module lj92_pipeline_fifo(enc_in, enc_in_ctr, in_end, latch_output, rst, clk, valid_out, enc_out, enc_out_ctr, out_end, close_full, valid_in);
  wire \$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:39" *)
  reg \$next\close_full ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:32" *)
  reg [55:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:33" *)
  reg [5:0] \$next\enc_out_ctr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  reg [62:0] \$next\fifo_din ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  reg \$next\fifo_re ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  reg \$next\fifo_we ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:34" *)
  reg \$next\out_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:35" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:39" *)
  output close_full;
  reg close_full = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:26" *)
  input [55:0] enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:27" *)
  input [5:0] enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:32" *)
  output [55:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:33" *)
  output [5:0] enc_out_ctr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  wire [62:0] fifo_din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  wire [62:0] fifo_dout;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:238" *)
  wire [9:0] fifo_level;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  wire fifo_re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  wire fifo_readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  wire fifo_we;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:28" *)
  input in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:31" *)
  input latch_output;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:34" *)
  output out_end;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:29" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:35" *)
  output valid_out;
  assign \$1  = fifo_level > (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/lj92_pipeline_fifo.py:71" *) 9'h1ec;
  always @(posedge clk)
      close_full <= \$next\close_full ;
  fifo fifo (
    .clk(clk),
    .din(fifo_din),
    .dout(fifo_dout),
    .level(fifo_level),
    .re(fifo_re),
    .readable(fifo_readable),
    .rst(rst),
    .we(fifo_we)
  );
  always @* begin
    \$next\fifo_we  = 1'h0;
    \$next\fifo_we  = valid_in;
  end
  always @* begin
    \$next\fifo_din  = 63'h0000000000000000;
    \$next\fifo_din  = { in_end, enc_in_ctr, enc_in };
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = fifo_readable;
  end
  always @* begin
    \$next\enc_out  = 56'h00000000000000;
    \$next\enc_out  = fifo_dout[55:0];
  end
  always @* begin
    \$next\enc_out_ctr  = 6'h00;
    \$next\enc_out_ctr  = fifo_dout[61:56];
  end
  always @* begin
    \$next\out_end  = 1'h0;
    \$next\out_end  = fifo_dout[62];
  end
  always @* begin
    \$next\fifo_re  = 1'h0;
    \$next\fifo_re  = latch_output;
  end
  always @* begin
    \$next\close_full  = close_full;
    \$next\close_full  = \$1 ;
    casez (rst)
      1'h1:
          \$next\close_full  = 1'h0;
    endcase
  end
  assign fifo_re = \$next\fifo_re ;
  assign out_end = \$next\out_end ;
  assign enc_out_ctr = \$next\enc_out_ctr ;
  assign enc_out = \$next\enc_out ;
  assign valid_out = \$next\valid_out ;
  assign fifo_din = \$next\fifo_din ;
  assign fifo_we = \$next\fifo_we ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.merge" *)
(* generator = "nMigen" *)
module merge(enc_in, enc_in_ctr, \enc_in$1 , \enc_in_ctr$2 , rst, clk, enc_out, enc_out_ctr, valid_out, valid_in);
  wire [20:0] \$8 ;
  wire [20:0] \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:74" *)
  reg [19:0] \$next\debug_counter ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:11" *)
  reg [27:0] \$next\enc_in1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:14" *)
  reg [27:0] \$next\enc_in2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:12" *)
  reg [4:0] \$next\enc_in_ctr1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:15" *)
  reg [4:0] \$next\enc_in_ctr2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:68" *)
  reg [55:0] \$next\enc_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:69" *)
  reg [5:0] \$next\enc_out_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:20" *)
  reg \$next\valid_in$3 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:72" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 20'h00000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:74" *)
  reg [19:0] debug_counter = 20'h00000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:65" *)
  input [27:0] enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:65" *)
  input [27:0] \enc_in$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:11" *)
  wire [27:0] enc_in1;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:14" *)
  wire [27:0] enc_in2;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:66" *)
  input [4:0] enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:66" *)
  input [4:0] \enc_in_ctr$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:12" *)
  wire [4:0] enc_in_ctr1;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:15" *)
  wire [4:0] enc_in_ctr2;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:68" *)
  output [55:0] enc_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:17" *)
  wire [55:0] \enc_out$5 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:69" *)
  output [5:0] enc_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:18" *)
  wire [5:0] \enc_out_ctr$4 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:71" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:20" *)
  wire \valid_in$3 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:72" *)
  output valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:21" *)
  wire \valid_out$6 ;
  assign \$9  = debug_counter + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/merge.py:113" *) 1'h1;
  \anonymous$4  \$7  (
    .clk(clk),
    .enc_in1(enc_in1),
    .enc_in2(enc_in2),
    .enc_in_ctr1(enc_in_ctr1),
    .enc_in_ctr2(enc_in_ctr2),
    .enc_out(\enc_out$5 ),
    .enc_out_ctr(\enc_out_ctr$4 ),
    .rst(rst),
    .valid_in(\valid_in$3 ),
    .valid_out(\valid_out$6 )
  );
  always @(posedge clk)
      debug_counter <= \$next\debug_counter ;
  always @* begin
    \$next\debug_counter  = debug_counter;
    casez (valid_in)
      1'h1:
          \$next\debug_counter  = \$8 [19:0];
    endcase
    casez (rst)
      1'h1:
          \$next\debug_counter  = 20'h00000;
    endcase
  end
  always @* begin
    \$next\enc_in1  = 28'h0000000;
    \$next\enc_in1  = enc_in;
  end
  always @* begin
    \$next\enc_in_ctr1  = 5'h00;
    \$next\enc_in_ctr1  = enc_in_ctr;
  end
  always @* begin
    \$next\valid_in$3  = 1'h0;
    \$next\valid_in$3  = valid_in;
  end
  always @* begin
    \$next\enc_in2  = 28'h0000000;
    \$next\enc_in2  = \enc_in$1 ;
  end
  always @* begin
    \$next\enc_in_ctr2  = 5'h00;
    \$next\enc_in_ctr2  = \enc_in_ctr$2 ;
  end
  always @* begin
    \$next\enc_out  = 56'h00000000000000;
    \$next\enc_out  = \enc_out$5 ;
  end
  always @* begin
    \$next\enc_out_ctr  = 6'h00;
    \$next\enc_out_ctr  = \enc_out_ctr$4 ;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = \valid_out$6 ;
  end
  assign \$8  = \$9 ;
  assign valid_out = \$next\valid_out ;
  assign enc_out_ctr = \$next\enc_out_ctr ;
  assign enc_out = \$next\enc_out ;
  assign enc_in_ctr2 = \$next\enc_in_ctr2 ;
  assign enc_in2 = \$next\enc_in2 ;
  assign \valid_in$3  = \$next\valid_in$3 ;
  assign enc_in_ctr1 = \$next\enc_in_ctr1 ;
  assign enc_in1 = \$next\enc_in1 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.normalize" *)
(* generator = "nMigen" *)
module normalize(valid_in, vals_in_mns, \val_in$1 , \vals_in_mns$2 , rst, clk, ssss, val_out, \ssss$3 , \val_out$4 , valid_out, val_in);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:125" *)
  reg [4:0] \$next\ssss ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:125" *)
  reg [4:0] \$next\ssss$3 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:68" *)
  reg [12:0] \$next\val_in$10 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:68" *)
  reg [12:0] \$next\val_in$5 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:73" *)
  reg [12:0] \$next\val_in_mns ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:73" *)
  reg [12:0] \$next\val_in_mns$11 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:124" *)
  reg [11:0] \$next\val_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:124" *)
  reg [11:0] \$next\val_out$4 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:71" *)
  reg \$next\valid ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:71" *)
  reg \$next\valid$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:128" *)
  reg \$next\valid_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:125" *)
  output [4:0] ssss;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:70" *)
  wire [4:0] \ssss$13 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:125" *)
  output [4:0] \ssss$3 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:70" *)
  wire [4:0] \ssss$7 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:122" *)
  input [12:0] val_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:122" *)
  input [12:0] \val_in$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:68" *)
  wire [12:0] \val_in$10 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:68" *)
  wire [12:0] \val_in$5 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:73" *)
  wire [12:0] val_in_mns;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:73" *)
  wire [12:0] \val_in_mns$11 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:124" *)
  output [11:0] val_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:69" *)
  wire [11:0] \val_out$12 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:124" *)
  output [11:0] \val_out$4 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:69" *)
  wire [11:0] \val_out$6 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:71" *)
  wire valid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:71" *)
  wire \valid$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:127" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:72" *)
  wire valid_o;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:128" *)
  output valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:123" *)
  input [12:0] vals_in_mns;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/normalize.py:123" *)
  input [12:0] \vals_in_mns$2 ;
  \anonymous$1  \$14  (
    .clk(clk),
    .rst(rst),
    .ssss(\ssss$13 ),
    .val_in(\val_in$10 ),
    .val_in_mns(\val_in_mns$11 ),
    .val_out(\val_out$12 ),
    .valid(\valid$9 )
  );
  anonymous \$8  (
    .clk(clk),
    .rst(rst),
    .ssss(\ssss$7 ),
    .val_in(\val_in$5 ),
    .val_in_mns(val_in_mns),
    .val_out(\val_out$6 ),
    .valid(valid),
    .valid_o(valid_o)
  );
  always @* begin
    \$next\val_in$5  = 13'h0000;
    \$next\val_in$5  = val_in;
  end
  always @* begin
    \$next\valid  = 1'h0;
    \$next\valid  = valid_in;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = valid_o;
  end
  always @* begin
    \$next\val_in_mns  = 13'h0000;
    \$next\val_in_mns  = vals_in_mns;
  end
  always @* begin
    \$next\ssss  = 5'h00;
    \$next\ssss  = \ssss$7 ;
  end
  always @* begin
    \$next\val_out  = 12'h000;
    \$next\val_out  = \val_out$6 ;
  end
  always @* begin
    \$next\val_in$10  = 13'h0000;
    \$next\val_in$10  = \val_in$1 ;
  end
  always @* begin
    \$next\valid$9  = 1'h0;
    \$next\valid$9  = valid_in;
  end
  always @* begin
    \$next\val_in_mns$11  = 13'h0000;
    \$next\val_in_mns$11  = \vals_in_mns$2 ;
  end
  always @* begin
    \$next\ssss$3  = 5'h00;
    \$next\ssss$3  = \ssss$13 ;
  end
  always @* begin
    \$next\val_out$4  = 12'h000;
    \$next\val_out$4  = \val_out$12 ;
  end
  assign valid_out = \$next\valid_out ;
  assign \val_out$4  = \$next\val_out$4 ;
  assign \ssss$3  = \$next\ssss$3 ;
  assign \val_in_mns$11  = \$next\val_in_mns$11 ;
  assign \valid$9  = \$next\valid$9 ;
  assign \val_in$10  = \$next\val_in$10 ;
  assign val_out = \$next\val_out ;
  assign ssss = \$next\ssss ;
  assign val_in_mns = \$next\val_in_mns ;
  assign valid = \$next\valid ;
  assign \val_in$5  = \$next\val_in$5 ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.vbits_to_cbits.output_handler" *)
(* generator = "nMigen" *)
module output_handler(new_buff_consum_actv, new_buff_consum, end_in, buffer, busy_in, rst, clk, dec_buff_out, data_out, valid_out, end_out, buff_consum);
  wire [7:0] \$1 ;
  wire \$11 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire [7:0] \$2 ;
  wire \$21 ;
  wire \$23 ;
  wire [83:0] \$25 ;
  wire [83:0] \$26 ;
  wire [210:0] \$28 ;
  wire [210:0] \$29 ;
  wire \$31 ;
  wire \$33 ;
  wire \$35 ;
  wire [83:0] \$37 ;
  wire [83:0] \$38 ;
  wire [7:0] \$4 ;
  wire [210:0] \$40 ;
  wire [210:0] \$41 ;
  wire \$43 ;
  wire \$45 ;
  wire \$47 ;
  wire \$49 ;
  wire [7:0] \$5 ;
  wire \$51 ;
  wire \$53 ;
  wire \$55 ;
  wire \$57 ;
  wire \$59 ;
  wire \$61 ;
  wire \$63 ;
  wire \$65 ;
  wire \$7 ;
  wire \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:49" *)
  reg \$next\buff_consum_greater_eq ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:48" *)
  reg \$next\buff_consum_less_eq ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:17" *)
  reg [15:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:28" *)
  reg \$next\dec_buff_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:19" *)
  reg \$next\end_out ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg \$next\fsm_state ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:40" *)
  reg [6:0] \$next\shift_left ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:39" *)
  reg [6:0] \$next\shift_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:18" *)
  reg \$next\valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:24" *)
  input [6:0] buff_consum;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:49" *)
  reg buff_consum_greater_eq = 1'h0;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:48" *)
  reg buff_consum_less_eq = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:23" *)
  input [83:0] buffer;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:20" *)
  input busy_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:17" *)
  output [15:0] data_out;
  reg [15:0] data_out = 16'h0000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:28" *)
  output dec_buff_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:31" *)
  input end_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:19" *)
  output end_out;
  reg end_out = 1'h0;
  (* init = 1'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg fsm_state = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:25" *)
  input [6:0] new_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:26" *)
  input new_buff_consum_actv;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:40" *)
  wire [6:0] shift_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:39" *)
  wire [6:0] shift_right;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:18" *)
  output valid_out;
  reg valid_out = 1'h0;
  assign \$9  = buff_consum_greater_eq | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) \$7 ;
  assign \$11  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) 1'h0;
  assign \$13  = \$11  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) buff_consum_greater_eq;
  assign \$15  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:85" *) 1'h0;
  assign \$17  = new_buff_consum >= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:53" *) 5'h10;
  assign \$19  = new_buff_consum <= (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:54" *) 5'h10;
  assign \$21  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) end_in;
  assign \$23  = buff_consum_greater_eq | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) \$21 ;
  assign \$26  = buffer >>> (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:59" *) shift_right;
  assign \$2  = buff_consum - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:41" *) 5'h10;
  assign \$29  = buffer <<< (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:61" *) shift_left;
  assign \$31  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) 1'h0;
  assign \$33  = \$31  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) buff_consum_greater_eq;
  assign \$35  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:85" *) 1'h0;
  assign \$38  = buffer >>> (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:59" *) shift_right;
  assign \$41  = buffer <<< (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:61" *) shift_left;
  assign \$43  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) end_in;
  assign \$45  = buff_consum_greater_eq | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) \$43 ;
  assign \$47  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) 1'h0;
  assign \$49  = \$47  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) buff_consum_greater_eq;
  assign \$51  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:85" *) 1'h0;
  assign \$53  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) end_in;
  assign \$55  = buff_consum_greater_eq | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) \$53 ;
  assign \$57  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) 1'h0;
  assign \$5  = 5'h10 - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:42" *) buff_consum;
  assign \$59  = \$57  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:82" *) buff_consum_greater_eq;
  assign \$61  = busy_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:85" *) 1'h0;
  assign \$63  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:77" *) end_in;
  assign \$65  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:92" *) end_in;
  assign \$7  = buff_consum_less_eq & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:73" *) end_in;
  always @(posedge clk)
      end_out <= \$next\end_out ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      data_out <= \$next\data_out ;
  always @(posedge clk)
      buff_consum_less_eq <= \$next\buff_consum_less_eq ;
  always @(posedge clk)
      buff_consum_greater_eq <= \$next\buff_consum_greater_eq ;
  always @* begin
    \$next\shift_right  = 7'h00;
    \$next\shift_right  = \$1 [6:0];
  end
  always @* begin
    \$next\shift_left  = 7'h00;
    \$next\shift_left  = \$4 [6:0];
  end
  always @* begin
    \$next\dec_buff_out  = 1'h0;
    \$next\dec_buff_out  = 1'h0;
    casez (fsm_state)
      1'h0:
          casez (\$9 )
            1'h1:
                \$next\dec_buff_out  = 1'h1;
          endcase
      1'h1:
          casez ({ \$15 , \$13  })
            2'bz1:
                \$next\dec_buff_out  = 1'h1;
          endcase
    endcase
  end
  always @* begin
    \$next\buff_consum_greater_eq  = buff_consum_greater_eq;
    casez (new_buff_consum_actv)
      1'h1:
          \$next\buff_consum_greater_eq  = \$17 ;
    endcase
    casez (rst)
      1'h1:
          \$next\buff_consum_greater_eq  = 1'h0;
    endcase
  end
  always @* begin
    \$next\buff_consum_less_eq  = buff_consum_less_eq;
    casez (new_buff_consum_actv)
      1'h1:
          \$next\buff_consum_less_eq  = \$19 ;
    endcase
    casez (rst)
      1'h1:
          \$next\buff_consum_less_eq  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out  = data_out;
    casez (fsm_state)
      1'h0:
          casez (\$23 )
            1'h1:
                casez (buff_consum_greater_eq)
                  1'h1:
                      \$next\data_out  = \$25 [15:0];
                  1'hz:
                      \$next\data_out  = \$28 [15:0];
                endcase
          endcase
      1'h1:
          casez ({ \$35 , \$33  })
            2'bz1:
                casez (buff_consum_greater_eq)
                  1'h1:
                      \$next\data_out  = \$37 [15:0];
                  1'hz:
                      \$next\data_out  = \$40 [15:0];
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\data_out  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\valid_out  = valid_out;
    casez (fsm_state)
      1'h0:
          casez (\$45 )
            1'h1:
                \$next\valid_out  = 1'h1;
          endcase
      1'h1:
          casez ({ \$51 , \$49  })
            2'bz1:
                \$next\valid_out  = 1'h1;
            2'b1z:
                \$next\valid_out  = 1'h0;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      1'h0:
          casez (\$55 )
            1'h1:
                \$next\fsm_state  = 1'h1;
          endcase
      1'h1:
          casez ({ \$61 , \$59  })
            2'bz1:
                /* empty */;
            2'b1z:
                \$next\fsm_state  = 1'h0;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 1'h0;
    endcase
  end
  always @* begin
    \$next\end_out  = end_out;
    casez (fsm_state)
      1'h0:
          casez (\$63 )
            1'h1:
                \$next\end_out  = 1'h1;
          endcase
      1'h1:
          casez (\$65 )
            1'h1:
                \$next\end_out  = 1'h1;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\end_out  = 1'h0;
    endcase
  end
  assign \$1  = \$2 ;
  assign \$4  = \$5 ;
  assign \$25  = \$26 ;
  assign \$28  = \$29 ;
  assign \$37  = \$38 ;
  assign \$40  = \$41 ;
  assign dec_buff_out = \$next\dec_buff_out ;
  assign shift_left = \$next\shift_left ;
  assign shift_right = \$next\shift_right ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.pipeline_fifo_reg" *)
(* generator = "nMigen" *)
module pipeline_fifo_reg(enc_left, enc_ctr_left, out_end_left, valid_left, o_busy, enc_right, enc_ctr_right, out_end_right, valid_right, i_busy);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:30" *)
  reg [5:0] \$next\enc_ctr_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:29" *)
  reg [55:0] \$next\enc_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:21" *)
  reg \$next\o_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:31" *)
  reg \$next\out_end_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:32" *)
  reg \$next\valid_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:23" *)
  input [5:0] enc_ctr_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:30" *)
  output [5:0] enc_ctr_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:22" *)
  input [55:0] enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:29" *)
  output [55:0] enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:28" *)
  input i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:21" *)
  output o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:24" *)
  input out_end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:31" *)
  output out_end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:25" *)
  input valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_fifo_reg.py:32" *)
  output valid_right;
  always @* begin
    \$next\o_busy  = 1'h0;
    \$next\o_busy  = i_busy;
  end
  always @* begin
    \$next\enc_right  = 56'h00000000000000;
    \$next\enc_right  = enc_left;
  end
  always @* begin
    \$next\enc_ctr_right  = 6'h00;
    \$next\enc_ctr_right  = enc_ctr_left;
  end
  always @* begin
    \$next\out_end_right  = 1'h0;
    \$next\out_end_right  = out_end_left;
  end
  always @* begin
    \$next\valid_right  = 1'h0;
    \$next\valid_right  = valid_left;
  end
  assign valid_right = \$next\valid_right ;
  assign out_end_right = \$next\out_end_right ;
  assign enc_ctr_right = \$next\enc_ctr_right ;
  assign enc_right = \$next\enc_right ;
  assign o_busy = \$next\o_busy ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.pipeline_reg" *)
(* generator = "nMigen" *)
module pipeline_reg(enc_left_ctr, valid_left, enc_right, enc_right_ctr, valid_right, enc_left);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:28" *)
  reg [55:0] \$next\enc_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:29" *)
  reg [5:0] \$next\enc_right_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:32" *)
  reg \$next\valid_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:24" *)
  input [55:0] enc_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:25" *)
  input [5:0] enc_left_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:28" *)
  output [55:0] enc_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:29" *)
  output [5:0] enc_right_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:31" *)
  input valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/pipeline_reg.py:32" *)
  output valid_right;
  always @* begin
    \$next\enc_right  = 56'h00000000000000;
    \$next\enc_right  = enc_left;
  end
  always @* begin
    \$next\enc_right_ctr  = 6'h00;
    \$next\enc_right_ctr  = enc_left_ctr;
  end
  always @* begin
    \$next\valid_right  = 1'h0;
    \$next\valid_right  = valid_left;
  end
  assign valid_right = \$next\valid_right ;
  assign enc_right_ctr = \$next\enc_right_ctr ;
  assign enc_right = \$next\enc_right ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.predictor" *)
(* generator = "nMigen" *)
module predictor(new_row, pixel_in, \pixel_in$1 , rst, clk, pixel_out, \pixel_out$2 , predic_out, \predic_out$3 , valid_out, valid_in);
  wire \$10 ;
  wire \$12 ;
  wire \$14 ;
  wire \$16 ;
  wire [1:0] \$18 ;
  wire [1:0] \$19 ;
  wire [1:0] \$24 ;
  wire [1:0] \$25 ;
  wire \$4 ;
  wire \$6 ;
  wire \$8 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \$next\buff ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \$next\buff$21 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \$next\buff$22 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \$next\buff$23 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:62" *)
  reg \$next\buff_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \$next\lbuff ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \$next\lbuff$27 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \$next\lbuff$28 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \$next\lbuff$29 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:63" *)
  reg \$next\lbuff_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:66" *)
  reg \$next\new_row_latch ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:65" *)
  reg \$next\new_row_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:34" *)
  reg [11:0] \$next\pixel_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:34" *)
  reg [11:0] \$next\pixel_out$2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:37" *)
  reg [11:0] \$next\predic_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:37" *)
  reg [11:0] \$next\predic_out$3 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:44" *)
  reg \$next\valid_out ;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] buff = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \buff$21  = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \buff$22  = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:57" *)
  reg [11:0] \buff$23  = 12'h800;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:62" *)
  reg buff_ctr = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] lbuff = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \lbuff$27  = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \lbuff$28  = 12'h800;
  (* init = 12'h800 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:60" *)
  reg [11:0] \lbuff$29  = 12'h800;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:63" *)
  reg lbuff_ctr = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:40" *)
  input new_row;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:66" *)
  wire new_row_latch;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:65" *)
  reg new_row_reg = 1'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:31" *)
  input [11:0] pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:31" *)
  input [11:0] \pixel_in$1 ;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:34" *)
  output [11:0] pixel_out;
  reg [11:0] pixel_out = 12'h000;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:34" *)
  output [11:0] \pixel_out$2 ;
  reg [11:0] \pixel_out$2  = 12'h000;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:37" *)
  output [11:0] predic_out;
  reg [11:0] predic_out = 12'h000;
  (* init = 12'h000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:37" *)
  output [11:0] \predic_out$3 ;
  reg [11:0] \predic_out$3  = 12'h000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:43" *)
  input valid_in;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:44" *)
  output valid_out;
  reg valid_out = 1'h0;
  assign \$10  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:71" *) 1'h1;
  assign \$12  = lbuff_ctr == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:71" *) 1'h1;
  assign \$14  = \$10  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:71" *) \$12 ;
  assign \$16  = new_row | (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:73" *) new_row_reg;
  assign \$19  = buff_ctr + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:82" *) 1'h1;
  assign \$25  = lbuff_ctr + (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:91" *) 1'h1;
  assign \$4  = valid_in == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:69" *) 1'h1;
  assign \$6  = new_row == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:69" *) 1'h1;
  assign \$8  = \$4  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/predictor_p1_c4_pix1_2.py:69" *) \$6 ;
  always @(posedge clk)
      \buff$22  <= \$next\buff$22 ;
  always @(posedge clk)
      \buff$21  <= \$next\buff$21 ;
  always @(posedge clk)
      buff <= \$next\buff ;
  always @(posedge clk)
      buff_ctr <= \$next\buff_ctr ;
  always @(posedge clk)
      \pixel_out$2  <= \$next\pixel_out$2 ;
  always @(posedge clk)
      pixel_out <= \$next\pixel_out ;
  always @(posedge clk)
      new_row_reg <= \$next\new_row_reg ;
  always @(posedge clk)
      valid_out <= \$next\valid_out ;
  always @(posedge clk)
      \predic_out$3  <= \$next\predic_out$3 ;
  always @(posedge clk)
      predic_out <= \$next\predic_out ;
  always @(posedge clk)
      \lbuff$29  <= \$next\lbuff$29 ;
  always @(posedge clk)
      \lbuff$28  <= \$next\lbuff$28 ;
  always @(posedge clk)
      \lbuff$27  <= \$next\lbuff$27 ;
  always @(posedge clk)
      lbuff <= \$next\lbuff ;
  always @(posedge clk)
      lbuff_ctr <= \$next\lbuff_ctr ;
  always @(posedge clk)
      \buff$23  <= \$next\buff$23 ;
  always @* begin
    \$next\new_row_reg  = new_row_reg;
    casez ({ \$14 , \$8  })
      2'bz1:
          \$next\new_row_reg  = 1'h1;
      2'b1z:
          \$next\new_row_reg  = 1'h0;
    endcase
    casez (rst)
      1'h1:
          \$next\new_row_reg  = 1'h0;
    endcase
  end
  always @* begin
    \$next\new_row_latch  = 1'h0;
    \$next\new_row_latch  = \$16 ;
  end
  always @* begin
    \$next\lbuff  = lbuff;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                casez (lbuff_ctr)
                  1'h0:
                      \$next\lbuff  = pixel_in;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff  = 12'h800;
    endcase
  end
  always @* begin
    \$next\lbuff$27  = \lbuff$27 ;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                casez (lbuff_ctr)
                  1'h0:
                      \$next\lbuff$27  = \pixel_in$1 ;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff$27  = 12'h800;
    endcase
  end
  always @* begin
    \$next\lbuff$28  = \lbuff$28 ;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                casez (lbuff_ctr)
                  1'h1:
                      \$next\lbuff$28  = pixel_in;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff$28  = 12'h800;
    endcase
  end
  always @* begin
    \$next\lbuff$29  = \lbuff$29 ;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                casez (lbuff_ctr)
                  1'h1:
                      \$next\lbuff$29  = \pixel_in$1 ;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff$29  = 12'h800;
    endcase
  end
  always @* begin
    \$next\predic_out  = predic_out;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                casez (lbuff_ctr)
                  1'h0:
                      \$next\predic_out  = lbuff;
                  1'h1:
                      \$next\predic_out  = \lbuff$28 ;
                endcase
            1'hz:
                casez (buff_ctr)
                  1'h0:
                      \$next\predic_out  = buff;
                  1'h1:
                      \$next\predic_out  = \buff$22 ;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\predic_out  = 12'h000;
    endcase
  end
  always @* begin
    \$next\predic_out$3  = \predic_out$3 ;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                casez (lbuff_ctr)
                  1'h0:
                      \$next\predic_out$3  = \lbuff$27 ;
                  1'h1:
                      \$next\predic_out$3  = \lbuff$29 ;
                endcase
            1'hz:
                casez (buff_ctr)
                  1'h0:
                      \$next\predic_out$3  = \buff$21 ;
                  1'h1:
                      \$next\predic_out$3  = \buff$23 ;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\predic_out$3  = 12'h000;
    endcase
  end
  always @* begin
    \$next\valid_out  = valid_out;
    \$next\valid_out  = valid_in;
    casez (rst)
      1'h1:
          \$next\valid_out  = 1'h0;
    endcase
  end
  always @* begin
    \$next\pixel_out  = pixel_out;
    casez (valid_in)
      1'h1:
          \$next\pixel_out  = pixel_in;
    endcase
    casez (rst)
      1'h1:
          \$next\pixel_out  = 12'h000;
    endcase
  end
  always @* begin
    \$next\pixel_out$2  = \pixel_out$2 ;
    casez (valid_in)
      1'h1:
          \$next\pixel_out$2  = \pixel_in$1 ;
    endcase
    casez (rst)
      1'h1:
          \$next\pixel_out$2  = 12'h000;
    endcase
  end
  always @* begin
    \$next\buff_ctr  = buff_ctr;
    casez (valid_in)
      1'h1:
          \$next\buff_ctr  = \$18 [0];
    endcase
    casez (rst)
      1'h1:
          \$next\buff_ctr  = 1'h0;
    endcase
  end
  always @* begin
    \$next\buff  = buff;
    casez (valid_in)
      1'h1:
          casez (buff_ctr)
            1'h0:
                \$next\buff  = pixel_in;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buff  = 12'h800;
    endcase
  end
  always @* begin
    \$next\buff$21  = \buff$21 ;
    casez (valid_in)
      1'h1:
          casez (buff_ctr)
            1'h0:
                \$next\buff$21  = \pixel_in$1 ;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buff$21  = 12'h800;
    endcase
  end
  always @* begin
    \$next\buff$22  = \buff$22 ;
    casez (valid_in)
      1'h1:
          casez (buff_ctr)
            1'h1:
                \$next\buff$22  = pixel_in;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buff$22  = 12'h800;
    endcase
  end
  always @* begin
    \$next\buff$23  = \buff$23 ;
    casez (valid_in)
      1'h1:
          casez (buff_ctr)
            1'h1:
                \$next\buff$23  = \pixel_in$1 ;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\buff$23  = 12'h800;
    endcase
  end
  always @* begin
    \$next\lbuff_ctr  = lbuff_ctr;
    casez (valid_in)
      1'h1:
          casez (new_row_latch)
            1'h1:
                \$next\lbuff_ctr  = \$24 [0];
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\lbuff_ctr  = 1'h0;
    endcase
  end
  assign \$18  = \$19 ;
  assign \$24  = \$25 ;
  assign new_row_latch = \$next\new_row_latch ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.register_file" *)
(* generator = "nMigen" *)
module register_file(clk, width, height, rst);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:10" *)
  reg [15:0] \$next\height ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:21" *)
  reg [15:0] \$next\height_reg ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:11" *)
  reg [15:0] \$next\width ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:20" *)
  reg [15:0] \$next\width_reg ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:10" *)
  output [15:0] height;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:21" *)
  reg [15:0] height_reg = 16'h0000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:11" *)
  output [15:0] width;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/register_file.py:20" *)
  reg [15:0] width_reg = 16'h0000;
  always @(posedge clk)
      height_reg <= \$next\height_reg ;
  always @(posedge clk)
      width_reg <= \$next\width_reg ;
  always @* begin
    \$next\width_reg  = width_reg;
    \$next\width_reg  = 16'h1000;
    casez (rst)
      1'h1:
          \$next\width_reg  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\height_reg  = height_reg;
    \$next\height_reg  = 16'h0c00;
    casez (rst)
      1'h1:
          \$next\height_reg  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\width  = 16'h0000;
    \$next\width  = width_reg;
  end
  always @* begin
    \$next\height  = 16'h0000;
    \$next\height  = height_reg;
  end
  assign height = \$next\height ;
  assign width = \$next\width ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.integration_1.signals" *)
(* generator = "nMigen" *)
module signals(width, height, rst, clk, new_row, end_of_frame, new_input);
  wire [16:0] \$1 ;
  wire [16:0] \$10 ;
  wire \$12 ;
  wire [16:0] \$14 ;
  wire [16:0] \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire [16:0] \$2 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$4 ;
  wire [16:0] \$6 ;
  wire [16:0] \$7 ;
  wire [16:0] \$9 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:21" *)
  reg \$next\end_of_frame ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [1:0] \$next\fsm_state ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:33" *)
  reg [15:0] \$next\height_temp ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:22" *)
  reg \$next\new_row ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:32" *)
  reg [15:0] \$next\width_temp ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 1'h0 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:21" *)
  output end_of_frame;
  reg end_of_frame = 1'h0;
  (* init = 2'h0 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/dsl.py:244" *)
  reg [1:0] fsm_state = 2'h0;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:17" *)
  input [15:0] height;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:33" *)
  reg [15:0] height_temp = 16'h0000;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:19" *)
  input new_input;
  (* init = 1'h1 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:22" *)
  output new_row;
  reg new_row = 1'h1;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:18" *)
  input [15:0] width;
  (* init = 16'h0000 *)
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:32" *)
  reg [15:0] width_temp = 16'h0000;
  assign \$10  = height - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:42" *) 1'h1;
  assign \$12  = width_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:49" *) 2'h2;
  assign \$15  = height_temp - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:52" *) 1'h1;
  assign \$17  = width_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:49" *) 2'h2;
  assign \$19  = height_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) 1'h0;
  assign \$21  = width_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) 2'h2;
  assign \$23  = \$19  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) \$21 ;
  assign \$25  = height_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) 1'h0;
  assign \$27  = width_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) 2'h2;
  assign \$2  = width - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:41" *) 2'h2;
  assign \$29  = \$25  & (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:60" *) \$27 ;
  assign \$4  = width_temp == (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:49" *) 2'h2;
  assign \$7  = width_temp - (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/signals.py:57" *) 2'h2;
  always @(posedge clk)
      end_of_frame <= \$next\end_of_frame ;
  always @(posedge clk)
      fsm_state <= \$next\fsm_state ;
  always @(posedge clk)
      new_row <= \$next\new_row ;
  always @(posedge clk)
      height_temp <= \$next\height_temp ;
  always @(posedge clk)
      width_temp <= \$next\width_temp ;
  always @* begin
    \$next\width_temp  = width_temp;
    casez (fsm_state)
      2'h0:
          casez (new_input)
            1'h1:
                \$next\width_temp  = \$1 [15:0];
          endcase
      2'h1:
          casez (new_input)
            1'h1:
                casez (\$4 )
                  1'h1:
                      \$next\width_temp  = width;
                  1'hz:
                      \$next\width_temp  = \$6 [15:0];
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\width_temp  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\height_temp  = height_temp;
    casez (fsm_state)
      2'h0:
          casez (new_input)
            1'h1:
                \$next\height_temp  = \$9 [15:0];
          endcase
      2'h1:
          casez (new_input)
            1'h1:
                casez (\$12 )
                  1'h1:
                      \$next\height_temp  = \$14 [15:0];
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\height_temp  = 16'h0000;
    endcase
  end
  always @* begin
    \$next\new_row  = new_row;
    casez (fsm_state)
      2'h0:
          casez (new_input)
            1'h1:
                \$next\new_row  = 1'h0;
          endcase
      2'h1:
          casez (new_input)
            1'h1:
                casez (\$17 )
                  1'h1:
                      \$next\new_row  = 1'h1;
                  1'hz:
                      \$next\new_row  = 1'h0;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\new_row  = 1'h1;
    endcase
  end
  always @* begin
    \$next\fsm_state  = fsm_state;
    casez (fsm_state)
      2'h0:
          casez (new_input)
            1'h1:
                \$next\fsm_state  = 2'h1;
          endcase
      2'h1:
          casez (new_input)
            1'h1:
                casez (\$23 )
                  1'h1:
                      \$next\fsm_state  = 2'h2;
                endcase
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\fsm_state  = 2'h0;
    endcase
  end
  always @* begin
    \$next\end_of_frame  = end_of_frame;
    casez (fsm_state)
      2'h1:
          casez (new_input)
            1'h1:
                casez (\$29 )
                  1'h1:
                      \$next\end_of_frame  = 1'h1;
                endcase
          endcase
      2'h2:
          \$next\end_of_frame  = 1'h1;
    endcase
    casez (rst)
      1'h1:
          \$next\end_of_frame  = 1'h0;
    endcase
  end
  assign \$1  = \$2 ;
  assign \$6  = \$7 ;
  assign \$9  = \$10 ;
  assign \$14  = \$15 ;
endmodule

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(s_tdata, s_tlast, s_tvalid, rst, clk, zeros, ones, m_tvalid, m_tlast, m_tdata, s_tready, m_tready);
  wire \$1 ;
  wire \$3 ;
  (* src = "./migen_src/beta_integration_axistream.py:15" *)
  reg [15:0] \$next\m_tdata ;
  (* src = "./migen_src/beta_integration_axistream.py:13" *)
  reg \$next\m_tlast ;
  (* src = "./migen_src/beta_integration_axistream.py:12" *)
  reg \$next\m_tvalid ;
  (* src = "./migen_src/beta_integration_axistream.py:35" *)
  reg \$next\s_end ;
  (* src = "./migen_src/beta_integration_axistream.py:20" *)
  reg \$next\s_tready ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:44" *)
  reg \$next\top_module_busy_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:33" *)
  reg [11:0] \$next\top_module_pixel_in1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:34" *)
  reg [11:0] \$next\top_module_pixel_in2 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:40" *)
  reg \$next\top_module_valid_in ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "./migen_src/beta_integration_axistream.py:15" *)
  output [15:0] m_tdata;
  (* src = "./migen_src/beta_integration_axistream.py:13" *)
  output m_tlast;
  (* src = "./migen_src/beta_integration_axistream.py:14" *)
  input m_tready;
  (* src = "./migen_src/beta_integration_axistream.py:12" *)
  output m_tvalid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:57" *)
  input [7:0] ones;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "./migen_src/beta_integration_axistream.py:35" *)
  wire s_end;
  (* src = "./migen_src/beta_integration_axistream.py:21" *)
  input [31:0] s_tdata;
  (* src = "./migen_src/beta_integration_axistream.py:19" *)
  input s_tlast;
  (* src = "./migen_src/beta_integration_axistream.py:20" *)
  output s_tready;
  (* src = "./migen_src/beta_integration_axistream.py:18" *)
  input s_tvalid;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:44" *)
  wire top_module_busy_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:37" *)
  wire [15:0] top_module_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:42" *)
  wire top_module_end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:43" *)
  wire top_module_nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:33" *)
  wire [11:0] top_module_pixel_in1;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:34" *)
  wire [11:0] top_module_pixel_in2;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:40" *)
  wire top_module_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:41" *)
  wire top_module_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:56" *)
  input [7:0] zeros;
  assign \$1  = m_tready == (* src = "./migen_src/beta_integration_axistream.py:41" *) 1'h0;
  assign \$3  = top_module_nready == (* src = "./migen_src/beta_integration_axistream.py:49" *) 1'h0;
  top_module top_module (
    .busy_in(top_module_busy_in),
    .clk(clk),
    .data_out(top_module_data_out),
    .end_out(top_module_end_out),
    .nready(top_module_nready),
    .ones(ones),
    .pixel_in1(top_module_pixel_in1),
    .pixel_in2(top_module_pixel_in2),
    .rst(rst),
    .valid_in(top_module_valid_in),
    .valid_out(top_module_valid_out),
    .zeros(zeros)
  );
  always @* begin
    \$next\m_tdata  = 16'h0000;
    \$next\m_tdata  = top_module_data_out;
  end
  always @* begin
    \$next\m_tlast  = 1'h0;
    \$next\m_tlast  = top_module_end_out;
  end
  always @* begin
    \$next\top_module_busy_in  = 1'h0;
    \$next\top_module_busy_in  = \$1 ;
  end
  always @* begin
    \$next\m_tvalid  = 1'h0;
    \$next\m_tvalid  = top_module_valid_out;
  end
  always @* begin
    \$next\top_module_pixel_in1  = 12'h000;
    \$next\top_module_pixel_in1  = s_tdata[11:0];
  end
  always @* begin
    \$next\top_module_pixel_in2  = 12'h000;
    \$next\top_module_pixel_in2  = s_tdata[23:12];
  end
  always @* begin
    \$next\s_tready  = 1'h0;
    \$next\s_tready  = \$3 ;
  end
  always @* begin
    \$next\s_end  = 1'h0;
    \$next\s_end  = s_tlast;
  end
  always @* begin
    \$next\top_module_valid_in  = 1'h0;
    \$next\top_module_valid_in  = s_tvalid;
  end
  assign top_module_valid_in = \$next\top_module_valid_in ;
  assign s_end = \$next\s_end ;
  assign s_tready = \$next\s_tready ;
  assign top_module_pixel_in2 = \$next\top_module_pixel_in2 ;
  assign top_module_pixel_in1 = \$next\top_module_pixel_in1 ;
  assign m_tvalid = \$next\m_tvalid ;
  assign top_module_busy_in = \$next\top_module_busy_in ;
  assign m_tlast = \$next\m_tlast ;
  assign m_tdata = \$next\m_tdata ;
endmodule

(* \nmigen.hierarchy  = "top.top_module" *)
(* generator = "nMigen" *)
module top_module(pixel_in2, valid_in, busy_in, rst, clk, zeros, ones, data_out, valid_out, end_out, nready, pixel_in1);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:37" *)
  reg [15:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:42" *)
  reg \$next\end_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:90" *)
  reg [31:0] \$next\fix_0xff2_data_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:91" *)
  reg [2:0] \$next\fix_0xff2_data_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:100" *)
  reg \$next\fix_0xff2_i_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:97" *)
  reg \$next\fix_0xff2_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *)
  reg [15:0] \$next\fix_0xff_data_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:47" *)
  reg \$next\fix_0xff_i_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:44" *)
  reg \$next\fix_0xff_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:32" *)
  reg \$next\integration_3_busy_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:22" *)
  reg [11:0] \$next\integration_3_pixel_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:22" *)
  reg [11:0] \$next\integration_3_pixel_in$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:28" *)
  reg \$next\integration_3_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:43" *)
  reg \$next\nready ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:41" *)
  reg \$next\valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:44" *)
  input busy_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:37" *)
  output [15:0] data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:42" *)
  output end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:90" *)
  wire [31:0] fix_0xff2_data_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:91" *)
  wire [2:0] fix_0xff2_data_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:94" *)
  wire [15:0] fix_0xff2_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:100" *)
  wire fix_0xff2_i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:99" *)
  wire fix_0xff2_o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:97" *)
  wire fix_0xff2_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff2.py:98" *)
  wire fix_0xff2_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:37" *)
  wire [15:0] fix_0xff_data_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:40" *)
  wire [31:0] fix_0xff_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:41" *)
  wire [2:0] fix_0xff_data_out_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:47" *)
  wire fix_0xff_i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:46" *)
  wire fix_0xff_o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:44" *)
  wire fix_0xff_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:45" *)
  wire fix_0xff_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:32" *)
  wire integration_3_busy_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:25" *)
  wire [15:0] integration_3_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:30" *)
  wire integration_3_end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:31" *)
  wire integration_3_nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:22" *)
  wire [11:0] integration_3_pixel_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:22" *)
  wire [11:0] \integration_3_pixel_in$1 ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:28" *)
  wire integration_3_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/integration_3.py:29" *)
  wire integration_3_valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:43" *)
  output nready;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:57" *)
  input [7:0] ones;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:33" *)
  input [11:0] pixel_in1;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:34" *)
  input [11:0] pixel_in2;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:40" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/beta_integration.py:41" *)
  output valid_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/fix_0xff.py:56" *)
  input [7:0] zeros;
  fix_0xff fix_0xff (
    .clk(clk),
    .data_in(fix_0xff_data_in),
    .data_out(fix_0xff_data_out),
    .data_out_ctr(fix_0xff_data_out_ctr),
    .i_busy(fix_0xff_i_busy),
    .o_busy(fix_0xff_o_busy),
    .ones(ones),
    .rst(rst),
    .valid_in(fix_0xff_valid_in),
    .valid_out(fix_0xff_valid_out),
    .zeros(zeros)
  );
  fix_0xff2 fix_0xff2 (
    .clk(clk),
    .data_in(fix_0xff2_data_in),
    .data_in_ctr(fix_0xff2_data_in_ctr),
    .data_out(fix_0xff2_data_out),
    .i_busy(fix_0xff2_i_busy),
    .o_busy(fix_0xff2_o_busy),
    .rst(rst),
    .valid_in(fix_0xff2_valid_in),
    .valid_out(fix_0xff2_valid_out)
  );
  integration_3 integration_3 (
    .busy_in(integration_3_busy_in),
    .clk(clk),
    .data_out(integration_3_data_out),
    .end_out(integration_3_end_out),
    .nready(integration_3_nready),
    .pixel_in(integration_3_pixel_in),
    .\pixel_in$1 (\integration_3_pixel_in$1 ),
    .rst(rst),
    .valid_in(integration_3_valid_in),
    .valid_out(integration_3_valid_out)
  );
  always @* begin
    \$next\integration_3_pixel_in  = 12'h000;
    \$next\integration_3_pixel_in  = pixel_in1;
  end
  always @* begin
    \$next\integration_3_pixel_in$1  = 12'h000;
    \$next\integration_3_pixel_in$1  = pixel_in2;
  end
  always @* begin
    \$next\fix_0xff2_data_in_ctr  = 3'h0;
    \$next\fix_0xff2_data_in_ctr  = fix_0xff_data_out_ctr;
  end
  always @* begin
    \$next\data_out  = 16'h0000;
    \$next\data_out  = fix_0xff2_data_out;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = fix_0xff2_valid_out;
  end
  always @* begin
    \$next\end_out  = 1'h0;
    \$next\end_out  = integration_3_end_out;
  end
  always @* begin
    \$next\nready  = 1'h0;
    \$next\nready  = integration_3_nready;
  end
  always @* begin
    \$next\integration_3_valid_in  = 1'h0;
    \$next\integration_3_valid_in  = valid_in;
  end
  always @* begin
    \$next\integration_3_busy_in  = 1'h0;
    \$next\integration_3_busy_in  = fix_0xff_o_busy;
  end
  always @* begin
    \$next\fix_0xff_data_in  = 16'h0000;
    \$next\fix_0xff_data_in  = integration_3_data_out;
  end
  always @* begin
    \$next\fix_0xff_valid_in  = 1'h0;
    \$next\fix_0xff_valid_in  = integration_3_valid_out;
  end
  always @* begin
    \$next\fix_0xff_i_busy  = 1'h0;
    \$next\fix_0xff_i_busy  = fix_0xff2_o_busy;
  end
  always @* begin
    \$next\fix_0xff2_data_in  = 32'd0;
    \$next\fix_0xff2_data_in  = fix_0xff_data_out;
  end
  always @* begin
    \$next\fix_0xff2_valid_in  = 1'h0;
    \$next\fix_0xff2_valid_in  = fix_0xff_valid_out;
  end
  always @* begin
    \$next\fix_0xff2_i_busy  = 1'h0;
    \$next\fix_0xff2_i_busy  = busy_in;
  end
  assign nready = \$next\nready ;
  assign end_out = \$next\end_out ;
  assign valid_out = \$next\valid_out ;
  assign data_out = \$next\data_out ;
  assign fix_0xff2_data_in_ctr = \$next\fix_0xff2_data_in_ctr ;
  assign fix_0xff2_i_busy = \$next\fix_0xff2_i_busy ;
  assign fix_0xff2_valid_in = \$next\fix_0xff2_valid_in ;
  assign fix_0xff2_data_in = \$next\fix_0xff2_data_in ;
  assign fix_0xff_i_busy = \$next\fix_0xff_i_busy ;
  assign fix_0xff_valid_in = \$next\fix_0xff_valid_in ;
  assign fix_0xff_data_in = \$next\fix_0xff_data_in ;
  assign integration_3_busy_in = \$next\integration_3_busy_in ;
  assign integration_3_valid_in = \$next\integration_3_valid_in ;
  assign \integration_3_pixel_in$1  = \$next\integration_3_pixel_in$1 ;
  assign integration_3_pixel_in = \$next\integration_3_pixel_in ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.lj92_pipeline_fifo.fifo.unbuffered" *)
(* generator = "nMigen" *)
module unbuffered(we, replace, re, rst, clk, writable, readable, dout, level, din);
  wire \$10 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$2 ;
  wire \$21 ;
  wire [9:0] \$23 ;
  wire [9:0] \$24 ;
  wire [9:0] \$26 ;
  wire \$27 ;
  wire \$30 ;
  wire [9:0] \$32 ;
  wire [9:0] \$33 ;
  wire [9:0] \$35 ;
  wire \$36 ;
  wire \$39 ;
  wire \$4 ;
  wire \$41 ;
  wire \$43 ;
  wire \$45 ;
  wire \$46 ;
  wire \$49 ;
  wire [9:0] \$51 ;
  wire [9:0] \$52 ;
  wire \$54 ;
  wire \$56 ;
  wire \$57 ;
  wire \$59 ;
  wire [9:0] \$6 ;
  wire \$61 ;
  wire \$64 ;
  wire [9:0] \$66 ;
  wire [9:0] \$67 ;
  wire [9:0] \$7 ;
  wire [9:0] \$9 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:156" *)
  reg [8:0] \$next\consume ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  reg [62:0] \$next\dout ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  reg [8:0] \$next\level ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:155" *)
  reg [8:0] \$next\produce ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  reg [8:0] \$next\rdport_storage_r_addr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:85" *)
  reg \$next\rdport_storage_r_en ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  reg \$next\readable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  reg \$next\writable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:146" *)
  reg [8:0] \$next\wrport_storage_w_addr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:148" *)
  reg [62:0] \$next\wrport_storage_w_data ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:150" *)
  reg \$next\wrport_storage_w_en ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 9'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:156" *)
  reg [8:0] consume = 9'h000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  input [62:0] din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  output [62:0] dout;
  (* init = 9'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  output [8:0] level;
  reg [8:0] level = 9'h000;
  (* init = 9'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:155" *)
  reg [8:0] produce = 9'h000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  wire [8:0] rdport_storage_r_addr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:83" *)
  wire [62:0] rdport_storage_r_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:85" *)
  wire rdport_storage_r_en;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  input re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  output readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  input replace;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  input we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  output writable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:146" *)
  wire [8:0] wrport_storage_w_addr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:148" *)
  wire [62:0] wrport_storage_w_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:150" *)
  wire wrport_storage_w_en;
  assign \$10  = produce == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:102" *) 1'h0;
  assign \$9  = \$10  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:164" *) 10'h1fe : \$7 ;
  assign \$13  = writable | (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:161" *) replace;
  assign \$15  = we & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:161" *) \$13 ;
  assign \$17  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$19  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$21  = \$17  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$19 ;
  assign \$24  = produce + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 1'h1;
  assign \$27  = produce == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 9'h1fe;
  assign \$26  = \$27  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:166" *) 10'h000 : \$24 ;
  assign \$2  = level != (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:144" *) 9'h1ff;
  assign \$30  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$33  = consume + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 1'h1;
  assign \$36  = consume == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 9'h1fe;
  assign \$35  = \$36  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:175" *) 10'h000 : \$33 ;
  assign \$39  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$41  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$43  = \$39  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$41 ;
  assign \$46  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$45  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:177" *) \$46 ;
  assign \$4  = level != (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:145" *) 1'h0;
  assign \$49  = \$43  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:177" *) \$45 ;
  assign \$52  = level + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:178" *) 1'h1;
  assign \$54  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$57  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$59  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$61  = \$57  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$59 ;
  assign \$56  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:179" *) \$61 ;
  assign \$64  = \$54  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:179" *) \$56 ;
  assign \$67  = level - (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:180" *) 1'h1;
  assign \$7  = produce - (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:102" *) 1'h1;
  always @(posedge clk)
      level <= \$next\level ;
  always @(posedge clk)
      consume <= \$next\consume ;
  always @(posedge clk)
      produce <= \$next\produce ;
  reg [62:0] storage [510:0];
  initial begin
    storage[0] = 63'h0000000000000000;
    storage[1] = 63'h0000000000000000;
    storage[2] = 63'h0000000000000000;
    storage[3] = 63'h0000000000000000;
    storage[4] = 63'h0000000000000000;
    storage[5] = 63'h0000000000000000;
    storage[6] = 63'h0000000000000000;
    storage[7] = 63'h0000000000000000;
    storage[8] = 63'h0000000000000000;
    storage[9] = 63'h0000000000000000;
    storage[10] = 63'h0000000000000000;
    storage[11] = 63'h0000000000000000;
    storage[12] = 63'h0000000000000000;
    storage[13] = 63'h0000000000000000;
    storage[14] = 63'h0000000000000000;
    storage[15] = 63'h0000000000000000;
    storage[16] = 63'h0000000000000000;
    storage[17] = 63'h0000000000000000;
    storage[18] = 63'h0000000000000000;
    storage[19] = 63'h0000000000000000;
    storage[20] = 63'h0000000000000000;
    storage[21] = 63'h0000000000000000;
    storage[22] = 63'h0000000000000000;
    storage[23] = 63'h0000000000000000;
    storage[24] = 63'h0000000000000000;
    storage[25] = 63'h0000000000000000;
    storage[26] = 63'h0000000000000000;
    storage[27] = 63'h0000000000000000;
    storage[28] = 63'h0000000000000000;
    storage[29] = 63'h0000000000000000;
    storage[30] = 63'h0000000000000000;
    storage[31] = 63'h0000000000000000;
    storage[32] = 63'h0000000000000000;
    storage[33] = 63'h0000000000000000;
    storage[34] = 63'h0000000000000000;
    storage[35] = 63'h0000000000000000;
    storage[36] = 63'h0000000000000000;
    storage[37] = 63'h0000000000000000;
    storage[38] = 63'h0000000000000000;
    storage[39] = 63'h0000000000000000;
    storage[40] = 63'h0000000000000000;
    storage[41] = 63'h0000000000000000;
    storage[42] = 63'h0000000000000000;
    storage[43] = 63'h0000000000000000;
    storage[44] = 63'h0000000000000000;
    storage[45] = 63'h0000000000000000;
    storage[46] = 63'h0000000000000000;
    storage[47] = 63'h0000000000000000;
    storage[48] = 63'h0000000000000000;
    storage[49] = 63'h0000000000000000;
    storage[50] = 63'h0000000000000000;
    storage[51] = 63'h0000000000000000;
    storage[52] = 63'h0000000000000000;
    storage[53] = 63'h0000000000000000;
    storage[54] = 63'h0000000000000000;
    storage[55] = 63'h0000000000000000;
    storage[56] = 63'h0000000000000000;
    storage[57] = 63'h0000000000000000;
    storage[58] = 63'h0000000000000000;
    storage[59] = 63'h0000000000000000;
    storage[60] = 63'h0000000000000000;
    storage[61] = 63'h0000000000000000;
    storage[62] = 63'h0000000000000000;
    storage[63] = 63'h0000000000000000;
    storage[64] = 63'h0000000000000000;
    storage[65] = 63'h0000000000000000;
    storage[66] = 63'h0000000000000000;
    storage[67] = 63'h0000000000000000;
    storage[68] = 63'h0000000000000000;
    storage[69] = 63'h0000000000000000;
    storage[70] = 63'h0000000000000000;
    storage[71] = 63'h0000000000000000;
    storage[72] = 63'h0000000000000000;
    storage[73] = 63'h0000000000000000;
    storage[74] = 63'h0000000000000000;
    storage[75] = 63'h0000000000000000;
    storage[76] = 63'h0000000000000000;
    storage[77] = 63'h0000000000000000;
    storage[78] = 63'h0000000000000000;
    storage[79] = 63'h0000000000000000;
    storage[80] = 63'h0000000000000000;
    storage[81] = 63'h0000000000000000;
    storage[82] = 63'h0000000000000000;
    storage[83] = 63'h0000000000000000;
    storage[84] = 63'h0000000000000000;
    storage[85] = 63'h0000000000000000;
    storage[86] = 63'h0000000000000000;
    storage[87] = 63'h0000000000000000;
    storage[88] = 63'h0000000000000000;
    storage[89] = 63'h0000000000000000;
    storage[90] = 63'h0000000000000000;
    storage[91] = 63'h0000000000000000;
    storage[92] = 63'h0000000000000000;
    storage[93] = 63'h0000000000000000;
    storage[94] = 63'h0000000000000000;
    storage[95] = 63'h0000000000000000;
    storage[96] = 63'h0000000000000000;
    storage[97] = 63'h0000000000000000;
    storage[98] = 63'h0000000000000000;
    storage[99] = 63'h0000000000000000;
    storage[100] = 63'h0000000000000000;
    storage[101] = 63'h0000000000000000;
    storage[102] = 63'h0000000000000000;
    storage[103] = 63'h0000000000000000;
    storage[104] = 63'h0000000000000000;
    storage[105] = 63'h0000000000000000;
    storage[106] = 63'h0000000000000000;
    storage[107] = 63'h0000000000000000;
    storage[108] = 63'h0000000000000000;
    storage[109] = 63'h0000000000000000;
    storage[110] = 63'h0000000000000000;
    storage[111] = 63'h0000000000000000;
    storage[112] = 63'h0000000000000000;
    storage[113] = 63'h0000000000000000;
    storage[114] = 63'h0000000000000000;
    storage[115] = 63'h0000000000000000;
    storage[116] = 63'h0000000000000000;
    storage[117] = 63'h0000000000000000;
    storage[118] = 63'h0000000000000000;
    storage[119] = 63'h0000000000000000;
    storage[120] = 63'h0000000000000000;
    storage[121] = 63'h0000000000000000;
    storage[122] = 63'h0000000000000000;
    storage[123] = 63'h0000000000000000;
    storage[124] = 63'h0000000000000000;
    storage[125] = 63'h0000000000000000;
    storage[126] = 63'h0000000000000000;
    storage[127] = 63'h0000000000000000;
    storage[128] = 63'h0000000000000000;
    storage[129] = 63'h0000000000000000;
    storage[130] = 63'h0000000000000000;
    storage[131] = 63'h0000000000000000;
    storage[132] = 63'h0000000000000000;
    storage[133] = 63'h0000000000000000;
    storage[134] = 63'h0000000000000000;
    storage[135] = 63'h0000000000000000;
    storage[136] = 63'h0000000000000000;
    storage[137] = 63'h0000000000000000;
    storage[138] = 63'h0000000000000000;
    storage[139] = 63'h0000000000000000;
    storage[140] = 63'h0000000000000000;
    storage[141] = 63'h0000000000000000;
    storage[142] = 63'h0000000000000000;
    storage[143] = 63'h0000000000000000;
    storage[144] = 63'h0000000000000000;
    storage[145] = 63'h0000000000000000;
    storage[146] = 63'h0000000000000000;
    storage[147] = 63'h0000000000000000;
    storage[148] = 63'h0000000000000000;
    storage[149] = 63'h0000000000000000;
    storage[150] = 63'h0000000000000000;
    storage[151] = 63'h0000000000000000;
    storage[152] = 63'h0000000000000000;
    storage[153] = 63'h0000000000000000;
    storage[154] = 63'h0000000000000000;
    storage[155] = 63'h0000000000000000;
    storage[156] = 63'h0000000000000000;
    storage[157] = 63'h0000000000000000;
    storage[158] = 63'h0000000000000000;
    storage[159] = 63'h0000000000000000;
    storage[160] = 63'h0000000000000000;
    storage[161] = 63'h0000000000000000;
    storage[162] = 63'h0000000000000000;
    storage[163] = 63'h0000000000000000;
    storage[164] = 63'h0000000000000000;
    storage[165] = 63'h0000000000000000;
    storage[166] = 63'h0000000000000000;
    storage[167] = 63'h0000000000000000;
    storage[168] = 63'h0000000000000000;
    storage[169] = 63'h0000000000000000;
    storage[170] = 63'h0000000000000000;
    storage[171] = 63'h0000000000000000;
    storage[172] = 63'h0000000000000000;
    storage[173] = 63'h0000000000000000;
    storage[174] = 63'h0000000000000000;
    storage[175] = 63'h0000000000000000;
    storage[176] = 63'h0000000000000000;
    storage[177] = 63'h0000000000000000;
    storage[178] = 63'h0000000000000000;
    storage[179] = 63'h0000000000000000;
    storage[180] = 63'h0000000000000000;
    storage[181] = 63'h0000000000000000;
    storage[182] = 63'h0000000000000000;
    storage[183] = 63'h0000000000000000;
    storage[184] = 63'h0000000000000000;
    storage[185] = 63'h0000000000000000;
    storage[186] = 63'h0000000000000000;
    storage[187] = 63'h0000000000000000;
    storage[188] = 63'h0000000000000000;
    storage[189] = 63'h0000000000000000;
    storage[190] = 63'h0000000000000000;
    storage[191] = 63'h0000000000000000;
    storage[192] = 63'h0000000000000000;
    storage[193] = 63'h0000000000000000;
    storage[194] = 63'h0000000000000000;
    storage[195] = 63'h0000000000000000;
    storage[196] = 63'h0000000000000000;
    storage[197] = 63'h0000000000000000;
    storage[198] = 63'h0000000000000000;
    storage[199] = 63'h0000000000000000;
    storage[200] = 63'h0000000000000000;
    storage[201] = 63'h0000000000000000;
    storage[202] = 63'h0000000000000000;
    storage[203] = 63'h0000000000000000;
    storage[204] = 63'h0000000000000000;
    storage[205] = 63'h0000000000000000;
    storage[206] = 63'h0000000000000000;
    storage[207] = 63'h0000000000000000;
    storage[208] = 63'h0000000000000000;
    storage[209] = 63'h0000000000000000;
    storage[210] = 63'h0000000000000000;
    storage[211] = 63'h0000000000000000;
    storage[212] = 63'h0000000000000000;
    storage[213] = 63'h0000000000000000;
    storage[214] = 63'h0000000000000000;
    storage[215] = 63'h0000000000000000;
    storage[216] = 63'h0000000000000000;
    storage[217] = 63'h0000000000000000;
    storage[218] = 63'h0000000000000000;
    storage[219] = 63'h0000000000000000;
    storage[220] = 63'h0000000000000000;
    storage[221] = 63'h0000000000000000;
    storage[222] = 63'h0000000000000000;
    storage[223] = 63'h0000000000000000;
    storage[224] = 63'h0000000000000000;
    storage[225] = 63'h0000000000000000;
    storage[226] = 63'h0000000000000000;
    storage[227] = 63'h0000000000000000;
    storage[228] = 63'h0000000000000000;
    storage[229] = 63'h0000000000000000;
    storage[230] = 63'h0000000000000000;
    storage[231] = 63'h0000000000000000;
    storage[232] = 63'h0000000000000000;
    storage[233] = 63'h0000000000000000;
    storage[234] = 63'h0000000000000000;
    storage[235] = 63'h0000000000000000;
    storage[236] = 63'h0000000000000000;
    storage[237] = 63'h0000000000000000;
    storage[238] = 63'h0000000000000000;
    storage[239] = 63'h0000000000000000;
    storage[240] = 63'h0000000000000000;
    storage[241] = 63'h0000000000000000;
    storage[242] = 63'h0000000000000000;
    storage[243] = 63'h0000000000000000;
    storage[244] = 63'h0000000000000000;
    storage[245] = 63'h0000000000000000;
    storage[246] = 63'h0000000000000000;
    storage[247] = 63'h0000000000000000;
    storage[248] = 63'h0000000000000000;
    storage[249] = 63'h0000000000000000;
    storage[250] = 63'h0000000000000000;
    storage[251] = 63'h0000000000000000;
    storage[252] = 63'h0000000000000000;
    storage[253] = 63'h0000000000000000;
    storage[254] = 63'h0000000000000000;
    storage[255] = 63'h0000000000000000;
    storage[256] = 63'h0000000000000000;
    storage[257] = 63'h0000000000000000;
    storage[258] = 63'h0000000000000000;
    storage[259] = 63'h0000000000000000;
    storage[260] = 63'h0000000000000000;
    storage[261] = 63'h0000000000000000;
    storage[262] = 63'h0000000000000000;
    storage[263] = 63'h0000000000000000;
    storage[264] = 63'h0000000000000000;
    storage[265] = 63'h0000000000000000;
    storage[266] = 63'h0000000000000000;
    storage[267] = 63'h0000000000000000;
    storage[268] = 63'h0000000000000000;
    storage[269] = 63'h0000000000000000;
    storage[270] = 63'h0000000000000000;
    storage[271] = 63'h0000000000000000;
    storage[272] = 63'h0000000000000000;
    storage[273] = 63'h0000000000000000;
    storage[274] = 63'h0000000000000000;
    storage[275] = 63'h0000000000000000;
    storage[276] = 63'h0000000000000000;
    storage[277] = 63'h0000000000000000;
    storage[278] = 63'h0000000000000000;
    storage[279] = 63'h0000000000000000;
    storage[280] = 63'h0000000000000000;
    storage[281] = 63'h0000000000000000;
    storage[282] = 63'h0000000000000000;
    storage[283] = 63'h0000000000000000;
    storage[284] = 63'h0000000000000000;
    storage[285] = 63'h0000000000000000;
    storage[286] = 63'h0000000000000000;
    storage[287] = 63'h0000000000000000;
    storage[288] = 63'h0000000000000000;
    storage[289] = 63'h0000000000000000;
    storage[290] = 63'h0000000000000000;
    storage[291] = 63'h0000000000000000;
    storage[292] = 63'h0000000000000000;
    storage[293] = 63'h0000000000000000;
    storage[294] = 63'h0000000000000000;
    storage[295] = 63'h0000000000000000;
    storage[296] = 63'h0000000000000000;
    storage[297] = 63'h0000000000000000;
    storage[298] = 63'h0000000000000000;
    storage[299] = 63'h0000000000000000;
    storage[300] = 63'h0000000000000000;
    storage[301] = 63'h0000000000000000;
    storage[302] = 63'h0000000000000000;
    storage[303] = 63'h0000000000000000;
    storage[304] = 63'h0000000000000000;
    storage[305] = 63'h0000000000000000;
    storage[306] = 63'h0000000000000000;
    storage[307] = 63'h0000000000000000;
    storage[308] = 63'h0000000000000000;
    storage[309] = 63'h0000000000000000;
    storage[310] = 63'h0000000000000000;
    storage[311] = 63'h0000000000000000;
    storage[312] = 63'h0000000000000000;
    storage[313] = 63'h0000000000000000;
    storage[314] = 63'h0000000000000000;
    storage[315] = 63'h0000000000000000;
    storage[316] = 63'h0000000000000000;
    storage[317] = 63'h0000000000000000;
    storage[318] = 63'h0000000000000000;
    storage[319] = 63'h0000000000000000;
    storage[320] = 63'h0000000000000000;
    storage[321] = 63'h0000000000000000;
    storage[322] = 63'h0000000000000000;
    storage[323] = 63'h0000000000000000;
    storage[324] = 63'h0000000000000000;
    storage[325] = 63'h0000000000000000;
    storage[326] = 63'h0000000000000000;
    storage[327] = 63'h0000000000000000;
    storage[328] = 63'h0000000000000000;
    storage[329] = 63'h0000000000000000;
    storage[330] = 63'h0000000000000000;
    storage[331] = 63'h0000000000000000;
    storage[332] = 63'h0000000000000000;
    storage[333] = 63'h0000000000000000;
    storage[334] = 63'h0000000000000000;
    storage[335] = 63'h0000000000000000;
    storage[336] = 63'h0000000000000000;
    storage[337] = 63'h0000000000000000;
    storage[338] = 63'h0000000000000000;
    storage[339] = 63'h0000000000000000;
    storage[340] = 63'h0000000000000000;
    storage[341] = 63'h0000000000000000;
    storage[342] = 63'h0000000000000000;
    storage[343] = 63'h0000000000000000;
    storage[344] = 63'h0000000000000000;
    storage[345] = 63'h0000000000000000;
    storage[346] = 63'h0000000000000000;
    storage[347] = 63'h0000000000000000;
    storage[348] = 63'h0000000000000000;
    storage[349] = 63'h0000000000000000;
    storage[350] = 63'h0000000000000000;
    storage[351] = 63'h0000000000000000;
    storage[352] = 63'h0000000000000000;
    storage[353] = 63'h0000000000000000;
    storage[354] = 63'h0000000000000000;
    storage[355] = 63'h0000000000000000;
    storage[356] = 63'h0000000000000000;
    storage[357] = 63'h0000000000000000;
    storage[358] = 63'h0000000000000000;
    storage[359] = 63'h0000000000000000;
    storage[360] = 63'h0000000000000000;
    storage[361] = 63'h0000000000000000;
    storage[362] = 63'h0000000000000000;
    storage[363] = 63'h0000000000000000;
    storage[364] = 63'h0000000000000000;
    storage[365] = 63'h0000000000000000;
    storage[366] = 63'h0000000000000000;
    storage[367] = 63'h0000000000000000;
    storage[368] = 63'h0000000000000000;
    storage[369] = 63'h0000000000000000;
    storage[370] = 63'h0000000000000000;
    storage[371] = 63'h0000000000000000;
    storage[372] = 63'h0000000000000000;
    storage[373] = 63'h0000000000000000;
    storage[374] = 63'h0000000000000000;
    storage[375] = 63'h0000000000000000;
    storage[376] = 63'h0000000000000000;
    storage[377] = 63'h0000000000000000;
    storage[378] = 63'h0000000000000000;
    storage[379] = 63'h0000000000000000;
    storage[380] = 63'h0000000000000000;
    storage[381] = 63'h0000000000000000;
    storage[382] = 63'h0000000000000000;
    storage[383] = 63'h0000000000000000;
    storage[384] = 63'h0000000000000000;
    storage[385] = 63'h0000000000000000;
    storage[386] = 63'h0000000000000000;
    storage[387] = 63'h0000000000000000;
    storage[388] = 63'h0000000000000000;
    storage[389] = 63'h0000000000000000;
    storage[390] = 63'h0000000000000000;
    storage[391] = 63'h0000000000000000;
    storage[392] = 63'h0000000000000000;
    storage[393] = 63'h0000000000000000;
    storage[394] = 63'h0000000000000000;
    storage[395] = 63'h0000000000000000;
    storage[396] = 63'h0000000000000000;
    storage[397] = 63'h0000000000000000;
    storage[398] = 63'h0000000000000000;
    storage[399] = 63'h0000000000000000;
    storage[400] = 63'h0000000000000000;
    storage[401] = 63'h0000000000000000;
    storage[402] = 63'h0000000000000000;
    storage[403] = 63'h0000000000000000;
    storage[404] = 63'h0000000000000000;
    storage[405] = 63'h0000000000000000;
    storage[406] = 63'h0000000000000000;
    storage[407] = 63'h0000000000000000;
    storage[408] = 63'h0000000000000000;
    storage[409] = 63'h0000000000000000;
    storage[410] = 63'h0000000000000000;
    storage[411] = 63'h0000000000000000;
    storage[412] = 63'h0000000000000000;
    storage[413] = 63'h0000000000000000;
    storage[414] = 63'h0000000000000000;
    storage[415] = 63'h0000000000000000;
    storage[416] = 63'h0000000000000000;
    storage[417] = 63'h0000000000000000;
    storage[418] = 63'h0000000000000000;
    storage[419] = 63'h0000000000000000;
    storage[420] = 63'h0000000000000000;
    storage[421] = 63'h0000000000000000;
    storage[422] = 63'h0000000000000000;
    storage[423] = 63'h0000000000000000;
    storage[424] = 63'h0000000000000000;
    storage[425] = 63'h0000000000000000;
    storage[426] = 63'h0000000000000000;
    storage[427] = 63'h0000000000000000;
    storage[428] = 63'h0000000000000000;
    storage[429] = 63'h0000000000000000;
    storage[430] = 63'h0000000000000000;
    storage[431] = 63'h0000000000000000;
    storage[432] = 63'h0000000000000000;
    storage[433] = 63'h0000000000000000;
    storage[434] = 63'h0000000000000000;
    storage[435] = 63'h0000000000000000;
    storage[436] = 63'h0000000000000000;
    storage[437] = 63'h0000000000000000;
    storage[438] = 63'h0000000000000000;
    storage[439] = 63'h0000000000000000;
    storage[440] = 63'h0000000000000000;
    storage[441] = 63'h0000000000000000;
    storage[442] = 63'h0000000000000000;
    storage[443] = 63'h0000000000000000;
    storage[444] = 63'h0000000000000000;
    storage[445] = 63'h0000000000000000;
    storage[446] = 63'h0000000000000000;
    storage[447] = 63'h0000000000000000;
    storage[448] = 63'h0000000000000000;
    storage[449] = 63'h0000000000000000;
    storage[450] = 63'h0000000000000000;
    storage[451] = 63'h0000000000000000;
    storage[452] = 63'h0000000000000000;
    storage[453] = 63'h0000000000000000;
    storage[454] = 63'h0000000000000000;
    storage[455] = 63'h0000000000000000;
    storage[456] = 63'h0000000000000000;
    storage[457] = 63'h0000000000000000;
    storage[458] = 63'h0000000000000000;
    storage[459] = 63'h0000000000000000;
    storage[460] = 63'h0000000000000000;
    storage[461] = 63'h0000000000000000;
    storage[462] = 63'h0000000000000000;
    storage[463] = 63'h0000000000000000;
    storage[464] = 63'h0000000000000000;
    storage[465] = 63'h0000000000000000;
    storage[466] = 63'h0000000000000000;
    storage[467] = 63'h0000000000000000;
    storage[468] = 63'h0000000000000000;
    storage[469] = 63'h0000000000000000;
    storage[470] = 63'h0000000000000000;
    storage[471] = 63'h0000000000000000;
    storage[472] = 63'h0000000000000000;
    storage[473] = 63'h0000000000000000;
    storage[474] = 63'h0000000000000000;
    storage[475] = 63'h0000000000000000;
    storage[476] = 63'h0000000000000000;
    storage[477] = 63'h0000000000000000;
    storage[478] = 63'h0000000000000000;
    storage[479] = 63'h0000000000000000;
    storage[480] = 63'h0000000000000000;
    storage[481] = 63'h0000000000000000;
    storage[482] = 63'h0000000000000000;
    storage[483] = 63'h0000000000000000;
    storage[484] = 63'h0000000000000000;
    storage[485] = 63'h0000000000000000;
    storage[486] = 63'h0000000000000000;
    storage[487] = 63'h0000000000000000;
    storage[488] = 63'h0000000000000000;
    storage[489] = 63'h0000000000000000;
    storage[490] = 63'h0000000000000000;
    storage[491] = 63'h0000000000000000;
    storage[492] = 63'h0000000000000000;
    storage[493] = 63'h0000000000000000;
    storage[494] = 63'h0000000000000000;
    storage[495] = 63'h0000000000000000;
    storage[496] = 63'h0000000000000000;
    storage[497] = 63'h0000000000000000;
    storage[498] = 63'h0000000000000000;
    storage[499] = 63'h0000000000000000;
    storage[500] = 63'h0000000000000000;
    storage[501] = 63'h0000000000000000;
    storage[502] = 63'h0000000000000000;
    storage[503] = 63'h0000000000000000;
    storage[504] = 63'h0000000000000000;
    storage[505] = 63'h0000000000000000;
    storage[506] = 63'h0000000000000000;
    storage[507] = 63'h0000000000000000;
    storage[508] = 63'h0000000000000000;
    storage[509] = 63'h0000000000000000;
    storage[510] = 63'h0000000000000000;
  end
  reg [62:0] _0_;
  always @(posedge clk) begin
    if (\$next\rdport_storage_r_en ) _0_ <= storage[\$next\rdport_storage_r_addr ];
    if (\$next\wrport_storage_w_en ) storage[\$next\wrport_storage_w_addr ] <= \$next\wrport_storage_w_data ;
  end
  assign rdport_storage_r_data = _0_;
  always @* begin
    \$next\writable  = 1'h0;
    \$next\writable  = \$2 ;
  end
  always @* begin
    \$next\readable  = 1'h0;
    \$next\readable  = \$4 ;
  end
  always @* begin
    \$next\level  = level;
    casez (\$49 )
      1'h1:
          \$next\level  = \$51 [8:0];
    endcase
    casez (\$64 )
      1'h1:
          \$next\level  = \$66 [8:0];
    endcase
    casez (rst)
      1'h1:
          \$next\level  = 9'h000;
    endcase
  end
  always @* begin
    \$next\wrport_storage_w_addr  = 9'h000;
    \$next\wrport_storage_w_addr  = produce;
    casez (replace)
      1'h1:
          \$next\wrport_storage_w_addr  = \$6 [8:0];
    endcase
  end
  always @* begin
    \$next\wrport_storage_w_data  = 63'h0000000000000000;
    \$next\wrport_storage_w_data  = din;
  end
  always @* begin
    \$next\wrport_storage_w_en  = 1'h0;
    \$next\wrport_storage_w_en  = \$15 ;
  end
  always @* begin
    \$next\produce  = produce;
    casez (\$21 )
      1'h1:
          \$next\produce  = \$23 [8:0];
    endcase
    casez (rst)
      1'h1:
          \$next\produce  = 9'h000;
    endcase
  end
  always @* begin
    \$next\rdport_storage_r_addr  = 9'h000;
    \$next\rdport_storage_r_addr  = consume;
  end
  always @* begin
    \$next\dout  = 63'h0000000000000000;
    \$next\dout  = rdport_storage_r_data;
  end
  always @* begin
    \$next\rdport_storage_r_en  = 1'h0;
    \$next\rdport_storage_r_en  = re;
  end
  always @* begin
    \$next\consume  = consume;
    casez (\$30 )
      1'h1:
          \$next\consume  = \$32 [8:0];
    endcase
    casez (rst)
      1'h1:
          \$next\consume  = 9'h000;
    endcase
  end
  assign \$6  = \$9 ;
  assign \$23  = \$26 ;
  assign \$32  = \$35 ;
  assign \$51  = \$52 ;
  assign \$66  = \$67 ;
  assign rdport_storage_r_en = \$next\rdport_storage_r_en ;
  assign dout = \$next\dout ;
  assign rdport_storage_r_addr = \$next\rdport_storage_r_addr ;
  assign wrport_storage_w_en = \$next\wrport_storage_w_en ;
  assign wrport_storage_w_data = \$next\wrport_storage_w_data ;
  assign wrport_storage_w_addr = \$next\wrport_storage_w_addr ;
  assign readable = \$next\readable ;
  assign writable = \$next\writable ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.integration_2.converter_fifo.fifo.unbuffered" *)
(* generator = "nMigen" *)
module \unbuffered$6 (we, replace, re, rst, clk, writable, readable, dout, level, din);
  wire \$10 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$2 ;
  wire \$21 ;
  wire [9:0] \$23 ;
  wire [9:0] \$24 ;
  wire [9:0] \$26 ;
  wire \$27 ;
  wire \$30 ;
  wire [9:0] \$32 ;
  wire [9:0] \$33 ;
  wire [9:0] \$35 ;
  wire \$36 ;
  wire \$39 ;
  wire \$4 ;
  wire \$41 ;
  wire \$43 ;
  wire \$45 ;
  wire \$46 ;
  wire \$49 ;
  wire [9:0] \$51 ;
  wire [9:0] \$52 ;
  wire \$54 ;
  wire \$56 ;
  wire \$57 ;
  wire \$59 ;
  wire [9:0] \$6 ;
  wire \$61 ;
  wire \$64 ;
  wire [9:0] \$66 ;
  wire [9:0] \$67 ;
  wire [9:0] \$7 ;
  wire [9:0] \$9 ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:156" *)
  reg [8:0] \$next\consume ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  reg [29:0] \$next\dout ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  reg [8:0] \$next\level ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:155" *)
  reg [8:0] \$next\produce ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  reg [8:0] \$next\rdport_storage_r_addr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:85" *)
  reg \$next\rdport_storage_r_en ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  reg \$next\readable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  reg \$next\writable ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:146" *)
  reg [8:0] \$next\wrport_storage_w_addr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:148" *)
  reg [29:0] \$next\wrport_storage_w_data ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:150" *)
  reg \$next\wrport_storage_w_en ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* init = 9'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:156" *)
  reg [8:0] consume = 9'h000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:65" *)
  input [29:0] din;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:69" *)
  output [29:0] dout;
  (* init = 9'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:138" *)
  output [8:0] level;
  reg [8:0] level = 9'h000;
  (* init = 9'h000 *)
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:155" *)
  reg [8:0] produce = 9'h000;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:81" *)
  wire [8:0] rdport_storage_r_addr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:83" *)
  wire [29:0] rdport_storage_r_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:85" *)
  wire rdport_storage_r_en;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:71" *)
  input re;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:70" *)
  output readable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:139" *)
  input replace;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:67" *)
  input we;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:66" *)
  output writable;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:146" *)
  wire [8:0] wrport_storage_w_addr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:148" *)
  wire [29:0] wrport_storage_w_data;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:150" *)
  wire wrport_storage_w_en;
  assign \$10  = produce == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:102" *) 1'h0;
  assign \$9  = \$10  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:164" *) 10'h1fe : \$7 ;
  assign \$13  = writable | (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:161" *) replace;
  assign \$15  = we & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:161" *) \$13 ;
  assign \$17  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$19  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$21  = \$17  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$19 ;
  assign \$24  = produce + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 1'h1;
  assign \$27  = produce == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 9'h1fe;
  assign \$26  = \$27  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:166" *) 10'h000 : \$24 ;
  assign \$2  = level != (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:144" *) 9'h1ff;
  assign \$30  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$33  = consume + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 1'h1;
  assign \$36  = consume == (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:95" *) 9'h1fe;
  assign \$35  = \$36  ? (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:175" *) 10'h000 : \$33 ;
  assign \$39  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$41  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$43  = \$39  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$41 ;
  assign \$46  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$45  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:177" *) \$46 ;
  assign \$4  = level != (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:145" *) 1'h0;
  assign \$49  = \$43  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:177" *) \$45 ;
  assign \$52  = level + (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:178" *) 1'h1;
  assign \$54  = readable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:148" *) re;
  assign \$57  = writable & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) we;
  assign \$59  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) replace;
  assign \$61  = \$57  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:149" *) \$59 ;
  assign \$56  = ~ (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:179" *) \$61 ;
  assign \$64  = \$54  & (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:179" *) \$56 ;
  assign \$67  = level - (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:180" *) 1'h1;
  assign \$7  = produce - (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/lib/fifo.py:102" *) 1'h1;
  always @(posedge clk)
      level <= \$next\level ;
  always @(posedge clk)
      consume <= \$next\consume ;
  always @(posedge clk)
      produce <= \$next\produce ;
  reg [29:0] storage [510:0];
  initial begin
    storage[0] = 30'h00000000;
    storage[1] = 30'h00000000;
    storage[2] = 30'h00000000;
    storage[3] = 30'h00000000;
    storage[4] = 30'h00000000;
    storage[5] = 30'h00000000;
    storage[6] = 30'h00000000;
    storage[7] = 30'h00000000;
    storage[8] = 30'h00000000;
    storage[9] = 30'h00000000;
    storage[10] = 30'h00000000;
    storage[11] = 30'h00000000;
    storage[12] = 30'h00000000;
    storage[13] = 30'h00000000;
    storage[14] = 30'h00000000;
    storage[15] = 30'h00000000;
    storage[16] = 30'h00000000;
    storage[17] = 30'h00000000;
    storage[18] = 30'h00000000;
    storage[19] = 30'h00000000;
    storage[20] = 30'h00000000;
    storage[21] = 30'h00000000;
    storage[22] = 30'h00000000;
    storage[23] = 30'h00000000;
    storage[24] = 30'h00000000;
    storage[25] = 30'h00000000;
    storage[26] = 30'h00000000;
    storage[27] = 30'h00000000;
    storage[28] = 30'h00000000;
    storage[29] = 30'h00000000;
    storage[30] = 30'h00000000;
    storage[31] = 30'h00000000;
    storage[32] = 30'h00000000;
    storage[33] = 30'h00000000;
    storage[34] = 30'h00000000;
    storage[35] = 30'h00000000;
    storage[36] = 30'h00000000;
    storage[37] = 30'h00000000;
    storage[38] = 30'h00000000;
    storage[39] = 30'h00000000;
    storage[40] = 30'h00000000;
    storage[41] = 30'h00000000;
    storage[42] = 30'h00000000;
    storage[43] = 30'h00000000;
    storage[44] = 30'h00000000;
    storage[45] = 30'h00000000;
    storage[46] = 30'h00000000;
    storage[47] = 30'h00000000;
    storage[48] = 30'h00000000;
    storage[49] = 30'h00000000;
    storage[50] = 30'h00000000;
    storage[51] = 30'h00000000;
    storage[52] = 30'h00000000;
    storage[53] = 30'h00000000;
    storage[54] = 30'h00000000;
    storage[55] = 30'h00000000;
    storage[56] = 30'h00000000;
    storage[57] = 30'h00000000;
    storage[58] = 30'h00000000;
    storage[59] = 30'h00000000;
    storage[60] = 30'h00000000;
    storage[61] = 30'h00000000;
    storage[62] = 30'h00000000;
    storage[63] = 30'h00000000;
    storage[64] = 30'h00000000;
    storage[65] = 30'h00000000;
    storage[66] = 30'h00000000;
    storage[67] = 30'h00000000;
    storage[68] = 30'h00000000;
    storage[69] = 30'h00000000;
    storage[70] = 30'h00000000;
    storage[71] = 30'h00000000;
    storage[72] = 30'h00000000;
    storage[73] = 30'h00000000;
    storage[74] = 30'h00000000;
    storage[75] = 30'h00000000;
    storage[76] = 30'h00000000;
    storage[77] = 30'h00000000;
    storage[78] = 30'h00000000;
    storage[79] = 30'h00000000;
    storage[80] = 30'h00000000;
    storage[81] = 30'h00000000;
    storage[82] = 30'h00000000;
    storage[83] = 30'h00000000;
    storage[84] = 30'h00000000;
    storage[85] = 30'h00000000;
    storage[86] = 30'h00000000;
    storage[87] = 30'h00000000;
    storage[88] = 30'h00000000;
    storage[89] = 30'h00000000;
    storage[90] = 30'h00000000;
    storage[91] = 30'h00000000;
    storage[92] = 30'h00000000;
    storage[93] = 30'h00000000;
    storage[94] = 30'h00000000;
    storage[95] = 30'h00000000;
    storage[96] = 30'h00000000;
    storage[97] = 30'h00000000;
    storage[98] = 30'h00000000;
    storage[99] = 30'h00000000;
    storage[100] = 30'h00000000;
    storage[101] = 30'h00000000;
    storage[102] = 30'h00000000;
    storage[103] = 30'h00000000;
    storage[104] = 30'h00000000;
    storage[105] = 30'h00000000;
    storage[106] = 30'h00000000;
    storage[107] = 30'h00000000;
    storage[108] = 30'h00000000;
    storage[109] = 30'h00000000;
    storage[110] = 30'h00000000;
    storage[111] = 30'h00000000;
    storage[112] = 30'h00000000;
    storage[113] = 30'h00000000;
    storage[114] = 30'h00000000;
    storage[115] = 30'h00000000;
    storage[116] = 30'h00000000;
    storage[117] = 30'h00000000;
    storage[118] = 30'h00000000;
    storage[119] = 30'h00000000;
    storage[120] = 30'h00000000;
    storage[121] = 30'h00000000;
    storage[122] = 30'h00000000;
    storage[123] = 30'h00000000;
    storage[124] = 30'h00000000;
    storage[125] = 30'h00000000;
    storage[126] = 30'h00000000;
    storage[127] = 30'h00000000;
    storage[128] = 30'h00000000;
    storage[129] = 30'h00000000;
    storage[130] = 30'h00000000;
    storage[131] = 30'h00000000;
    storage[132] = 30'h00000000;
    storage[133] = 30'h00000000;
    storage[134] = 30'h00000000;
    storage[135] = 30'h00000000;
    storage[136] = 30'h00000000;
    storage[137] = 30'h00000000;
    storage[138] = 30'h00000000;
    storage[139] = 30'h00000000;
    storage[140] = 30'h00000000;
    storage[141] = 30'h00000000;
    storage[142] = 30'h00000000;
    storage[143] = 30'h00000000;
    storage[144] = 30'h00000000;
    storage[145] = 30'h00000000;
    storage[146] = 30'h00000000;
    storage[147] = 30'h00000000;
    storage[148] = 30'h00000000;
    storage[149] = 30'h00000000;
    storage[150] = 30'h00000000;
    storage[151] = 30'h00000000;
    storage[152] = 30'h00000000;
    storage[153] = 30'h00000000;
    storage[154] = 30'h00000000;
    storage[155] = 30'h00000000;
    storage[156] = 30'h00000000;
    storage[157] = 30'h00000000;
    storage[158] = 30'h00000000;
    storage[159] = 30'h00000000;
    storage[160] = 30'h00000000;
    storage[161] = 30'h00000000;
    storage[162] = 30'h00000000;
    storage[163] = 30'h00000000;
    storage[164] = 30'h00000000;
    storage[165] = 30'h00000000;
    storage[166] = 30'h00000000;
    storage[167] = 30'h00000000;
    storage[168] = 30'h00000000;
    storage[169] = 30'h00000000;
    storage[170] = 30'h00000000;
    storage[171] = 30'h00000000;
    storage[172] = 30'h00000000;
    storage[173] = 30'h00000000;
    storage[174] = 30'h00000000;
    storage[175] = 30'h00000000;
    storage[176] = 30'h00000000;
    storage[177] = 30'h00000000;
    storage[178] = 30'h00000000;
    storage[179] = 30'h00000000;
    storage[180] = 30'h00000000;
    storage[181] = 30'h00000000;
    storage[182] = 30'h00000000;
    storage[183] = 30'h00000000;
    storage[184] = 30'h00000000;
    storage[185] = 30'h00000000;
    storage[186] = 30'h00000000;
    storage[187] = 30'h00000000;
    storage[188] = 30'h00000000;
    storage[189] = 30'h00000000;
    storage[190] = 30'h00000000;
    storage[191] = 30'h00000000;
    storage[192] = 30'h00000000;
    storage[193] = 30'h00000000;
    storage[194] = 30'h00000000;
    storage[195] = 30'h00000000;
    storage[196] = 30'h00000000;
    storage[197] = 30'h00000000;
    storage[198] = 30'h00000000;
    storage[199] = 30'h00000000;
    storage[200] = 30'h00000000;
    storage[201] = 30'h00000000;
    storage[202] = 30'h00000000;
    storage[203] = 30'h00000000;
    storage[204] = 30'h00000000;
    storage[205] = 30'h00000000;
    storage[206] = 30'h00000000;
    storage[207] = 30'h00000000;
    storage[208] = 30'h00000000;
    storage[209] = 30'h00000000;
    storage[210] = 30'h00000000;
    storage[211] = 30'h00000000;
    storage[212] = 30'h00000000;
    storage[213] = 30'h00000000;
    storage[214] = 30'h00000000;
    storage[215] = 30'h00000000;
    storage[216] = 30'h00000000;
    storage[217] = 30'h00000000;
    storage[218] = 30'h00000000;
    storage[219] = 30'h00000000;
    storage[220] = 30'h00000000;
    storage[221] = 30'h00000000;
    storage[222] = 30'h00000000;
    storage[223] = 30'h00000000;
    storage[224] = 30'h00000000;
    storage[225] = 30'h00000000;
    storage[226] = 30'h00000000;
    storage[227] = 30'h00000000;
    storage[228] = 30'h00000000;
    storage[229] = 30'h00000000;
    storage[230] = 30'h00000000;
    storage[231] = 30'h00000000;
    storage[232] = 30'h00000000;
    storage[233] = 30'h00000000;
    storage[234] = 30'h00000000;
    storage[235] = 30'h00000000;
    storage[236] = 30'h00000000;
    storage[237] = 30'h00000000;
    storage[238] = 30'h00000000;
    storage[239] = 30'h00000000;
    storage[240] = 30'h00000000;
    storage[241] = 30'h00000000;
    storage[242] = 30'h00000000;
    storage[243] = 30'h00000000;
    storage[244] = 30'h00000000;
    storage[245] = 30'h00000000;
    storage[246] = 30'h00000000;
    storage[247] = 30'h00000000;
    storage[248] = 30'h00000000;
    storage[249] = 30'h00000000;
    storage[250] = 30'h00000000;
    storage[251] = 30'h00000000;
    storage[252] = 30'h00000000;
    storage[253] = 30'h00000000;
    storage[254] = 30'h00000000;
    storage[255] = 30'h00000000;
    storage[256] = 30'h00000000;
    storage[257] = 30'h00000000;
    storage[258] = 30'h00000000;
    storage[259] = 30'h00000000;
    storage[260] = 30'h00000000;
    storage[261] = 30'h00000000;
    storage[262] = 30'h00000000;
    storage[263] = 30'h00000000;
    storage[264] = 30'h00000000;
    storage[265] = 30'h00000000;
    storage[266] = 30'h00000000;
    storage[267] = 30'h00000000;
    storage[268] = 30'h00000000;
    storage[269] = 30'h00000000;
    storage[270] = 30'h00000000;
    storage[271] = 30'h00000000;
    storage[272] = 30'h00000000;
    storage[273] = 30'h00000000;
    storage[274] = 30'h00000000;
    storage[275] = 30'h00000000;
    storage[276] = 30'h00000000;
    storage[277] = 30'h00000000;
    storage[278] = 30'h00000000;
    storage[279] = 30'h00000000;
    storage[280] = 30'h00000000;
    storage[281] = 30'h00000000;
    storage[282] = 30'h00000000;
    storage[283] = 30'h00000000;
    storage[284] = 30'h00000000;
    storage[285] = 30'h00000000;
    storage[286] = 30'h00000000;
    storage[287] = 30'h00000000;
    storage[288] = 30'h00000000;
    storage[289] = 30'h00000000;
    storage[290] = 30'h00000000;
    storage[291] = 30'h00000000;
    storage[292] = 30'h00000000;
    storage[293] = 30'h00000000;
    storage[294] = 30'h00000000;
    storage[295] = 30'h00000000;
    storage[296] = 30'h00000000;
    storage[297] = 30'h00000000;
    storage[298] = 30'h00000000;
    storage[299] = 30'h00000000;
    storage[300] = 30'h00000000;
    storage[301] = 30'h00000000;
    storage[302] = 30'h00000000;
    storage[303] = 30'h00000000;
    storage[304] = 30'h00000000;
    storage[305] = 30'h00000000;
    storage[306] = 30'h00000000;
    storage[307] = 30'h00000000;
    storage[308] = 30'h00000000;
    storage[309] = 30'h00000000;
    storage[310] = 30'h00000000;
    storage[311] = 30'h00000000;
    storage[312] = 30'h00000000;
    storage[313] = 30'h00000000;
    storage[314] = 30'h00000000;
    storage[315] = 30'h00000000;
    storage[316] = 30'h00000000;
    storage[317] = 30'h00000000;
    storage[318] = 30'h00000000;
    storage[319] = 30'h00000000;
    storage[320] = 30'h00000000;
    storage[321] = 30'h00000000;
    storage[322] = 30'h00000000;
    storage[323] = 30'h00000000;
    storage[324] = 30'h00000000;
    storage[325] = 30'h00000000;
    storage[326] = 30'h00000000;
    storage[327] = 30'h00000000;
    storage[328] = 30'h00000000;
    storage[329] = 30'h00000000;
    storage[330] = 30'h00000000;
    storage[331] = 30'h00000000;
    storage[332] = 30'h00000000;
    storage[333] = 30'h00000000;
    storage[334] = 30'h00000000;
    storage[335] = 30'h00000000;
    storage[336] = 30'h00000000;
    storage[337] = 30'h00000000;
    storage[338] = 30'h00000000;
    storage[339] = 30'h00000000;
    storage[340] = 30'h00000000;
    storage[341] = 30'h00000000;
    storage[342] = 30'h00000000;
    storage[343] = 30'h00000000;
    storage[344] = 30'h00000000;
    storage[345] = 30'h00000000;
    storage[346] = 30'h00000000;
    storage[347] = 30'h00000000;
    storage[348] = 30'h00000000;
    storage[349] = 30'h00000000;
    storage[350] = 30'h00000000;
    storage[351] = 30'h00000000;
    storage[352] = 30'h00000000;
    storage[353] = 30'h00000000;
    storage[354] = 30'h00000000;
    storage[355] = 30'h00000000;
    storage[356] = 30'h00000000;
    storage[357] = 30'h00000000;
    storage[358] = 30'h00000000;
    storage[359] = 30'h00000000;
    storage[360] = 30'h00000000;
    storage[361] = 30'h00000000;
    storage[362] = 30'h00000000;
    storage[363] = 30'h00000000;
    storage[364] = 30'h00000000;
    storage[365] = 30'h00000000;
    storage[366] = 30'h00000000;
    storage[367] = 30'h00000000;
    storage[368] = 30'h00000000;
    storage[369] = 30'h00000000;
    storage[370] = 30'h00000000;
    storage[371] = 30'h00000000;
    storage[372] = 30'h00000000;
    storage[373] = 30'h00000000;
    storage[374] = 30'h00000000;
    storage[375] = 30'h00000000;
    storage[376] = 30'h00000000;
    storage[377] = 30'h00000000;
    storage[378] = 30'h00000000;
    storage[379] = 30'h00000000;
    storage[380] = 30'h00000000;
    storage[381] = 30'h00000000;
    storage[382] = 30'h00000000;
    storage[383] = 30'h00000000;
    storage[384] = 30'h00000000;
    storage[385] = 30'h00000000;
    storage[386] = 30'h00000000;
    storage[387] = 30'h00000000;
    storage[388] = 30'h00000000;
    storage[389] = 30'h00000000;
    storage[390] = 30'h00000000;
    storage[391] = 30'h00000000;
    storage[392] = 30'h00000000;
    storage[393] = 30'h00000000;
    storage[394] = 30'h00000000;
    storage[395] = 30'h00000000;
    storage[396] = 30'h00000000;
    storage[397] = 30'h00000000;
    storage[398] = 30'h00000000;
    storage[399] = 30'h00000000;
    storage[400] = 30'h00000000;
    storage[401] = 30'h00000000;
    storage[402] = 30'h00000000;
    storage[403] = 30'h00000000;
    storage[404] = 30'h00000000;
    storage[405] = 30'h00000000;
    storage[406] = 30'h00000000;
    storage[407] = 30'h00000000;
    storage[408] = 30'h00000000;
    storage[409] = 30'h00000000;
    storage[410] = 30'h00000000;
    storage[411] = 30'h00000000;
    storage[412] = 30'h00000000;
    storage[413] = 30'h00000000;
    storage[414] = 30'h00000000;
    storage[415] = 30'h00000000;
    storage[416] = 30'h00000000;
    storage[417] = 30'h00000000;
    storage[418] = 30'h00000000;
    storage[419] = 30'h00000000;
    storage[420] = 30'h00000000;
    storage[421] = 30'h00000000;
    storage[422] = 30'h00000000;
    storage[423] = 30'h00000000;
    storage[424] = 30'h00000000;
    storage[425] = 30'h00000000;
    storage[426] = 30'h00000000;
    storage[427] = 30'h00000000;
    storage[428] = 30'h00000000;
    storage[429] = 30'h00000000;
    storage[430] = 30'h00000000;
    storage[431] = 30'h00000000;
    storage[432] = 30'h00000000;
    storage[433] = 30'h00000000;
    storage[434] = 30'h00000000;
    storage[435] = 30'h00000000;
    storage[436] = 30'h00000000;
    storage[437] = 30'h00000000;
    storage[438] = 30'h00000000;
    storage[439] = 30'h00000000;
    storage[440] = 30'h00000000;
    storage[441] = 30'h00000000;
    storage[442] = 30'h00000000;
    storage[443] = 30'h00000000;
    storage[444] = 30'h00000000;
    storage[445] = 30'h00000000;
    storage[446] = 30'h00000000;
    storage[447] = 30'h00000000;
    storage[448] = 30'h00000000;
    storage[449] = 30'h00000000;
    storage[450] = 30'h00000000;
    storage[451] = 30'h00000000;
    storage[452] = 30'h00000000;
    storage[453] = 30'h00000000;
    storage[454] = 30'h00000000;
    storage[455] = 30'h00000000;
    storage[456] = 30'h00000000;
    storage[457] = 30'h00000000;
    storage[458] = 30'h00000000;
    storage[459] = 30'h00000000;
    storage[460] = 30'h00000000;
    storage[461] = 30'h00000000;
    storage[462] = 30'h00000000;
    storage[463] = 30'h00000000;
    storage[464] = 30'h00000000;
    storage[465] = 30'h00000000;
    storage[466] = 30'h00000000;
    storage[467] = 30'h00000000;
    storage[468] = 30'h00000000;
    storage[469] = 30'h00000000;
    storage[470] = 30'h00000000;
    storage[471] = 30'h00000000;
    storage[472] = 30'h00000000;
    storage[473] = 30'h00000000;
    storage[474] = 30'h00000000;
    storage[475] = 30'h00000000;
    storage[476] = 30'h00000000;
    storage[477] = 30'h00000000;
    storage[478] = 30'h00000000;
    storage[479] = 30'h00000000;
    storage[480] = 30'h00000000;
    storage[481] = 30'h00000000;
    storage[482] = 30'h00000000;
    storage[483] = 30'h00000000;
    storage[484] = 30'h00000000;
    storage[485] = 30'h00000000;
    storage[486] = 30'h00000000;
    storage[487] = 30'h00000000;
    storage[488] = 30'h00000000;
    storage[489] = 30'h00000000;
    storage[490] = 30'h00000000;
    storage[491] = 30'h00000000;
    storage[492] = 30'h00000000;
    storage[493] = 30'h00000000;
    storage[494] = 30'h00000000;
    storage[495] = 30'h00000000;
    storage[496] = 30'h00000000;
    storage[497] = 30'h00000000;
    storage[498] = 30'h00000000;
    storage[499] = 30'h00000000;
    storage[500] = 30'h00000000;
    storage[501] = 30'h00000000;
    storage[502] = 30'h00000000;
    storage[503] = 30'h00000000;
    storage[504] = 30'h00000000;
    storage[505] = 30'h00000000;
    storage[506] = 30'h00000000;
    storage[507] = 30'h00000000;
    storage[508] = 30'h00000000;
    storage[509] = 30'h00000000;
    storage[510] = 30'h00000000;
  end
  reg [29:0] _0_;
  always @(posedge clk) begin
    if (\$next\rdport_storage_r_en ) _0_ <= storage[\$next\rdport_storage_r_addr ];
    if (\$next\wrport_storage_w_en ) storage[\$next\wrport_storage_w_addr ] <= \$next\wrport_storage_w_data ;
  end
  assign rdport_storage_r_data = _0_;
  always @* begin
    \$next\writable  = 1'h0;
    \$next\writable  = \$2 ;
  end
  always @* begin
    \$next\readable  = 1'h0;
    \$next\readable  = \$4 ;
  end
  always @* begin
    \$next\level  = level;
    casez (\$49 )
      1'h1:
          \$next\level  = \$51 [8:0];
    endcase
    casez (\$64 )
      1'h1:
          \$next\level  = \$66 [8:0];
    endcase
    casez (rst)
      1'h1:
          \$next\level  = 9'h000;
    endcase
  end
  always @* begin
    \$next\wrport_storage_w_addr  = 9'h000;
    \$next\wrport_storage_w_addr  = produce;
    casez (replace)
      1'h1:
          \$next\wrport_storage_w_addr  = \$6 [8:0];
    endcase
  end
  always @* begin
    \$next\wrport_storage_w_data  = 30'h00000000;
    \$next\wrport_storage_w_data  = din;
  end
  always @* begin
    \$next\wrport_storage_w_en  = 1'h0;
    \$next\wrport_storage_w_en  = \$15 ;
  end
  always @* begin
    \$next\produce  = produce;
    casez (\$21 )
      1'h1:
          \$next\produce  = \$23 [8:0];
    endcase
    casez (rst)
      1'h1:
          \$next\produce  = 9'h000;
    endcase
  end
  always @* begin
    \$next\rdport_storage_r_addr  = 9'h000;
    \$next\rdport_storage_r_addr  = consume;
  end
  always @* begin
    \$next\dout  = 30'h00000000;
    \$next\dout  = rdport_storage_r_data;
  end
  always @* begin
    \$next\rdport_storage_r_en  = 1'h0;
    \$next\rdport_storage_r_en  = re;
  end
  always @* begin
    \$next\consume  = consume;
    casez (\$30 )
      1'h1:
          \$next\consume  = \$32 [8:0];
    endcase
    casez (rst)
      1'h1:
          \$next\consume  = 9'h000;
    endcase
  end
  assign \$6  = \$9 ;
  assign \$23  = \$26 ;
  assign \$32  = \$35 ;
  assign \$51  = \$52 ;
  assign \$66  = \$67 ;
  assign rdport_storage_r_en = \$next\rdport_storage_r_en ;
  assign dout = \$next\dout ;
  assign rdport_storage_r_addr = \$next\rdport_storage_r_addr ;
  assign wrport_storage_w_en = \$next\wrport_storage_w_en ;
  assign wrport_storage_w_data = \$next\wrport_storage_w_data ;
  assign wrport_storage_w_addr = \$next\wrport_storage_w_addr ;
  assign readable = \$next\readable ;
  assign writable = \$next\writable ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.vbits_to_cbits" *)
(* generator = "nMigen" *)
module vbits_to_cbits(enc_in_ctr, in_end, valid_in, busy_in, rst, clk, latch_input, data_out, valid_out, end_out, enc_in);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:233" *)
  reg [15:0] \$next\data_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:235" *)
  reg \$next\end_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:119" *)
  reg \$next\input_handler_dec_buff ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:107" *)
  reg [23:0] \$next\input_handler_enc_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:108" *)
  reg [4:0] \$next\input_handler_enc_in_ctr ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:109" *)
  reg \$next\input_handler_in_end ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:110" *)
  reg \$next\input_handler_valid_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:227" *)
  reg \$next\latch_input ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:24" *)
  reg [6:0] \$next\output_handler_buff_consum ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:23" *)
  reg [83:0] \$next\output_handler_buffer ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:20" *)
  reg \$next\output_handler_busy_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:31" *)
  reg \$next\output_handler_end_in ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:25" *)
  reg [6:0] \$next\output_handler_new_buff_consum ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:26" *)
  reg \$next\output_handler_new_buff_consum_actv ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:234" *)
  reg \$next\valid_out ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:236" *)
  input busy_in;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/mem.py:97" *)
  input clk;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:233" *)
  output [15:0] data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:228" *)
  input [23:0] enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:229" *)
  input [4:0] enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:235" *)
  output end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:230" *)
  input in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:114" *)
  wire [6:0] input_handler_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:113" *)
  wire [83:0] input_handler_buffer;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:119" *)
  wire input_handler_dec_buff;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:107" *)
  wire [23:0] input_handler_enc_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:108" *)
  wire [4:0] input_handler_enc_in_ctr;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:122" *)
  wire input_handler_end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:109" *)
  wire input_handler_in_end;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:106" *)
  wire input_handler_latch_input;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:115" *)
  wire [6:0] input_handler_new_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:116" *)
  wire input_handler_new_buff_consum_actv;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:110" *)
  wire input_handler_valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:227" *)
  output latch_input;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:24" *)
  wire [6:0] output_handler_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:23" *)
  wire [83:0] output_handler_buffer;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:20" *)
  wire output_handler_busy_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:17" *)
  wire [15:0] output_handler_data_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:28" *)
  wire output_handler_dec_buff_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:31" *)
  wire output_handler_end_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:19" *)
  wire output_handler_end_out;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:25" *)
  wire [6:0] output_handler_new_buff_consum;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:26" *)
  wire output_handler_new_buff_consum_actv;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:18" *)
  wire output_handler_valid_out;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:231" *)
  input valid_in;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits.py:234" *)
  output valid_out;
  input_handler input_handler (
    .buff_consum(input_handler_buff_consum),
    .buffer(input_handler_buffer),
    .clk(clk),
    .dec_buff(input_handler_dec_buff),
    .enc_in(input_handler_enc_in),
    .enc_in_ctr(input_handler_enc_in_ctr),
    .end_out(input_handler_end_out),
    .in_end(input_handler_in_end),
    .latch_input(input_handler_latch_input),
    .new_buff_consum(input_handler_new_buff_consum),
    .new_buff_consum_actv(input_handler_new_buff_consum_actv),
    .rst(rst),
    .valid_in(input_handler_valid_in)
  );
  output_handler output_handler (
    .buff_consum(output_handler_buff_consum),
    .buffer(output_handler_buffer),
    .busy_in(output_handler_busy_in),
    .clk(clk),
    .data_out(output_handler_data_out),
    .dec_buff_out(output_handler_dec_buff_out),
    .end_in(output_handler_end_in),
    .end_out(output_handler_end_out),
    .new_buff_consum(output_handler_new_buff_consum),
    .new_buff_consum_actv(output_handler_new_buff_consum_actv),
    .rst(rst),
    .valid_out(output_handler_valid_out)
  );
  always @* begin
    \$next\latch_input  = 1'h0;
    \$next\latch_input  = input_handler_latch_input;
  end
  always @* begin
    \$next\input_handler_enc_in  = 24'h000000;
    \$next\input_handler_enc_in  = enc_in;
  end
  always @* begin
    \$next\output_handler_new_buff_consum_actv  = 1'h0;
    \$next\output_handler_new_buff_consum_actv  = input_handler_new_buff_consum_actv;
  end
  always @* begin
    \$next\data_out  = 16'h0000;
    \$next\data_out  = output_handler_data_out;
  end
  always @* begin
    \$next\valid_out  = 1'h0;
    \$next\valid_out  = output_handler_valid_out;
  end
  always @* begin
    \$next\end_out  = 1'h0;
    \$next\end_out  = output_handler_end_out;
  end
  always @* begin
    \$next\output_handler_busy_in  = 1'h0;
    \$next\output_handler_busy_in  = busy_in;
  end
  always @* begin
    \$next\input_handler_enc_in_ctr  = 5'h00;
    \$next\input_handler_enc_in_ctr  = enc_in_ctr;
  end
  always @* begin
    \$next\input_handler_in_end  = 1'h0;
    \$next\input_handler_in_end  = in_end;
  end
  always @* begin
    \$next\input_handler_valid_in  = 1'h0;
    \$next\input_handler_valid_in  = valid_in;
  end
  always @* begin
    \$next\input_handler_dec_buff  = 1'h0;
    \$next\input_handler_dec_buff  = output_handler_dec_buff_out;
  end
  always @* begin
    \$next\output_handler_buffer  = 84'h000000000000000000000;
    \$next\output_handler_buffer  = input_handler_buffer;
  end
  always @* begin
    \$next\output_handler_buff_consum  = 7'h00;
    \$next\output_handler_buff_consum  = input_handler_buff_consum;
  end
  always @* begin
    \$next\output_handler_end_in  = 1'h0;
    \$next\output_handler_end_in  = input_handler_end_out;
  end
  always @* begin
    \$next\output_handler_new_buff_consum  = 7'h00;
    \$next\output_handler_new_buff_consum  = input_handler_new_buff_consum;
  end
  assign output_handler_busy_in = \$next\output_handler_busy_in ;
  assign end_out = \$next\end_out ;
  assign valid_out = \$next\valid_out ;
  assign data_out = \$next\data_out ;
  assign output_handler_new_buff_consum_actv = \$next\output_handler_new_buff_consum_actv ;
  assign output_handler_new_buff_consum = \$next\output_handler_new_buff_consum ;
  assign output_handler_end_in = \$next\output_handler_end_in ;
  assign output_handler_buff_consum = \$next\output_handler_buff_consum ;
  assign output_handler_buffer = \$next\output_handler_buffer ;
  assign input_handler_dec_buff = \$next\input_handler_dec_buff ;
  assign input_handler_valid_in = \$next\input_handler_valid_in ;
  assign input_handler_in_end = \$next\input_handler_in_end ;
  assign input_handler_enc_in_ctr = \$next\input_handler_enc_in_ctr ;
  assign input_handler_enc_in = \$next\input_handler_enc_in ;
  assign latch_input = \$next\latch_input ;
endmodule

(* \nmigen.hierarchy  = "top.top_module.integration_3.vbits_to_cbits_reg" *)
(* generator = "nMigen" *)
module vbits_to_cbits_reg(data_left, valid_left, end_left, o_busy, data_right, valid_right, end_right, i_busy);
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:26" *)
  reg [15:0] \$next\data_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:28" *)
  reg \$next\end_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:19" *)
  reg \$next\o_busy ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:27" *)
  reg \$next\valid_right ;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:20" *)
  input [15:0] data_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:26" *)
  output [15:0] data_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:22" *)
  input end_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:28" *)
  output end_right;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:25" *)
  input i_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:19" *)
  output o_busy;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:21" *)
  input valid_left;
  (* src = "/Users/faresmehanna/Projects/lj92/JPEG-1992-lossless-encoder-core/migen_src/vbits_to_cbits_reg.py:27" *)
  output valid_right;
  always @* begin
    \$next\o_busy  = 1'h0;
    \$next\o_busy  = i_busy;
  end
  always @* begin
    \$next\data_right  = 16'h0000;
    \$next\data_right  = data_left;
  end
  always @* begin
    \$next\valid_right  = 1'h0;
    \$next\valid_right  = valid_left;
  end
  always @* begin
    \$next\end_right  = 1'h0;
    \$next\end_right  = end_left;
  end
  assign end_right = \$next\end_right ;
  assign valid_right = \$next\valid_right ;
  assign data_right = \$next\data_right ;
  assign o_busy = \$next\o_busy ;
endmodule

