/* Generated by Yosys 0.8+     369 (git sha1 ea0e0722, clang 10.0.1 -fPIC -Os) */

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(enable, addr_empty, addr_in, m_axi_ri__rvalid, data_full, m_axi_ri__rlast, m_axi_ri__rresp, m_axi_ri__rdata, m_axi_aclk_, rst, clk, inactive, data_clk, data_enable, data_out, addr_clk, addr_enable, reader_error, reader_active, m_axi_ro__arid, m_axi_ro__araddr, m_axi_ro__arburst, m_axi_ro__arlen, m_axi_ro__arsize, m_axi_ro__arprot, m_axi_ro__arvalid, m_axi_ro__rready, m_axi_ri__arready);
  wire \$1 ;
  wire \$11 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$3 ;
  wire \$31 ;
  wire \$33 ;
  wire \$35 ;
  wire \$37 ;
  wire \$39 ;
  wire \$41 ;
  wire \$43 ;
  wire \$45 ;
  wire \$47 ;
  wire \$49 ;
  wire \$5 ;
  wire [4:0] \$51 ;
  wire [4:0] \$52 ;
  wire [4:0] \$54 ;
  wire [4:0] \$55 ;
  wire \$57 ;
  wire \$7 ;
  wire \$9 ;
  (* src = "./migen_src/axihp_reader.py:69" *)
  reg [3:0] \$next\active ;
  (* src = "./migen_src/axihp_reader.py:25" *)
  reg \$next\addr_clk ;
  (* src = "./migen_src/axihp_reader.py:75" *)
  reg \$next\addr_en ;
  (* src = "./migen_src/axihp_reader.py:26" *)
  reg \$next\addr_enable ;
  (* src = "./migen_src/axihp_reader.py:66" *)
  reg [3:0] \$next\arlen_c ;
  (* src = "./migen_src/axihp_reader.py:70" *)
  reg \$next\arvalid ;
  (* src = "./migen_src/axihp_reader.py:20" *)
  reg \$next\data_clk ;
  (* src = "./migen_src/axihp_reader.py:74" *)
  reg \$next\data_en ;
  (* src = "./migen_src/axihp_reader.py:21" *)
  reg \$next\data_enable ;
  (* src = "./migen_src/axihp_reader.py:22" *)
  reg [63:0] \$next\data_out ;
  (* src = "./migen_src/axihp_reader.py:15" *)
  reg \$next\inactive ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  reg [31:0] \$next\m_axi_ro__araddr ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  reg [1:0] \$next\m_axi_ro__arburst ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  reg [5:0] \$next\m_axi_ro__arid ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  reg [3:0] \$next\m_axi_ro__arlen ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  reg [2:0] \$next\m_axi_ro__arprot ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  reg [1:0] \$next\m_axi_ro__arsize ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  reg \$next\m_axi_ro__arvalid ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  reg \$next\m_axi_ro__rready ;
  (* src = "./migen_src/axihp_reader.py:31" *)
  reg [3:0] \$next\reader_active ;
  (* src = "./migen_src/axihp_reader.py:30" *)
  reg \$next\reader_error ;
  (* src = "./migen_src/axihp_reader.py:72" *)
  reg \$next\rready ;
  (* init = 1'h0 *)
  reg \$verilog_initial_trigger  = 1'h0;
  (* init = 4'h0 *)
  (* src = "./migen_src/axihp_reader.py:69" *)
  reg [3:0] active = 4'h0;
  (* src = "./migen_src/axihp_reader.py:25" *)
  output addr_clk;
  (* src = "./migen_src/axihp_reader.py:28" *)
  input addr_empty;
  (* src = "./migen_src/axihp_reader.py:75" *)
  wire addr_en;
  (* src = "./migen_src/axihp_reader.py:26" *)
  output addr_enable;
  (* src = "./migen_src/axihp_reader.py:27" *)
  input [31:0] addr_in;
  (* src = "./migen_src/axihp_reader.py:66" *)
  wire [3:0] arlen_c;
  (* init = 1'h0 *)
  (* src = "./migen_src/axihp_reader.py:70" *)
  reg arvalid = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input clk;
  (* src = "./migen_src/axihp_reader.py:20" *)
  output data_clk;
  (* src = "./migen_src/axihp_reader.py:74" *)
  wire data_en;
  (* src = "./migen_src/axihp_reader.py:21" *)
  output data_enable;
  (* src = "./migen_src/axihp_reader.py:23" *)
  input data_full;
  (* src = "./migen_src/axihp_reader.py:22" *)
  output [63:0] data_out;
  (* src = "./migen_src/axihp_reader.py:14" *)
  input enable;
  (* src = "./migen_src/axihp_reader.py:15" *)
  output inactive;
  (* src = "./migen_src/axihp_reader.py:12" *)
  input m_axi_aclk_;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  input m_axi_ri__arready;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  input [63:0] m_axi_ri__rdata;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  input m_axi_ri__rlast;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  input [1:0] m_axi_ri__rresp;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  input m_axi_ri__rvalid;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  output [31:0] m_axi_ro__araddr;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  output [1:0] m_axi_ro__arburst;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  output [5:0] m_axi_ro__arid;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  output [3:0] m_axi_ro__arlen;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  output [2:0] m_axi_ro__arprot;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  output [1:0] m_axi_ro__arsize;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  output m_axi_ro__arvalid;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/rec.py:84" *)
  output m_axi_ro__rready;
  (* src = "./migen_src/axihp_reader.py:31" *)
  output [3:0] reader_active;
  (* src = "./migen_src/axihp_reader.py:30" *)
  output reader_error;
  (* init = 1'h0 *)
  (* src = "./migen_src/axihp_reader.py:72" *)
  reg rready = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  assign \$9  = enable == (* src = "./migen_src/axihp_reader.py:88" *) 1'h1;
  assign \$11  = addr_empty == (* src = "./migen_src/axihp_reader.py:88" *) 1'h0;
  assign \$13  = \$9  & (* src = "./migen_src/axihp_reader.py:88" *) \$11 ;
  assign \$15  = active[3] == (* src = "./migen_src/axihp_reader.py:88" *) 1'h0;
  assign \$17  = \$13  & (* src = "./migen_src/axihp_reader.py:88" *) \$15 ;
  assign \$1  = arvalid == (* src = "./migen_src/axihp_reader.py:83" *) 1'h1;
  assign \$19  = rready == (* src = "./migen_src/axihp_reader.py:107" *) 1'h1;
  assign \$21  = m_axi_ri__rvalid == (* src = "./migen_src/axihp_reader.py:107" *) 1'h1;
  assign \$23  = \$19  & (* src = "./migen_src/axihp_reader.py:107" *) \$21 ;
  assign \$25  = rready == (* src = "./migen_src/axihp_reader.py:110" *) 1'h0;
  assign \$27  = data_full == (* src = "./migen_src/axihp_reader.py:112" *) 1'h0;
  assign \$29  = active != (* src = "./migen_src/axihp_reader.py:112" *) 1'h0;
  assign \$31  = \$27  & (* src = "./migen_src/axihp_reader.py:112" *) \$29 ;
  assign \$33  = data_en == (* src = "./migen_src/axihp_reader.py:121" *) 1'h1;
  assign \$35  = m_axi_ri__rresp != (* src = "./migen_src/axihp_reader.py:121" *) 1'h0;
  assign \$37  = \$33  & (* src = "./migen_src/axihp_reader.py:121" *) \$35 ;
  assign \$3  = m_axi_ri__arready == (* src = "./migen_src/axihp_reader.py:83" *) 1'h1;
  assign \$39  = addr_en == (* src = "./migen_src/axihp_reader.py:133" *) 1'h1;
  assign \$41  = m_axi_ri__rlast == (* src = "./migen_src/axihp_reader.py:133" *) 1'h0;
  assign \$43  = \$39  & (* src = "./migen_src/axihp_reader.py:133" *) \$41 ;
  assign \$45  = addr_en == (* src = "./migen_src/axihp_reader.py:137" *) 1'h0;
  assign \$47  = m_axi_ri__rlast == (* src = "./migen_src/axihp_reader.py:137" *) 1'h1;
  assign \$49  = \$45  & (* src = "./migen_src/axihp_reader.py:137" *) \$47 ;
  assign \$52  = active + (* src = "./migen_src/axihp_reader.py:134" *) 1'h1;
  assign \$55  = active - (* src = "./migen_src/axihp_reader.py:138" *) 1'h1;
  assign \$57  = active == (* src = "./migen_src/axihp_reader.py:140" *) 1'h0;
  assign \$5  = \$1  & (* src = "./migen_src/axihp_reader.py:83" *) \$3 ;
  assign \$7  = arvalid == (* src = "./migen_src/axihp_reader.py:86" *) 1'h0;
  always @(posedge clk)
      active <= \$next\active ;
  always @(posedge clk)
      rready <= \$next\rready ;
  always @(posedge clk)
      arvalid <= \$next\arvalid ;
  always @* begin
    \$next\arlen_c  = 4'h0;
    \$next\arlen_c  = 4'hf;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    \$next\addr_en  = 1'h0;
    \$next\addr_en  = \$5 ;
  end
  always @* begin
    \$next\m_axi_ro__rready  = 1'h0;
    \$next\m_axi_ro__rready  = rready;
  end
  always @* begin
    \$next\data_enable  = 1'h0;
    \$next\data_enable  = data_en;
  end
  always @* begin
    \$next\active  = active;
    casez ({ \$49 , \$43  })
      2'bz1:
          \$next\active  = \$51 [3:0];
      2'b1z:
          \$next\active  = \$54 [3:0];
    endcase
    casez (rst)
      1'h1:
          \$next\active  = 4'h0;
    endcase
  end
  always @* begin
    \$next\inactive  = 1'h0;
    \$next\inactive  = \$57 ;
  end
  always @* begin
    \$next\m_axi_ro__arid  = 6'h00;
    \$next\m_axi_ro__arid  = 6'h00;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    \$next\m_axi_ro__arlen  = 4'h0;
    \$next\m_axi_ro__arlen  = arlen_c;
  end
  always @* begin
    \$next\m_axi_ro__arburst  = 2'h0;
    \$next\m_axi_ro__arburst  = 2'h1;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    \$next\m_axi_ro__arsize  = 2'h0;
    \$next\m_axi_ro__arsize  = 2'h3;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    \$next\m_axi_ro__arprot  = 3'h0;
    \$next\m_axi_ro__arprot  = 3'h0;
    \$verilog_initial_trigger  = \$verilog_initial_trigger ;
  end
  always @* begin
    \$next\data_clk  = 1'h0;
    \$next\data_clk  = m_axi_aclk_;
  end
  always @* begin
    \$next\arvalid  = arvalid;
    casez (\$7 )
      1'h1:
          casez (\$17 )
            1'h1:
                \$next\arvalid  = 1'h1;
          endcase
    endcase
    casez (arvalid)
      1'h1:
          casez (m_axi_ri__arready)
            1'h1:
                \$next\arvalid  = 1'h0;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\arvalid  = 1'h0;
    endcase
  end
  always @* begin
    \$next\addr_clk  = 1'h0;
    \$next\addr_clk  = m_axi_aclk_;
  end
  always @* begin
    \$next\reader_active  = 4'h0;
    \$next\reader_active  = active;
  end
  always @* begin
    \$next\m_axi_ro__araddr  = 32'd0;
    \$next\m_axi_ro__araddr  = addr_in;
  end
  always @* begin
    \$next\m_axi_ro__arvalid  = 1'h0;
    \$next\m_axi_ro__arvalid  = arvalid;
  end
  always @* begin
    \$next\addr_enable  = 1'h0;
    \$next\addr_enable  = addr_en;
  end
  always @* begin
    \$next\data_en  = 1'h0;
    \$next\data_en  = \$23 ;
  end
  always @* begin
    \$next\rready  = rready;
    casez (\$25 )
      1'h1:
          casez (\$31 )
            1'h1:
                \$next\rready  = 1'h1;
          endcase
      1'hz:
          casez (m_axi_ri__rlast)
            1'h1:
                \$next\rready  = 1'h0;
          endcase
    endcase
    casez (rst)
      1'h1:
          \$next\rready  = 1'h0;
    endcase
  end
  always @* begin
    \$next\reader_error  = 1'h0;
    \$next\reader_error  = \$37 ;
  end
  always @* begin
    \$next\data_out  = 64'h0000000000000000;
    \$next\data_out  = m_axi_ri__rdata;
  end
  assign \$51  = \$52 ;
  assign \$54  = \$55 ;
  assign reader_active = \$next\reader_active ;
  assign addr_clk = \$next\addr_clk ;
  assign data_clk = \$next\data_clk ;
  assign m_axi_ro__arprot = \$next\m_axi_ro__arprot ;
  assign m_axi_ro__arsize = \$next\m_axi_ro__arsize ;
  assign m_axi_ro__arburst = \$next\m_axi_ro__arburst ;
  assign m_axi_ro__arlen = \$next\m_axi_ro__arlen ;
  assign m_axi_ro__arid = \$next\m_axi_ro__arid ;
  assign inactive = \$next\inactive ;
  assign data_enable = \$next\data_enable ;
  assign m_axi_ro__rready = \$next\m_axi_ro__rready ;
  assign data_out = \$next\data_out ;
  assign reader_error = \$next\reader_error ;
  assign data_en = \$next\data_en ;
  assign addr_enable = \$next\addr_enable ;
  assign m_axi_ro__arvalid = \$next\m_axi_ro__arvalid ;
  assign m_axi_ro__araddr = \$next\m_axi_ro__araddr ;
  assign addr_en = \$next\addr_en ;
  assign arlen_c = \$next\arlen_c ;
endmodule

