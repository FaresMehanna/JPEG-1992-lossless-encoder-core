/* Generated by Yosys 0.8+     369 (git sha1 ea0e0722, clang 10.0.1 -fPIC -Os) */

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(valid_left, enc_left, enc_ctr_left, out_end_left, rst, clk, o_busy, enc_right, enc_ctr_right, out_end_right, valid_right, i_busy);
  wire \$1 ;
  wire \$11 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire \$25 ;
  wire \$27 ;
  wire \$29 ;
  wire \$3 ;
  wire \$31 ;
  wire \$33 ;
  wire \$35 ;
  wire \$37 ;
  wire \$39 ;
  wire \$41 ;
  wire \$43 ;
  wire \$45 ;
  wire \$47 ;
  wire \$49 ;
  wire \$5 ;
  wire \$51 ;
  wire \$53 ;
  wire \$55 ;
  wire \$57 ;
  wire \$59 ;
  wire \$61 ;
  wire \$63 ;
  wire \$65 ;
  wire \$67 ;
  wire \$69 ;
  wire \$7 ;
  wire \$71 ;
  wire \$73 ;
  wire \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$81 ;
  wire \$83 ;
  wire \$85 ;
  wire \$9 ;
  (* src = "./migen_src/pipeline_fifo_reg.py:52" *)
  reg \$next\data_out_valid ;
  (* src = "./migen_src/pipeline_fifo_reg.py:30" *)
  reg [6:0] \$next\enc_ctr_right ;
  (* src = "./migen_src/pipeline_fifo_reg.py:49" *)
  reg [6:0] \$next\enc_ctr_right_reg ;
  (* src = "./migen_src/pipeline_fifo_reg.py:29" *)
  reg [111:0] \$next\enc_right ;
  (* src = "./migen_src/pipeline_fifo_reg.py:48" *)
  reg [111:0] \$next\enc_right_reg ;
  (* src = "./migen_src/pipeline_fifo_reg.py:21" *)
  reg \$next\o_busy ;
  (* src = "./migen_src/pipeline_fifo_reg.py:31" *)
  reg \$next\out_end_right ;
  (* src = "./migen_src/pipeline_fifo_reg.py:50" *)
  reg \$next\out_end_right_reg ;
  (* src = "./migen_src/pipeline_fifo_reg.py:32" *)
  reg \$next\valid_right ;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input clk;
  (* init = 1'h0 *)
  (* src = "./migen_src/pipeline_fifo_reg.py:52" *)
  reg data_out_valid = 1'h0;
  (* src = "./migen_src/pipeline_fifo_reg.py:23" *)
  input [6:0] enc_ctr_left;
  (* init = 7'h00 *)
  (* src = "./migen_src/pipeline_fifo_reg.py:30" *)
  output [6:0] enc_ctr_right;
  reg [6:0] enc_ctr_right = 7'h00;
  (* init = 7'h00 *)
  (* src = "./migen_src/pipeline_fifo_reg.py:49" *)
  reg [6:0] enc_ctr_right_reg = 7'h00;
  (* src = "./migen_src/pipeline_fifo_reg.py:22" *)
  input [111:0] enc_left;
  (* init = 112'h0000000000000000000000000000 *)
  (* src = "./migen_src/pipeline_fifo_reg.py:29" *)
  output [111:0] enc_right;
  reg [111:0] enc_right = 112'h0000000000000000000000000000;
  (* init = 112'h0000000000000000000000000000 *)
  (* src = "./migen_src/pipeline_fifo_reg.py:48" *)
  reg [111:0] enc_right_reg = 112'h0000000000000000000000000000;
  (* src = "./migen_src/pipeline_fifo_reg.py:28" *)
  input i_busy;
  (* init = 1'h0 *)
  (* src = "./migen_src/pipeline_fifo_reg.py:21" *)
  output o_busy;
  reg o_busy = 1'h0;
  (* src = "./migen_src/pipeline_fifo_reg.py:24" *)
  input out_end_left;
  (* init = 1'h0 *)
  (* src = "./migen_src/pipeline_fifo_reg.py:31" *)
  output out_end_right;
  reg out_end_right = 1'h0;
  (* init = 1'h0 *)
  (* src = "./migen_src/pipeline_fifo_reg.py:50" *)
  reg out_end_right_reg = 1'h0;
  (* src = "/anaconda3/envs/py36/lib/python3.6/site-packages/nmigen/hdl/ir.py:329" *)
  input rst;
  (* src = "./migen_src/pipeline_fifo_reg.py:25" *)
  input valid_left;
  (* init = 1'h0 *)
  (* src = "./migen_src/pipeline_fifo_reg.py:32" *)
  output valid_right;
  reg valid_right = 1'h0;
  assign \$9  = \$5  & (* src = "./migen_src/pipeline_fifo_reg.py:90" *) \$7 ;
  assign \$11  = data_out_valid == (* src = "./migen_src/pipeline_fifo_reg.py:56" *) 1'h0;
  assign \$13  = i_busy == (* src = "./migen_src/pipeline_fifo_reg.py:55" *) 1'h0;
  assign \$15  = valid_right == (* src = "./migen_src/pipeline_fifo_reg.py:77" *) 1'h0;
  assign \$17  = valid_left == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h1;
  assign \$1  = i_busy == (* src = "./migen_src/pipeline_fifo_reg.py:55" *) 1'h0;
  assign \$19  = o_busy == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h0;
  assign \$21  = \$17  & (* src = "./migen_src/pipeline_fifo_reg.py:90" *) \$19 ;
  assign \$23  = data_out_valid == (* src = "./migen_src/pipeline_fifo_reg.py:56" *) 1'h0;
  assign \$25  = i_busy == (* src = "./migen_src/pipeline_fifo_reg.py:55" *) 1'h0;
  assign \$27  = valid_right == (* src = "./migen_src/pipeline_fifo_reg.py:77" *) 1'h0;
  assign \$29  = valid_left == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h1;
  assign \$31  = o_busy == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h0;
  assign \$33  = \$29  & (* src = "./migen_src/pipeline_fifo_reg.py:90" *) \$31 ;
  assign \$35  = data_out_valid == (* src = "./migen_src/pipeline_fifo_reg.py:56" *) 1'h0;
  assign \$37  = i_busy == (* src = "./migen_src/pipeline_fifo_reg.py:55" *) 1'h0;
  assign \$3  = valid_right == (* src = "./migen_src/pipeline_fifo_reg.py:77" *) 1'h0;
  assign \$39  = valid_right == (* src = "./migen_src/pipeline_fifo_reg.py:77" *) 1'h0;
  assign \$41  = valid_left == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h1;
  assign \$43  = o_busy == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h0;
  assign \$45  = \$41  & (* src = "./migen_src/pipeline_fifo_reg.py:90" *) \$43 ;
  assign \$47  = data_out_valid == (* src = "./migen_src/pipeline_fifo_reg.py:56" *) 1'h0;
  assign \$49  = i_busy == (* src = "./migen_src/pipeline_fifo_reg.py:55" *) 1'h0;
  assign \$51  = valid_right == (* src = "./migen_src/pipeline_fifo_reg.py:77" *) 1'h0;
  assign \$53  = valid_left == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h1;
  assign \$55  = o_busy == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h0;
  assign \$57  = \$53  & (* src = "./migen_src/pipeline_fifo_reg.py:90" *) \$55 ;
  assign \$5  = valid_left == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h1;
  assign \$59  = valid_left == (* src = "./migen_src/pipeline_fifo_reg.py:93" *) 1'h1;
  assign \$61  = valid_right == (* src = "./migen_src/pipeline_fifo_reg.py:93" *) 1'h1;
  assign \$63  = \$59  & (* src = "./migen_src/pipeline_fifo_reg.py:93" *) \$61 ;
  assign \$65  = i_busy == (* src = "./migen_src/pipeline_fifo_reg.py:55" *) 1'h0;
  assign \$67  = valid_right == (* src = "./migen_src/pipeline_fifo_reg.py:77" *) 1'h0;
  assign \$69  = valid_left == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h1;
  assign \$71  = o_busy == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h0;
  assign \$73  = \$69  & (* src = "./migen_src/pipeline_fifo_reg.py:90" *) \$71 ;
  assign \$75  = valid_left == (* src = "./migen_src/pipeline_fifo_reg.py:92" *) 1'h1;
  assign \$77  = valid_right == (* src = "./migen_src/pipeline_fifo_reg.py:92" *) 1'h1;
  assign \$7  = o_busy == (* src = "./migen_src/pipeline_fifo_reg.py:90" *) 1'h0;
  assign \$79  = \$75  & (* src = "./migen_src/pipeline_fifo_reg.py:92" *) \$77 ;
  assign \$81  = o_busy == (* src = "./migen_src/pipeline_fifo_reg.py:96" *) 1'h0;
  assign \$83  = o_busy == (* src = "./migen_src/pipeline_fifo_reg.py:96" *) 1'h0;
  assign \$85  = o_busy == (* src = "./migen_src/pipeline_fifo_reg.py:96" *) 1'h0;
  always @(posedge clk)
      out_end_right_reg <= \$next\out_end_right_reg ;
  always @(posedge clk)
      enc_ctr_right_reg <= \$next\enc_ctr_right_reg ;
  always @(posedge clk)
      enc_right_reg <= \$next\enc_right_reg ;
  always @(posedge clk)
      data_out_valid <= \$next\data_out_valid ;
  always @(posedge clk)
      o_busy <= \$next\o_busy ;
  always @(posedge clk)
      valid_right <= \$next\valid_right ;
  always @(posedge clk)
      out_end_right <= \$next\out_end_right ;
  always @(posedge clk)
      enc_ctr_right <= \$next\enc_ctr_right ;
  always @(posedge clk)
      enc_right <= \$next\enc_right ;
  always @* begin
    \$next\enc_right  = enc_right;
    casez ({ \$9 , \$3 , \$1  })
      3'bzz1:
          casez (\$11 )
            1'h1:
                \$next\enc_right  = enc_left;
            1'hz:
                \$next\enc_right  = enc_right_reg;
          endcase
      3'bz1z:
          \$next\enc_right  = enc_left;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_right  = 112'h0000000000000000000000000000;
    endcase
  end
  always @* begin
    \$next\enc_ctr_right  = enc_ctr_right;
    casez ({ \$21 , \$15 , \$13  })
      3'bzz1:
          casez (\$23 )
            1'h1:
                \$next\enc_ctr_right  = enc_ctr_left;
            1'hz:
                \$next\enc_ctr_right  = enc_ctr_right_reg;
          endcase
      3'bz1z:
          \$next\enc_ctr_right  = enc_ctr_left;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_ctr_right  = 7'h00;
    endcase
  end
  always @* begin
    \$next\out_end_right  = out_end_right;
    casez ({ \$33 , \$27 , \$25  })
      3'bzz1:
          casez (\$35 )
            1'h1:
                \$next\out_end_right  = out_end_left;
            1'hz:
                \$next\out_end_right  = out_end_right_reg;
          endcase
      3'bz1z:
          \$next\out_end_right  = out_end_left;
    endcase
    casez (rst)
      1'h1:
          \$next\out_end_right  = 1'h0;
    endcase
  end
  always @* begin
    \$next\valid_right  = valid_right;
    casez ({ \$45 , \$39 , \$37  })
      3'bzz1:
          casez (\$47 )
            1'h1:
                \$next\valid_right  = valid_left;
            1'hz:
                \$next\valid_right  = 1'h1;
          endcase
      3'bz1z:
          \$next\valid_right  = valid_left;
    endcase
    casez (rst)
      1'h1:
          \$next\valid_right  = 1'h0;
    endcase
  end
  always @* begin
    \$next\o_busy  = o_busy;
    casez ({ \$57 , \$51 , \$49  })
      3'bzz1:
          \$next\o_busy  = 1'h0;
      3'bz1z:
          \$next\o_busy  = 1'h0;
      3'b1zz:
          \$next\o_busy  = \$63 ;
    endcase
    casez (rst)
      1'h1:
          \$next\o_busy  = 1'h0;
    endcase
  end
  always @* begin
    \$next\data_out_valid  = data_out_valid;
    casez ({ \$73 , \$67 , \$65  })
      3'bzz1:
          \$next\data_out_valid  = 1'h0;
      3'bz1z:
          \$next\data_out_valid  = 1'h0;
      3'b1zz:
          \$next\data_out_valid  = \$79 ;
    endcase
    casez (rst)
      1'h1:
          \$next\data_out_valid  = 1'h0;
    endcase
  end
  always @* begin
    \$next\enc_right_reg  = enc_right_reg;
    casez (\$81 )
      1'h1:
          \$next\enc_right_reg  = enc_left;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_right_reg  = 112'h0000000000000000000000000000;
    endcase
  end
  always @* begin
    \$next\enc_ctr_right_reg  = enc_ctr_right_reg;
    casez (\$83 )
      1'h1:
          \$next\enc_ctr_right_reg  = enc_ctr_left;
    endcase
    casez (rst)
      1'h1:
          \$next\enc_ctr_right_reg  = 7'h00;
    endcase
  end
  always @* begin
    \$next\out_end_right_reg  = out_end_right_reg;
    casez (\$85 )
      1'h1:
          \$next\out_end_right_reg  = out_end_left;
    endcase
    casez (rst)
      1'h1:
          \$next\out_end_right_reg  = 1'h0;
    endcase
  end
endmodule

